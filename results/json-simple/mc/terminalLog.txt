WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.
[m06.11.2021 - 23:31:10.906 [INFO ] ParsingStrategy.parseTestSuiteFromFilePath() - Parsing test suite from File Path
[m[m06.11.2021 - 23:31:10.910 [INFO ] CompilationUnitExtractor.parseCompilationUnitsFromFilePath() - Collecting compilation units from File Path ./src/test/java
[m[m06.11.2021 - 23:31:11.214 [INFO ] ParsingStrategy.parseTestSuite() - Found 10 test cases
[m[m06.11.2021 - 23:31:11.217 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase org.json.simple.JSONValueTest::testByteArrayToString has 8 assertions: 
 assertEquals("null", JSONValue.toJSONString((byte[]) null)); ref {JSONValue} [15-15],
 assertEquals("[]", JSONValue.toJSONString(new byte[0])); ref {JSONValue} [16-16],
 assertEquals("[12]", JSONValue.toJSONString(new byte[] { 12 })); ref {JSONValue} [17-17],
 assertEquals("[-7,22,86,-99]", JSONValue.toJSONString(new byte[] { -7, 22, 86, -99 })); ref {JSONValue} [18-18],
 assertEquals("null", writer.toString()); ref {writer} [24-24],
 assertEquals("[]", writer.toString()); ref {writer} [28-28],
 assertEquals("[12]", writer.toString()); ref {writer} [32-32],
 assertEquals("[-7,22,86,-99]", writer.toString()); ref {writer} [36-36]
[m[m06.11.2021 - 23:31:11.218 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase org.json.simple.JSONValueTest::testShortArrayToString has 8 assertions: 
 assertEquals("null", JSONValue.toJSONString((short[]) null)); ref {JSONValue} [41-41],
 assertEquals("[]", JSONValue.toJSONString(new short[0])); ref {JSONValue} [42-42],
 assertEquals("[12]", JSONValue.toJSONString(new short[] { 12 })); ref {JSONValue} [43-43],
 assertEquals("[-7,22,86,-99]", JSONValue.toJSONString(new short[] { -7, 22, 86, -99 })); ref {JSONValue} [44-44],
 assertEquals("null", writer.toString()); ref {writer} [50-50],
 assertEquals("[]", writer.toString()); ref {writer} [54-54],
 assertEquals("[12]", writer.toString()); ref {writer} [58-58],
 assertEquals("[-7,22,86,-99]", writer.toString()); ref {writer} [62-62]
[m[m06.11.2021 - 23:31:11.219 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase org.json.simple.JSONValueTest::testIntArrayToString has 8 assertions: 
 assertEquals("null", JSONValue.toJSONString((int[]) null)); ref {JSONValue} [67-67],
 assertEquals("[]", JSONValue.toJSONString(new int[0])); ref {JSONValue} [68-68],
 assertEquals("[12]", JSONValue.toJSONString(new int[] { 12 })); ref {JSONValue} [69-69],
 assertEquals("[-7,22,86,-99]", JSONValue.toJSONString(new int[] { -7, 22, 86, -99 })); ref {JSONValue} [70-70],
 assertEquals("null", writer.toString()); ref {writer} [76-76],
 assertEquals("[]", writer.toString()); ref {writer} [80-80],
 assertEquals("[12]", writer.toString()); ref {writer} [84-84],
 assertEquals("[-7,22,86,-99]", writer.toString()); ref {writer} [88-88]
[m[m06.11.2021 - 23:31:11.220 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase org.json.simple.JSONValueTest::testLongArrayToString has 8 assertions: 
 assertEquals("null", JSONValue.toJSONString((long[]) null)); ref {JSONValue} [93-93],
 assertEquals("[]", JSONValue.toJSONString(new long[0])); ref {JSONValue} [94-94],
 assertEquals("[12]", JSONValue.toJSONString(new long[] { 12 })); ref {JSONValue} [95-95],
 assertEquals("[-7,22,9223372036854775807,-99]", JSONValue.toJSONString(new long[] { -7, 22, 9223372036854775807L, -99 })); ref {JSONValue} [96-96],
 assertEquals("null", writer.toString()); ref {writer} [102-102],
 assertEquals("[]", writer.toString()); ref {writer} [106-106],
 assertEquals("[12]", writer.toString()); ref {writer} [110-110],
 assertEquals("[-7,22,86,-99]", writer.toString()); ref {writer} [114-114]
[m[m06.11.2021 - 23:31:11.220 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase org.json.simple.JSONValueTest::testFloatArrayToString has 8 assertions: 
 assertEquals("null", JSONValue.toJSONString((float[]) null)); ref {JSONValue} [119-119],
 assertEquals("[]", JSONValue.toJSONString(new float[0])); ref {JSONValue} [120-120],
 assertEquals("[12.8]", JSONValue.toJSONString(new float[] { 12.8f })); ref {JSONValue} [121-121],
 assertEquals("[-7.1,22.234,86.7,-99.02]", JSONValue.toJSONString(new float[] { -7.1f, 22.234f, 86.7f, -99.02f })); ref {JSONValue} [122-122],
 assertEquals("null", writer.toString()); ref {writer} [128-128],
 assertEquals("[]", writer.toString()); ref {writer} [132-132],
 assertEquals("[12.8]", writer.toString()); ref {writer} [136-136],
 assertEquals("[-7.1,22.234,86.7,-99.02]", writer.toString()); ref {writer} [140-140]
[m[m06.11.2021 - 23:31:11.221 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase org.json.simple.JSONValueTest::testDoubleArrayToString has 8 assertions: 
 assertEquals("null", JSONValue.toJSONString((double[]) null)); ref {JSONValue} [145-145],
 assertEquals("[]", JSONValue.toJSONString(new double[0])); ref {JSONValue} [146-146],
 assertEquals("[12.8]", JSONValue.toJSONString(new double[] { 12.8 })); ref {JSONValue} [147-147],
 assertEquals("[-7.1,22.234,86.7,-99.02]", JSONValue.toJSONString(new double[] { -7.1, 22.234, 86.7, -99.02 })); ref {JSONValue} [148-148],
 assertEquals("null", writer.toString()); ref {writer} [154-154],
 assertEquals("[]", writer.toString()); ref {writer} [158-158],
 assertEquals("[12.8]", writer.toString()); ref {writer} [162-162],
 assertEquals("[-7.1,22.234,86.7,-99.02]", writer.toString()); ref {writer} [166-166]
[m[m06.11.2021 - 23:31:11.222 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase org.json.simple.JSONValueTest::testBooleanArrayToString has 8 assertions: 
 assertEquals("null", JSONValue.toJSONString((boolean[]) null)); ref {JSONValue} [171-171],
 assertEquals("[]", JSONValue.toJSONString(new boolean[0])); ref {JSONValue} [172-172],
 assertEquals("[true]", JSONValue.toJSONString(new boolean[] { true })); ref {JSONValue} [173-173],
 assertEquals("[true,false,true]", JSONValue.toJSONString(new boolean[] { true, false, true })); ref {JSONValue} [174-174],
 assertEquals("null", writer.toString()); ref {writer} [180-180],
 assertEquals("[]", writer.toString()); ref {writer} [184-184],
 assertEquals("[true]", writer.toString()); ref {writer} [188-188],
 assertEquals("[true,false,true]", writer.toString()); ref {writer} [192-192]
[m[m06.11.2021 - 23:31:11.223 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase org.json.simple.JSONValueTest::testCharArrayToString has 8 assertions: 
 assertEquals("null", JSONValue.toJSONString((char[]) null)); ref {JSONValue} [197-197],
 assertEquals("[]", JSONValue.toJSONString(new char[0])); ref {JSONValue} [198-198],
 assertEquals("[\"a\"]", JSONValue.toJSONString(new char[] { 'a' })); ref {JSONValue} [199-199],
 assertEquals("[\"a\",\"b\",\"c\"]", JSONValue.toJSONString(new char[] { 'a', 'b', 'c' })); ref {JSONValue} [200-200],
 assertEquals("null", writer.toString()); ref {writer} [206-206],
 assertEquals("[]", writer.toString()); ref {writer} [210-210],
 assertEquals("[\"a\"]", writer.toString()); ref {writer} [214-214],
 assertEquals("[\"a\",\"b\",\"c\"]", writer.toString()); ref {writer} [218-218]
[m[m06.11.2021 - 23:31:11.224 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase org.json.simple.JSONValueTest::testObjectArrayToString has 8 assertions: 
 assertEquals("null", JSONValue.toJSONString((Object[]) null)); ref {JSONValue} [223-223],
 assertEquals("[]", JSONValue.toJSONString(new Object[0])); ref {JSONValue} [224-224],
 assertEquals("[\"Hello\"]", JSONValue.toJSONString(new Object[] { "Hello" })); ref {JSONValue} [225-225],
 assertEquals("[\"Hello\",12,[1,2,3]]", JSONValue.toJSONString(new Object[] { "Hello", new Integer(12), new int[] { 1, 2, 3 } })); ref {JSONValue} [226-226],
 assertEquals("null", writer.toString()); ref {writer} [232-232],
 assertEquals("[]", writer.toString()); ref {writer} [236-236],
 assertEquals("[\"Hello\"]", writer.toString()); ref {writer} [240-240],
 assertEquals("[\"Hello\",12,[1,2,3]]", writer.toString()); ref {writer} [244-244]
[m[m06.11.2021 - 23:31:11.224 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase org.json.simple.JSONValueTest::testArraysOfArrays has 4 assertions: 
 assertEquals(expectedNestedIntString, JSONValue.toJSONString(nestedIntArray)); ref {JSONValue, nestedIntArray, expectedNestedIntString} [255-255],
 assertEquals(expectedNestedIntString, writer.toString()); ref {expectedNestedIntString, writer} [259-259],
 assertEquals(expectedNestedStringString, JSONValue.toJSONString(nestedStringArray)); ref {JSONValue, expectedNestedStringString, nestedStringArray} [264-264],
 assertEquals(expectedNestedStringString, writer.toString()); ref {expectedNestedStringString, writer} [268-268]
[m[m06.11.2021 - 23:31:11.241 [INFO ] ParsingStrategy.parseTestSuite() - Found 2 test cases
[m[m06.11.2021 - 23:31:11.242 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase org.json.simple.Test1::testDecode has 18 assertions: 
 assertEquals("{\"1\":{\"2\":{\"3\":{\"4\":[5,{\"6\":7}]}}}}", array.get(1).toString()); ref {array} [42-42],
 assertEquals("{\"2\":{\"3\":{\"4\":[5,{\"6\":7}]}}}", obj2.get("1").toString()); ref {obj2} [47-47],
 assertEquals("{}", obj.toString()); ref {obj} [51-51],
 assertEquals("[5]", obj.toString()); ref {obj} [55-55],
 assertEquals("[5,2]", obj.toString()); ref {obj} [59-59],
 assertEquals("hello\bworld\"abc\tdef\\ghi\rjkl\n123ä¸­", ((List) obj).get(0).toString()); ref {obj} [63-63],
 assertEquals(ParseException.ERROR_UNEXPECTED_TOKEN, pe.getErrorType()); ref {pe, ParseException.ERROR_UNEXPECTED_TOKEN, ParseException} [71-71],
 assertEquals(8, pe.getPosition()); ref {pe} [72-72],
 assertEquals(ParseException.ERROR_UNEXPECTED_TOKEN, pe.getErrorType()); ref {pe, ParseException.ERROR_UNEXPECTED_TOKEN, ParseException} [80-80],
 assertEquals(8, pe.getPosition()); ref {pe} [81-81],
 assertEquals(ParseException.ERROR_UNEXPECTED_TOKEN, pe.getErrorType()); ref {pe, ParseException.ERROR_UNEXPECTED_TOKEN, ParseException} [90-90],
 assertEquals(6, pe.getPosition()); ref {pe} [91-91],
 assertEquals(24, pe.getPosition()); ref {pe} [100-100],
 assertEquals("{\"first\":123,\"second\":[4,5,6],\"third\":789}", JSONValue.toJSONString(json)); ref {JSONValue, json} [138-138],
 assertEquals("id1", keyFinder.getValue()); ref {keyFinder} [287-287],
 assertTrue(keyFinder.getValue() instanceof Number); ref {keyFinder} [289-289],
 assertEquals("123", String.valueOf(keyFinder.getValue())); ref {keyFinder, String} [290-290],
 assertTrue(null == keyFinder.getValue()); ref {keyFinder} [293-293]
[m[m06.11.2021 - 23:31:11.243 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase org.json.simple.Test1::testEncode has 8 assertions: 
 assertEquals("[\"abc\\u0010a\\/\",123,222.123,true]", array1.toString()); ref {array1} [314-314],
 assertEquals("{\"array1\":[\"abc\\u0010a\\/\",123,222.123,true]}", obj1.toString()); ref {obj1} [321-321],
 assertEquals("[\"abc\\u0010a\\/\",123,222.123,true,{}]", array1.toString()); ref {array1} [328-328],
 assertEquals("[\"abc\\u0010a\\/\",123,222.123,true,null]", JSONArray.toJSONString(list)); ref {JSONArray, list} [339-339],
 assertEquals("{\"array1\":[\"abc\\u0010a\\/\",123,222.123,true,null]}", JSONObject.toJSONString(map)); ref {JSONObject, map} [346-346],
 assertEquals("[{\"k11\":\"v11\",\"k12\":\"v12\",\"k13\":\"v13\"},{\"k21\":\"v21\",\"k22\":\"v22\",\"k23\":\"v23\"}]", jsonString); ref {jsonString} [362-362],
 assertEquals("[{\"k11\":\"v11\",\"k12\":\"v12\",\"k13\":\"v13\"},{\"k21\":\"v21\",\"k22\":\"v22\",\"k23\":\"v23\"}]", jsonString); ref {jsonString} [368-368],
 assertEquals("[{\"k11\":\"v11\",\"k12\":\"v12\",\"k13\":\"v13\",\"k14\":{\"k31\":\"v3\",\"k32\":123.45,\"k33\":false,\"k34\":null,\"k35\":[\"vvv\",\"1.23456789123456789\",true,null]}},{\"k21\":\"v21\",\"k22\":\"v22\",\"k23\":\"v23\"}]", jsonString); ref {jsonString} [386-386]
[m[m06.11.2021 - 23:31:11.247 [INFO ] ParsingStrategy.parseTestSuite() - Found 1 test case
[m[m06.11.2021 - 23:31:11.248 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase org.json.simple.parser.YylexTest::testYylex has 15 assertions: 
 assertEquals(Yytoken.TYPE_VALUE, token.type); ref {Yytoken, Yytoken.TYPE_VALUE, token.type, token} [21-21],
 assertEquals("/", token.value); ref {token.value, token} [22-22],
 assertEquals(Yytoken.TYPE_VALUE, token.type); ref {Yytoken, Yytoken.TYPE_VALUE, token.type, token} [29-29],
 assertEquals("abc/\r\b\n\t\f\\", token.value); ref {token.value, token} [30-30],
 assertEquals(Yytoken.TYPE_LEFT_SQUARE, token.type); ref {Yytoken, token.type, Yytoken.TYPE_LEFT_SQUARE, token} [37-37],
 assertEquals(Yytoken.TYPE_LEFT_BRACE, token.type); ref {Yytoken, token.type, Yytoken.TYPE_LEFT_BRACE, token} [39-39],
 assertEquals(Yytoken.TYPE_RIGHT_BRACE, token.type); ref {Yytoken, token.type, Yytoken.TYPE_RIGHT_BRACE, token} [41-41],
 assertEquals(ParseException.ERROR_UNEXPECTED_CHAR, e.getErrorType()); ref {ParseException.ERROR_UNEXPECTED_CHAR, e, ParseException} [54-54],
 assertEquals(0, e.getPosition()); ref {e} [55-55],
 assertEquals(new Character('\b'), e.getUnexpectedObject()); ref {e} [56-56],
 assertTrue(err != null); ref {err} [61-61],
 assertEquals(ParseException.ERROR_UNEXPECTED_CHAR, e.getErrorType()); ref {ParseException.ERROR_UNEXPECTED_CHAR, e, ParseException} [75-75],
 assertEquals(new Character('a'), e.getUnexpectedObject()); ref {e} [76-76],
 assertEquals(1, e.getPosition()); ref {e} [77-77],
 assertTrue(err != null); ref {err} [82-82]
[m[m06.11.2021 - 23:31:11.261 [INFO ] ParsingStrategy.parseTestSuite() - Found 13 test cases
[m[m06.11.2021 - 23:31:11.261 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase org.json.simple.JSONArrayTest::testJSONArray has 1 assertions: 
 assertEquals("[]", jsonArray.toJSONString()); ref {jsonArray} [23-23]
[m[m06.11.2021 - 23:31:11.262 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase org.json.simple.JSONArrayTest::testJSONArrayCollection has 1 assertions: 
 assertEquals("[\"First item\",\"Second item\"]", jsonArray.toJSONString()); ref {jsonArray} [34-34]
[m[m06.11.2021 - 23:31:11.262 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase org.json.simple.JSONArrayTest::testWriteJSONStringCollectionWriter has 3 assertions: 
 assertTrue(parsedArray.containsAll(jsonArray)); ref {parsedArray, jsonArray} [51-51],
 assertTrue(jsonArray.containsAll(parsedArray)); ref {jsonArray, parsedArray} [52-52],
 assertEquals(2, jsonArray.size()); ref {jsonArray} [53-53]
[m[m06.11.2021 - 23:31:11.262 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase org.json.simple.JSONArrayTest::testToJSONStringCollection has 3 assertions: 
 assertTrue(parsedArray.containsAll(jsonArray)); ref {parsedArray, jsonArray} [67-67],
 assertTrue(jsonArray.containsAll(parsedArray)); ref {jsonArray, parsedArray} [68-68],
 assertEquals(2, jsonArray.size()); ref {jsonArray} [69-69]
[m[m06.11.2021 - 23:31:11.263 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase org.json.simple.JSONArrayTest::testByteArrayToString has 8 assertions: 
 assertEquals("null", JSONArray.toJSONString((byte[]) null)); ref {JSONArray} [74-74],
 assertEquals("[]", JSONArray.toJSONString(new byte[0])); ref {JSONArray} [75-75],
 assertEquals("[12]", JSONArray.toJSONString(new byte[] { 12 })); ref {JSONArray} [76-76],
 assertEquals("[-7,22,86,-99]", JSONArray.toJSONString(new byte[] { -7, 22, 86, -99 })); ref {JSONArray} [77-77],
 assertEquals("null", writer.toString()); ref {writer} [83-83],
 assertEquals("[]", writer.toString()); ref {writer} [87-87],
 assertEquals("[12]", writer.toString()); ref {writer} [91-91],
 assertEquals("[-7,22,86,-99]", writer.toString()); ref {writer} [95-95]
[m[m06.11.2021 - 23:31:11.263 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase org.json.simple.JSONArrayTest::testShortArrayToString has 8 assertions: 
 assertEquals("null", JSONArray.toJSONString((short[]) null)); ref {JSONArray} [100-100],
 assertEquals("[]", JSONArray.toJSONString(new short[0])); ref {JSONArray} [101-101],
 assertEquals("[12]", JSONArray.toJSONString(new short[] { 12 })); ref {JSONArray} [102-102],
 assertEquals("[-7,22,86,-99]", JSONArray.toJSONString(new short[] { -7, 22, 86, -99 })); ref {JSONArray} [103-103],
 assertEquals("null", writer.toString()); ref {writer} [109-109],
 assertEquals("[]", writer.toString()); ref {writer} [113-113],
 assertEquals("[12]", writer.toString()); ref {writer} [117-117],
 assertEquals("[-7,22,86,-99]", writer.toString()); ref {writer} [121-121]
[m[m06.11.2021 - 23:31:11.264 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase org.json.simple.JSONArrayTest::testIntArrayToString has 8 assertions: 
 assertEquals("null", JSONArray.toJSONString((int[]) null)); ref {JSONArray} [126-126],
 assertEquals("[]", JSONArray.toJSONString(new int[0])); ref {JSONArray} [127-127],
 assertEquals("[12]", JSONArray.toJSONString(new int[] { 12 })); ref {JSONArray} [128-128],
 assertEquals("[-7,22,86,-99]", JSONArray.toJSONString(new int[] { -7, 22, 86, -99 })); ref {JSONArray} [129-129],
 assertEquals("null", writer.toString()); ref {writer} [135-135],
 assertEquals("[]", writer.toString()); ref {writer} [139-139],
 assertEquals("[12]", writer.toString()); ref {writer} [143-143],
 assertEquals("[-7,22,86,-99]", writer.toString()); ref {writer} [147-147]
[m[m06.11.2021 - 23:31:11.264 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase org.json.simple.JSONArrayTest::testLongArrayToString has 8 assertions: 
 assertEquals("null", JSONArray.toJSONString((long[]) null)); ref {JSONArray} [152-152],
 assertEquals("[]", JSONArray.toJSONString(new long[0])); ref {JSONArray} [153-153],
 assertEquals("[12]", JSONArray.toJSONString(new long[] { 12 })); ref {JSONArray} [154-154],
 assertEquals("[-7,22,9223372036854775807,-99]", JSONArray.toJSONString(new long[] { -7, 22, 9223372036854775807L, -99 })); ref {JSONArray} [155-155],
 assertEquals("null", writer.toString()); ref {writer} [161-161],
 assertEquals("[]", writer.toString()); ref {writer} [165-165],
 assertEquals("[12]", writer.toString()); ref {writer} [169-169],
 assertEquals("[-7,22,86,-99]", writer.toString()); ref {writer} [173-173]
[m[m06.11.2021 - 23:31:11.265 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase org.json.simple.JSONArrayTest::testFloatArrayToString has 8 assertions: 
 assertEquals("null", JSONArray.toJSONString((float[]) null)); ref {JSONArray} [178-178],
 assertEquals("[]", JSONArray.toJSONString(new float[0])); ref {JSONArray} [179-179],
 assertEquals("[12.8]", JSONArray.toJSONString(new float[] { 12.8f })); ref {JSONArray} [180-180],
 assertEquals("[-7.1,22.234,86.7,-99.02]", JSONArray.toJSONString(new float[] { -7.1f, 22.234f, 86.7f, -99.02f })); ref {JSONArray} [181-181],
 assertEquals("null", writer.toString()); ref {writer} [187-187],
 assertEquals("[]", writer.toString()); ref {writer} [191-191],
 assertEquals("[12.8]", writer.toString()); ref {writer} [195-195],
 assertEquals("[-7.1,22.234,86.7,-99.02]", writer.toString()); ref {writer} [199-199]
[m[m06.11.2021 - 23:31:11.265 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase org.json.simple.JSONArrayTest::testDoubleArrayToString has 8 assertions: 
 assertEquals("null", JSONArray.toJSONString((double[]) null)); ref {JSONArray} [204-204],
 assertEquals("[]", JSONArray.toJSONString(new double[0])); ref {JSONArray} [205-205],
 assertEquals("[12.8]", JSONArray.toJSONString(new double[] { 12.8 })); ref {JSONArray} [206-206],
 assertEquals("[-7.1,22.234,86.7,-99.02]", JSONArray.toJSONString(new double[] { -7.1, 22.234, 86.7, -99.02 })); ref {JSONArray} [207-207],
 assertEquals("null", writer.toString()); ref {writer} [213-213],
 assertEquals("[]", writer.toString()); ref {writer} [217-217],
 assertEquals("[12.8]", writer.toString()); ref {writer} [221-221],
 assertEquals("[-7.1,22.234,86.7,-99.02]", writer.toString()); ref {writer} [225-225]
[m[m06.11.2021 - 23:31:11.266 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase org.json.simple.JSONArrayTest::testBooleanArrayToString has 8 assertions: 
 assertEquals("null", JSONArray.toJSONString((boolean[]) null)); ref {JSONArray} [230-230],
 assertEquals("[]", JSONArray.toJSONString(new boolean[0])); ref {JSONArray} [231-231],
 assertEquals("[true]", JSONArray.toJSONString(new boolean[] { true })); ref {JSONArray} [232-232],
 assertEquals("[true,false,true]", JSONArray.toJSONString(new boolean[] { true, false, true })); ref {JSONArray} [233-233],
 assertEquals("null", writer.toString()); ref {writer} [239-239],
 assertEquals("[]", writer.toString()); ref {writer} [243-243],
 assertEquals("[true]", writer.toString()); ref {writer} [247-247],
 assertEquals("[true,false,true]", writer.toString()); ref {writer} [251-251]
[m[m06.11.2021 - 23:31:11.266 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase org.json.simple.JSONArrayTest::testCharArrayToString has 8 assertions: 
 assertEquals("null", JSONArray.toJSONString((char[]) null)); ref {JSONArray} [256-256],
 assertEquals("[]", JSONArray.toJSONString(new char[0])); ref {JSONArray} [257-257],
 assertEquals("[\"a\"]", JSONArray.toJSONString(new char[] { 'a' })); ref {JSONArray} [258-258],
 assertEquals("[\"a\",\"b\",\"c\"]", JSONArray.toJSONString(new char[] { 'a', 'b', 'c' })); ref {JSONArray} [259-259],
 assertEquals("null", writer.toString()); ref {writer} [265-265],
 assertEquals("[]", writer.toString()); ref {writer} [269-269],
 assertEquals("[\"a\"]", writer.toString()); ref {writer} [273-273],
 assertEquals("[\"a\",\"b\",\"c\"]", writer.toString()); ref {writer} [277-277]
[m[m06.11.2021 - 23:31:11.267 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase org.json.simple.JSONArrayTest::testObjectArrayToString has 8 assertions: 
 assertEquals("null", JSONArray.toJSONString((Object[]) null)); ref {JSONArray} [282-282],
 assertEquals("[]", JSONArray.toJSONString(new Object[0])); ref {JSONArray} [283-283],
 assertEquals("[\"Hello\"]", JSONArray.toJSONString(new Object[] { "Hello" })); ref {JSONArray} [284-284],
 assertEquals("[\"Hello\",12,[1,2,3]]", JSONArray.toJSONString(new Object[] { "Hello", new Integer(12), new int[] { 1, 2, 3 } })); ref {JSONArray} [285-285],
 assertEquals("null", writer.toString()); ref {writer} [291-291],
 assertEquals("[]", writer.toString()); ref {writer} [295-295],
 assertEquals("[\"Hello\"]", writer.toString()); ref {writer} [299-299],
 assertEquals("[\"Hello\",12,[1,2,3]]", writer.toString()); ref {writer} [303-303]
[m[m06.11.2021 - 23:31:11.268 [INFO ] ParsingStrategy.mergePartialSuites() - ====================================================================
[m[m06.11.2021 - 23:31:11.269 [INFO ] ParsingStrategy.mergePartialSuites() - Finished parsing the test suite.
[m[m06.11.2021 - 23:31:11.270 [INFO ] ParsingStrategy.mergePartialSuites() - It contains 26 test cases and 197 assertions.
[m[m06.11.2021 - 23:31:11.273 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 1/26
[m[m06.11.2021 - 23:31:11.273 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.json.simple.JSONValueTest#testByteArrayToString
[m[32m06.11.2021 - 23:31:11.274 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONValueTest#testByteArrayToString.exec,includes=org.json.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/json-simple/target/json-simple-1.1.1-fat-tests.jar SingleJUnitTestRunner org.json.simple.JSONValueTest#testByteArrayToString
[m[m06.11.2021 - 23:31:11.537 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m06.11.2021 - 23:31:11.538 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONValueTest#testByteArrayToString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/json-simple/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/json-simple/src/main/java --xml /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONValueTest#testByteArrayToString/report.xml
[m[m06.11.2021 - 23:31:11.779 [INFO ] MethodCoverageStrategy.createReport() - Report for org.json.simple.JSONValueTest#testByteArrayToString was generated successfully
[m[m06.11.2021 - 23:31:11.779 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 2/26
[m[m06.11.2021 - 23:31:11.780 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.json.simple.JSONValueTest#testShortArrayToString
[m[32m06.11.2021 - 23:31:11.780 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONValueTest#testShortArrayToString.exec,includes=org.json.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/json-simple/target/json-simple-1.1.1-fat-tests.jar SingleJUnitTestRunner org.json.simple.JSONValueTest#testShortArrayToString
[m[m06.11.2021 - 23:31:11.979 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m06.11.2021 - 23:31:11.980 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONValueTest#testShortArrayToString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/json-simple/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/json-simple/src/main/java --xml /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONValueTest#testShortArrayToString/report.xml
[m[m06.11.2021 - 23:31:12.202 [INFO ] MethodCoverageStrategy.createReport() - Report for org.json.simple.JSONValueTest#testShortArrayToString was generated successfully
[m[m06.11.2021 - 23:31:12.203 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 3/26
[m[m06.11.2021 - 23:31:12.203 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.json.simple.JSONValueTest#testIntArrayToString
[m[32m06.11.2021 - 23:31:12.204 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONValueTest#testIntArrayToString.exec,includes=org.json.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/json-simple/target/json-simple-1.1.1-fat-tests.jar SingleJUnitTestRunner org.json.simple.JSONValueTest#testIntArrayToString
[m[m06.11.2021 - 23:31:12.404 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m06.11.2021 - 23:31:12.404 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONValueTest#testIntArrayToString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/json-simple/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/json-simple/src/main/java --xml /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONValueTest#testIntArrayToString/report.xml
[m[m06.11.2021 - 23:31:12.643 [INFO ] MethodCoverageStrategy.createReport() - Report for org.json.simple.JSONValueTest#testIntArrayToString was generated successfully
[m[m06.11.2021 - 23:31:12.643 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 4/26
[m[m06.11.2021 - 23:31:12.644 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.json.simple.JSONValueTest#testLongArrayToString
[m[32m06.11.2021 - 23:31:12.644 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONValueTest#testLongArrayToString.exec,includes=org.json.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/json-simple/target/json-simple-1.1.1-fat-tests.jar SingleJUnitTestRunner org.json.simple.JSONValueTest#testLongArrayToString
[m[m06.11.2021 - 23:31:12.832 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m06.11.2021 - 23:31:12.839 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONValueTest#testLongArrayToString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/json-simple/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/json-simple/src/main/java --xml /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONValueTest#testLongArrayToString/report.xml
[m[m06.11.2021 - 23:31:13.058 [INFO ] MethodCoverageStrategy.createReport() - Report for org.json.simple.JSONValueTest#testLongArrayToString was generated successfully
[m[m06.11.2021 - 23:31:13.058 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 5/26
[m[m06.11.2021 - 23:31:13.059 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.json.simple.JSONValueTest#testFloatArrayToString
[m[32m06.11.2021 - 23:31:13.059 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONValueTest#testFloatArrayToString.exec,includes=org.json.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/json-simple/target/json-simple-1.1.1-fat-tests.jar SingleJUnitTestRunner org.json.simple.JSONValueTest#testFloatArrayToString
[m[m06.11.2021 - 23:31:13.237 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m06.11.2021 - 23:31:13.238 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONValueTest#testFloatArrayToString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/json-simple/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/json-simple/src/main/java --xml /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONValueTest#testFloatArrayToString/report.xml
[m[m06.11.2021 - 23:31:13.483 [INFO ] MethodCoverageStrategy.createReport() - Report for org.json.simple.JSONValueTest#testFloatArrayToString was generated successfully
[m[m06.11.2021 - 23:31:13.484 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 6/26
[m[m06.11.2021 - 23:31:13.484 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.json.simple.JSONValueTest#testDoubleArrayToString
[m[32m06.11.2021 - 23:31:13.484 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONValueTest#testDoubleArrayToString.exec,includes=org.json.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/json-simple/target/json-simple-1.1.1-fat-tests.jar SingleJUnitTestRunner org.json.simple.JSONValueTest#testDoubleArrayToString
[m[m06.11.2021 - 23:31:13.684 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m06.11.2021 - 23:31:13.685 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONValueTest#testDoubleArrayToString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/json-simple/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/json-simple/src/main/java --xml /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONValueTest#testDoubleArrayToString/report.xml
[m[m06.11.2021 - 23:31:13.912 [INFO ] MethodCoverageStrategy.createReport() - Report for org.json.simple.JSONValueTest#testDoubleArrayToString was generated successfully
[m[m06.11.2021 - 23:31:13.913 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 7/26
[m[m06.11.2021 - 23:31:13.914 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.json.simple.JSONValueTest#testBooleanArrayToString
[m[32m06.11.2021 - 23:31:13.914 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONValueTest#testBooleanArrayToString.exec,includes=org.json.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/json-simple/target/json-simple-1.1.1-fat-tests.jar SingleJUnitTestRunner org.json.simple.JSONValueTest#testBooleanArrayToString
[m[m06.11.2021 - 23:31:14.123 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m06.11.2021 - 23:31:14.125 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONValueTest#testBooleanArrayToString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/json-simple/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/json-simple/src/main/java --xml /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONValueTest#testBooleanArrayToString/report.xml
[m[m06.11.2021 - 23:31:14.353 [INFO ] MethodCoverageStrategy.createReport() - Report for org.json.simple.JSONValueTest#testBooleanArrayToString was generated successfully
[m[m06.11.2021 - 23:31:14.354 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 8/26
[m[m06.11.2021 - 23:31:14.354 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.json.simple.JSONValueTest#testCharArrayToString
[m[32m06.11.2021 - 23:31:14.354 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONValueTest#testCharArrayToString.exec,includes=org.json.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/json-simple/target/json-simple-1.1.1-fat-tests.jar SingleJUnitTestRunner org.json.simple.JSONValueTest#testCharArrayToString
[m[m06.11.2021 - 23:31:14.547 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m06.11.2021 - 23:31:14.547 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONValueTest#testCharArrayToString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/json-simple/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/json-simple/src/main/java --xml /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONValueTest#testCharArrayToString/report.xml
[m[m06.11.2021 - 23:31:14.790 [INFO ] MethodCoverageStrategy.createReport() - Report for org.json.simple.JSONValueTest#testCharArrayToString was generated successfully
[m[m06.11.2021 - 23:31:14.791 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 9/26
[m[m06.11.2021 - 23:31:14.791 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.json.simple.JSONValueTest#testObjectArrayToString
[m[32m06.11.2021 - 23:31:14.791 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONValueTest#testObjectArrayToString.exec,includes=org.json.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/json-simple/target/json-simple-1.1.1-fat-tests.jar SingleJUnitTestRunner org.json.simple.JSONValueTest#testObjectArrayToString
[m[m06.11.2021 - 23:31:14.992 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m06.11.2021 - 23:31:14.992 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONValueTest#testObjectArrayToString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/json-simple/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/json-simple/src/main/java --xml /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONValueTest#testObjectArrayToString/report.xml
[m[m06.11.2021 - 23:31:15.219 [INFO ] MethodCoverageStrategy.createReport() - Report for org.json.simple.JSONValueTest#testObjectArrayToString was generated successfully
[m[m06.11.2021 - 23:31:15.220 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 10/26
[m[m06.11.2021 - 23:31:15.220 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.json.simple.JSONValueTest#testArraysOfArrays
[m[32m06.11.2021 - 23:31:15.221 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONValueTest#testArraysOfArrays.exec,includes=org.json.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/json-simple/target/json-simple-1.1.1-fat-tests.jar SingleJUnitTestRunner org.json.simple.JSONValueTest#testArraysOfArrays
[m[m06.11.2021 - 23:31:15.461 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m06.11.2021 - 23:31:15.461 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONValueTest#testArraysOfArrays.exec --classfiles /home/lukas/workspace/master-benchmark/projects/json-simple/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/json-simple/src/main/java --xml /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONValueTest#testArraysOfArrays/report.xml
[m[m06.11.2021 - 23:31:15.686 [INFO ] MethodCoverageStrategy.createReport() - Report for org.json.simple.JSONValueTest#testArraysOfArrays was generated successfully
[m[m06.11.2021 - 23:31:15.686 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 11/26
[m[m06.11.2021 - 23:31:15.686 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.json.simple.Test1#testDecode
[m[32m06.11.2021 - 23:31:15.686 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.Test1#testDecode.exec,includes=org.json.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/json-simple/target/json-simple-1.1.1-fat-tests.jar SingleJUnitTestRunner org.json.simple.Test1#testDecode
[m[m06.11.2021 - 23:31:15.918 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m06.11.2021 - 23:31:15.918 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.Test1#testDecode.exec --classfiles /home/lukas/workspace/master-benchmark/projects/json-simple/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/json-simple/src/main/java --xml /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.Test1#testDecode/report.xml
[m[m06.11.2021 - 23:31:16.132 [INFO ] MethodCoverageStrategy.createReport() - Report for org.json.simple.Test1#testDecode was generated successfully
[m[m06.11.2021 - 23:31:16.133 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 12/26
[m[m06.11.2021 - 23:31:16.133 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.json.simple.Test1#testEncode
[m[32m06.11.2021 - 23:31:16.133 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.Test1#testEncode.exec,includes=org.json.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/json-simple/target/json-simple-1.1.1-fat-tests.jar SingleJUnitTestRunner org.json.simple.Test1#testEncode
[m[m06.11.2021 - 23:31:16.321 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m06.11.2021 - 23:31:16.321 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.Test1#testEncode.exec --classfiles /home/lukas/workspace/master-benchmark/projects/json-simple/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/json-simple/src/main/java --xml /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.Test1#testEncode/report.xml
[m[m06.11.2021 - 23:31:16.546 [INFO ] MethodCoverageStrategy.createReport() - Report for org.json.simple.Test1#testEncode was generated successfully
[m[m06.11.2021 - 23:31:16.547 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 13/26
[m[m06.11.2021 - 23:31:16.547 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.json.simple.parser.YylexTest#testYylex
[m[32m06.11.2021 - 23:31:16.548 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.parser.YylexTest#testYylex.exec,includes=org.json.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/json-simple/target/json-simple-1.1.1-fat-tests.jar SingleJUnitTestRunner org.json.simple.parser.YylexTest#testYylex
[m[m06.11.2021 - 23:31:16.787 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m06.11.2021 - 23:31:16.787 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.parser.YylexTest#testYylex.exec --classfiles /home/lukas/workspace/master-benchmark/projects/json-simple/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/json-simple/src/main/java --xml /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.parser.YylexTest#testYylex/report.xml
[m[m06.11.2021 - 23:31:17.030 [INFO ] MethodCoverageStrategy.createReport() - Report for org.json.simple.parser.YylexTest#testYylex was generated successfully
[m[m06.11.2021 - 23:31:17.030 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 14/26
[m[m06.11.2021 - 23:31:17.031 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.json.simple.JSONArrayTest#testJSONArray
[m[32m06.11.2021 - 23:31:17.031 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONArrayTest#testJSONArray.exec,includes=org.json.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/json-simple/target/json-simple-1.1.1-fat-tests.jar SingleJUnitTestRunner org.json.simple.JSONArrayTest#testJSONArray
[m[m06.11.2021 - 23:31:17.242 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m06.11.2021 - 23:31:17.242 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONArrayTest#testJSONArray.exec --classfiles /home/lukas/workspace/master-benchmark/projects/json-simple/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/json-simple/src/main/java --xml /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONArrayTest#testJSONArray/report.xml
[m[m06.11.2021 - 23:31:17.508 [INFO ] MethodCoverageStrategy.createReport() - Report for org.json.simple.JSONArrayTest#testJSONArray was generated successfully
[m[m06.11.2021 - 23:31:17.509 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 15/26
[m[m06.11.2021 - 23:31:17.509 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.json.simple.JSONArrayTest#testJSONArrayCollection
[m[32m06.11.2021 - 23:31:17.510 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONArrayTest#testJSONArrayCollection.exec,includes=org.json.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/json-simple/target/json-simple-1.1.1-fat-tests.jar SingleJUnitTestRunner org.json.simple.JSONArrayTest#testJSONArrayCollection
[m[m06.11.2021 - 23:31:17.717 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m06.11.2021 - 23:31:17.718 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONArrayTest#testJSONArrayCollection.exec --classfiles /home/lukas/workspace/master-benchmark/projects/json-simple/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/json-simple/src/main/java --xml /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONArrayTest#testJSONArrayCollection/report.xml
[m[m06.11.2021 - 23:31:17.959 [INFO ] MethodCoverageStrategy.createReport() - Report for org.json.simple.JSONArrayTest#testJSONArrayCollection was generated successfully
[m[m06.11.2021 - 23:31:17.960 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 16/26
[m[m06.11.2021 - 23:31:17.960 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.json.simple.JSONArrayTest#testWriteJSONStringCollectionWriter
[m[32m06.11.2021 - 23:31:17.961 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONArrayTest#testWriteJSONStringCollectionWriter.exec,includes=org.json.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/json-simple/target/json-simple-1.1.1-fat-tests.jar SingleJUnitTestRunner org.json.simple.JSONArrayTest#testWriteJSONStringCollectionWriter
[m[m06.11.2021 - 23:31:18.217 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m06.11.2021 - 23:31:18.217 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONArrayTest#testWriteJSONStringCollectionWriter.exec --classfiles /home/lukas/workspace/master-benchmark/projects/json-simple/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/json-simple/src/main/java --xml /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONArrayTest#testWriteJSONStringCollectionWriter/report.xml
[m[m06.11.2021 - 23:31:18.465 [INFO ] MethodCoverageStrategy.createReport() - Report for org.json.simple.JSONArrayTest#testWriteJSONStringCollectionWriter was generated successfully
[m[m06.11.2021 - 23:31:18.466 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 17/26
[m[m06.11.2021 - 23:31:18.466 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.json.simple.JSONArrayTest#testToJSONStringCollection
[m[32m06.11.2021 - 23:31:18.467 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONArrayTest#testToJSONStringCollection.exec,includes=org.json.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/json-simple/target/json-simple-1.1.1-fat-tests.jar SingleJUnitTestRunner org.json.simple.JSONArrayTest#testToJSONStringCollection
[m[m06.11.2021 - 23:31:18.731 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m06.11.2021 - 23:31:18.732 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONArrayTest#testToJSONStringCollection.exec --classfiles /home/lukas/workspace/master-benchmark/projects/json-simple/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/json-simple/src/main/java --xml /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONArrayTest#testToJSONStringCollection/report.xml
[m[m06.11.2021 - 23:31:18.984 [INFO ] MethodCoverageStrategy.createReport() - Report for org.json.simple.JSONArrayTest#testToJSONStringCollection was generated successfully
[m[m06.11.2021 - 23:31:18.985 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 18/26
[m[m06.11.2021 - 23:31:18.985 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.json.simple.JSONArrayTest#testByteArrayToString
[m[32m06.11.2021 - 23:31:18.985 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONArrayTest#testByteArrayToString.exec,includes=org.json.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/json-simple/target/json-simple-1.1.1-fat-tests.jar SingleJUnitTestRunner org.json.simple.JSONArrayTest#testByteArrayToString
[m[m06.11.2021 - 23:31:19.197 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m06.11.2021 - 23:31:19.198 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONArrayTest#testByteArrayToString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/json-simple/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/json-simple/src/main/java --xml /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONArrayTest#testByteArrayToString/report.xml
[m[m06.11.2021 - 23:31:19.438 [INFO ] MethodCoverageStrategy.createReport() - Report for org.json.simple.JSONArrayTest#testByteArrayToString was generated successfully
[m[m06.11.2021 - 23:31:19.438 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 19/26
[m[m06.11.2021 - 23:31:19.438 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.json.simple.JSONArrayTest#testShortArrayToString
[m[32m06.11.2021 - 23:31:19.439 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONArrayTest#testShortArrayToString.exec,includes=org.json.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/json-simple/target/json-simple-1.1.1-fat-tests.jar SingleJUnitTestRunner org.json.simple.JSONArrayTest#testShortArrayToString
[m[m06.11.2021 - 23:31:19.636 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m06.11.2021 - 23:31:19.637 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONArrayTest#testShortArrayToString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/json-simple/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/json-simple/src/main/java --xml /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONArrayTest#testShortArrayToString/report.xml
[m[m06.11.2021 - 23:31:19.929 [INFO ] MethodCoverageStrategy.createReport() - Report for org.json.simple.JSONArrayTest#testShortArrayToString was generated successfully
[m[m06.11.2021 - 23:31:19.930 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 20/26
[m[m06.11.2021 - 23:31:19.930 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.json.simple.JSONArrayTest#testIntArrayToString
[m[32m06.11.2021 - 23:31:19.930 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONArrayTest#testIntArrayToString.exec,includes=org.json.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/json-simple/target/json-simple-1.1.1-fat-tests.jar SingleJUnitTestRunner org.json.simple.JSONArrayTest#testIntArrayToString
[m[m06.11.2021 - 23:31:20.181 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m06.11.2021 - 23:31:20.182 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONArrayTest#testIntArrayToString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/json-simple/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/json-simple/src/main/java --xml /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONArrayTest#testIntArrayToString/report.xml
[m[m06.11.2021 - 23:31:20.421 [INFO ] MethodCoverageStrategy.createReport() - Report for org.json.simple.JSONArrayTest#testIntArrayToString was generated successfully
[m[m06.11.2021 - 23:31:20.421 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 21/26
[m[m06.11.2021 - 23:31:20.421 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.json.simple.JSONArrayTest#testLongArrayToString
[m[32m06.11.2021 - 23:31:20.421 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONArrayTest#testLongArrayToString.exec,includes=org.json.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/json-simple/target/json-simple-1.1.1-fat-tests.jar SingleJUnitTestRunner org.json.simple.JSONArrayTest#testLongArrayToString
[m[m06.11.2021 - 23:31:20.623 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m06.11.2021 - 23:31:20.624 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONArrayTest#testLongArrayToString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/json-simple/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/json-simple/src/main/java --xml /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONArrayTest#testLongArrayToString/report.xml
[m[m06.11.2021 - 23:31:20.871 [INFO ] MethodCoverageStrategy.createReport() - Report for org.json.simple.JSONArrayTest#testLongArrayToString was generated successfully
[m[m06.11.2021 - 23:31:20.871 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 22/26
[m[m06.11.2021 - 23:31:20.871 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.json.simple.JSONArrayTest#testFloatArrayToString
[m[32m06.11.2021 - 23:31:20.871 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONArrayTest#testFloatArrayToString.exec,includes=org.json.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/json-simple/target/json-simple-1.1.1-fat-tests.jar SingleJUnitTestRunner org.json.simple.JSONArrayTest#testFloatArrayToString
[m[m06.11.2021 - 23:31:21.084 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m06.11.2021 - 23:31:21.085 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONArrayTest#testFloatArrayToString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/json-simple/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/json-simple/src/main/java --xml /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONArrayTest#testFloatArrayToString/report.xml
[m[m06.11.2021 - 23:31:21.332 [INFO ] MethodCoverageStrategy.createReport() - Report for org.json.simple.JSONArrayTest#testFloatArrayToString was generated successfully
[m[m06.11.2021 - 23:31:21.332 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 23/26
[m[m06.11.2021 - 23:31:21.333 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.json.simple.JSONArrayTest#testDoubleArrayToString
[m[32m06.11.2021 - 23:31:21.333 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONArrayTest#testDoubleArrayToString.exec,includes=org.json.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/json-simple/target/json-simple-1.1.1-fat-tests.jar SingleJUnitTestRunner org.json.simple.JSONArrayTest#testDoubleArrayToString
[m[m06.11.2021 - 23:31:21.543 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m06.11.2021 - 23:31:21.543 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONArrayTest#testDoubleArrayToString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/json-simple/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/json-simple/src/main/java --xml /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONArrayTest#testDoubleArrayToString/report.xml
[m[m06.11.2021 - 23:31:21.771 [INFO ] MethodCoverageStrategy.createReport() - Report for org.json.simple.JSONArrayTest#testDoubleArrayToString was generated successfully
[m[m06.11.2021 - 23:31:21.771 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 24/26
[m[m06.11.2021 - 23:31:21.771 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.json.simple.JSONArrayTest#testBooleanArrayToString
[m[32m06.11.2021 - 23:31:21.772 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONArrayTest#testBooleanArrayToString.exec,includes=org.json.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/json-simple/target/json-simple-1.1.1-fat-tests.jar SingleJUnitTestRunner org.json.simple.JSONArrayTest#testBooleanArrayToString
[m[m06.11.2021 - 23:31:22.002 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m06.11.2021 - 23:31:22.002 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONArrayTest#testBooleanArrayToString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/json-simple/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/json-simple/src/main/java --xml /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONArrayTest#testBooleanArrayToString/report.xml
[m[m06.11.2021 - 23:31:22.245 [INFO ] MethodCoverageStrategy.createReport() - Report for org.json.simple.JSONArrayTest#testBooleanArrayToString was generated successfully
[m[m06.11.2021 - 23:31:22.246 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 25/26
[m[m06.11.2021 - 23:31:22.246 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.json.simple.JSONArrayTest#testCharArrayToString
[m[32m06.11.2021 - 23:31:22.246 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONArrayTest#testCharArrayToString.exec,includes=org.json.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/json-simple/target/json-simple-1.1.1-fat-tests.jar SingleJUnitTestRunner org.json.simple.JSONArrayTest#testCharArrayToString
[m[m06.11.2021 - 23:31:22.486 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m06.11.2021 - 23:31:22.486 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONArrayTest#testCharArrayToString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/json-simple/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/json-simple/src/main/java --xml /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONArrayTest#testCharArrayToString/report.xml
[m[m06.11.2021 - 23:31:22.731 [INFO ] MethodCoverageStrategy.createReport() - Report for org.json.simple.JSONArrayTest#testCharArrayToString was generated successfully
[m[m06.11.2021 - 23:31:22.731 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 26/26
[m[m06.11.2021 - 23:31:22.731 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.json.simple.JSONArrayTest#testObjectArrayToString
[m[32m06.11.2021 - 23:31:22.732 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONArrayTest#testObjectArrayToString.exec,includes=org.json.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/json-simple/target/json-simple-1.1.1-fat-tests.jar SingleJUnitTestRunner org.json.simple.JSONArrayTest#testObjectArrayToString
[m[m06.11.2021 - 23:31:22.977 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m06.11.2021 - 23:31:22.978 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONArrayTest#testObjectArrayToString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/json-simple/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/json-simple/src/main/java --xml /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/org.json.simple.JSONArrayTest#testObjectArrayToString/report.xml
[m[m06.11.2021 - 23:31:23.243 [INFO ] MethodCoverageStrategy.createReport() - Report for org.json.simple.JSONArrayTest#testObjectArrayToString was generated successfully
[m[m06.11.2021 - 23:31:23.245 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of org.json.simple.JSONValueTest#testByteArrayToString
[m[m06.11.2021 - 23:31:23.327 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of org.json.simple.JSONValueTest#testShortArrayToString
[m[m06.11.2021 - 23:31:23.345 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of org.json.simple.JSONValueTest#testIntArrayToString
[m[m06.11.2021 - 23:31:23.364 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of org.json.simple.JSONValueTest#testLongArrayToString
[m[m06.11.2021 - 23:31:23.373 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of org.json.simple.JSONValueTest#testFloatArrayToString
[m[m06.11.2021 - 23:31:23.382 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of org.json.simple.JSONValueTest#testDoubleArrayToString
[m[m06.11.2021 - 23:31:23.392 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of org.json.simple.JSONValueTest#testBooleanArrayToString
[m[m06.11.2021 - 23:31:23.399 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of org.json.simple.JSONValueTest#testCharArrayToString
[m[m06.11.2021 - 23:31:23.407 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of org.json.simple.JSONValueTest#testObjectArrayToString
[m[m06.11.2021 - 23:31:23.415 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of org.json.simple.JSONValueTest#testArraysOfArrays
[m[m06.11.2021 - 23:31:23.422 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of org.json.simple.Test1#testDecode
[m[m06.11.2021 - 23:31:23.430 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of org.json.simple.Test1#testEncode
[m[m06.11.2021 - 23:31:23.436 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of org.json.simple.parser.YylexTest#testYylex
[m[m06.11.2021 - 23:31:23.443 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of org.json.simple.JSONArrayTest#testJSONArray
[m[m06.11.2021 - 23:31:23.450 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of org.json.simple.JSONArrayTest#testJSONArrayCollection
[m[m06.11.2021 - 23:31:23.457 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of org.json.simple.JSONArrayTest#testWriteJSONStringCollectionWriter
[m[m06.11.2021 - 23:31:23.464 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of org.json.simple.JSONArrayTest#testToJSONStringCollection
[m[m06.11.2021 - 23:31:23.470 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of org.json.simple.JSONArrayTest#testByteArrayToString
[m[m06.11.2021 - 23:31:23.476 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of org.json.simple.JSONArrayTest#testShortArrayToString
[m[m06.11.2021 - 23:31:23.484 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of org.json.simple.JSONArrayTest#testIntArrayToString
[m[m06.11.2021 - 23:31:23.492 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of org.json.simple.JSONArrayTest#testLongArrayToString
[m[m06.11.2021 - 23:31:23.498 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of org.json.simple.JSONArrayTest#testFloatArrayToString
[m[m06.11.2021 - 23:31:23.505 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of org.json.simple.JSONArrayTest#testDoubleArrayToString
[m[m06.11.2021 - 23:31:23.512 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of org.json.simple.JSONArrayTest#testBooleanArrayToString
[m[m06.11.2021 - 23:31:23.517 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of org.json.simple.JSONArrayTest#testCharArrayToString
[m[m06.11.2021 - 23:31:23.523 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of org.json.simple.JSONArrayTest#testObjectArrayToString
[m[m06.11.2021 - 23:31:23.529 [INFO ] MethodCoverageStrategy.assembleReport() - Successfully created coverage report: 76 of 114 methods covered. Coverage score: 0.6666666666666666
[m[32m06.11.2021 - 23:31:23.540 [DEBUG] MethodCoverageStrategy.cleanup() - Cleanup successful!
[m[m06.11.2021 - 23:31:23.576 [INFO ] CoverageReportExporter.exportToFile() - Wrote coverage report to file /home/lukas/workspace/master-benchmark/results/json-simple/mc/coverage/MethodCoverageReport.cvg
[m* Coverage Calculation took 13.003 seconds
