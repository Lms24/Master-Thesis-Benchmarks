WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.
[m07.11.2021 - 16:14:19.640 [INFO ] ParsingStrategy.parseTestSuiteFromFilePath() - Parsing test suite from File Path
[m[m07.11.2021 - 16:14:19.643 [INFO ] CompilationUnitExtractor.parseCompilationUnitsFromFilePath() - Collecting compilation units from File Path ./src/test/java
[m[m07.11.2021 - 16:14:20.356 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:14:20.371 [INFO ] ParsingStrategy.parseTestSuite() - Found 1 test case
[m[m07.11.2021 - 16:14:20.372 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanFilterTest::testColumnNameTranslationWithLineFiltering has 5 assertions: 
 assertEquals("Parsing resulted in the wrong number of items.", 2, list.size()); ref {list} [83-83],
 assertEquals("The first item has the wrong name.", "calc age", list.get(0).getName()); ref {list} [84-84],
 assertEquals("The first item has the wrong state.", "beta", list.get(0).getState()); ref {list} [85-85],
 assertEquals("The second item has the wrong name.", "wash dishes", list.get(1).getName()); ref {list} [86-86],
 assertEquals("The second item has the wrong state.", "alpha", list.get(1).getState()); ref {list} [87-87]
[m[m07.11.2021 - 16:14:20.372 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:14:20.373 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:14:20.373 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:14:20.374 [INFO ] ParsingStrategy.parseTestSuite() - Found 1 test case
[m[m07.11.2021 - 16:14:20.375 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase integrationTest.isClosed.isClosedTest::issue115StandardReadFailsAfterALargeNumberOfReads has 1 assertions: 
 assertEquals(ROWS, rows.size()); ref {rows, ROWS} [35-35]
[m[m07.11.2021 - 16:14:20.375 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:14:20.375 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:14:20.379 [INFO ] ParsingStrategy.parseTestSuite() - Found 4 test cases
[m[m07.11.2021 - 16:14:20.379 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.IterableCSVToBeanBuilderTest::defaultBuilderMissingInformation has 1 assertions: 
 assertEquals(IterableCSVToBeanBuilder.NO_MAPPING_STRATEGY_DEFINED, message); ref {IterableCSVToBeanBuilder.NO_MAPPING_STRATEGY_DEFINED, IterableCSVToBeanBuilder, message} [52-52]
[m[m07.11.2021 - 16:14:20.379 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.IterableCSVToBeanBuilderTest::willThrowExceptionIfMissingReader has 1 assertions: 
 assertEquals(IterableCSVToBeanBuilder.NO_READER_DEFINED, message); ref {IterableCSVToBeanBuilder.NO_READER_DEFINED, IterableCSVToBeanBuilder, message} [63-63]
[m[m07.11.2021 - 16:14:20.380 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.IterableCSVToBeanBuilderTest::builderWithoutFilter has 7 assertions: 
 assertEquals(mockMappingStrategy, builder.getStrategy()); ref {mockMappingStrategy, builder} [71-71],
 assertEquals(mockReader, builder.getCsvReader()); ref {mockReader, builder} [72-72],
 assertNull(builder.getFilter()); ref {builder} [73-73],
 assertNotNull(bean); ref {bean} [75-75],
 assertEquals(mockMappingStrategy, bean.getStrategy()); ref {mockMappingStrategy, bean} [76-76],
 assertEquals(mockReader, bean.getCSVReader()); ref {mockReader, bean} [77-77],
 assertNull(bean.getFilter()); ref {bean} [78-78]
[m[m07.11.2021 - 16:14:20.380 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.IterableCSVToBeanBuilderTest::builderWithFilter has 7 assertions: 
 assertEquals(mockMappingStrategy, builder.getStrategy()); ref {mockMappingStrategy, builder} [87-87],
 assertEquals(mockReader, builder.getCsvReader()); ref {mockReader, builder} [88-88],
 assertEquals(mockFilter, builder.getFilter()); ref {builder, mockFilter} [89-89],
 assertNotNull(bean); ref {bean} [91-91],
 assertEquals(mockMappingStrategy, bean.getStrategy()); ref {mockMappingStrategy, bean} [92-92],
 assertEquals(mockReader, bean.getCSVReader()); ref {mockReader, bean} [93-93],
 assertEquals(mockFilter, bean.getFilter()); ref {mockFilter, bean} [94-94]
[m[m07.11.2021 - 16:14:20.382 [INFO ] ParsingStrategy.parseTestSuite() - Found 1 test case
[m[m07.11.2021 - 16:14:20.382 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanDoubleTest::parseBeanWithNoAnnotations has 3 assertions: 
 assertEquals(2, beanList.size()); ref {beanList} [50-50],
 assertTrue(beanList.contains(createMockBean("kyle", "abc123456", DOUBLE_NUMBER))); ref {DOUBLE_NUMBER, beanList} [51-51],
 assertTrue(beanList.contains(createMockBean("jimmy", "def098765", DOUBLE_NUMBER))); ref {DOUBLE_NUMBER, beanList} [52-52]
[m[m07.11.2021 - 16:14:20.382 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:14:20.382 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:14:20.412 [INFO ] ParsingStrategy.parseTestSuite() - Found 54 test cases
[m[m07.11.2021 - 16:14:20.412 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testParseLine has 5 assertions: 
 assertEquals(4, nextItem.length); ref {nextItem.length, nextItem} [25-25],
 assertEquals("This", nextItem[0]); ref {nextItem} [26-26],
 assertEquals(" is", nextItem[1]); ref {nextItem} [27-27],
 assertEquals(" a", nextItem[2]); ref {nextItem} [28-28],
 assertEquals(" test.", nextItem[3]); ref {nextItem} [29-29]
[m[m07.11.2021 - 16:14:20.412 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::parseSimpleString has 5 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [36-36],
 assertEquals("a", nextLine[0]); ref {nextLine} [37-37],
 assertEquals("b", nextLine[1]); ref {nextLine} [38-38],
 assertEquals("c", nextLine[2]); ref {nextLine} [39-39],
 assertFalse(csvParser.isPending()); ref {csvParser} [40-40]
[m[m07.11.2021 - 16:14:20.413 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::parseSimpleQuotedString has 5 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [47-47],
 assertEquals("a", nextLine[0]); ref {nextLine} [48-48],
 assertEquals("b", nextLine[1]); ref {nextLine} [49-49],
 assertEquals("c", nextLine[2]); ref {nextLine} [50-50],
 assertFalse(csvParser.isPending()); ref {csvParser} [51-51]
[m[m07.11.2021 - 16:14:20.413 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::parseSimpleQuotedStringWithSpaces has 5 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [60-60],
 assertEquals("a", nextLine[0]); ref {nextLine} [61-61],
 assertEquals("b", nextLine[1]); ref {nextLine} [62-62],
 assertEquals("c", nextLine[2]); ref {nextLine} [63-63],
 assertFalse(parser.isPending()); ref {parser} [64-64]
[m[m07.11.2021 - 16:14:20.414 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testParsedLineWithInternalQuota has 2 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [76-76],
 assertEquals("123\"4\"567", nextLine[1]); ref {nextLine} [78-78]
[m[m07.11.2021 - 16:14:20.414 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::parseQuotedStringWithCommas has 4 assertions: 
 assertEquals("a", nextLine[0]); ref {nextLine} [85-85],
 assertEquals("b,b,b", nextLine[1]); ref {nextLine} [86-86],
 assertEquals("c", nextLine[2]); ref {nextLine} [87-87],
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [88-88]
[m[m07.11.2021 - 16:14:20.414 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::parseQuotedStringWithDefinedSeperator has 4 assertions: 
 assertEquals("a", nextLine[0]); ref {nextLine} [96-96],
 assertEquals("b:b:b", nextLine[1]); ref {nextLine} [97-97],
 assertEquals("c", nextLine[2]); ref {nextLine} [98-98],
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [99-99]
[m[m07.11.2021 - 16:14:20.415 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::parseQuotedStringWithDefinedSeperatorAndQuote has 4 assertions: 
 assertEquals("a", nextLine[0]); ref {nextLine} [107-107],
 assertEquals("b:b:b", nextLine[1]); ref {nextLine} [108-108],
 assertEquals("c", nextLine[2]); ref {nextLine} [109-109],
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [110-110]
[m[m07.11.2021 - 16:14:20.415 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::parseEmptyElements has 4 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [116-116],
 assertEquals("", nextLine[0]); ref {nextLine} [117-117],
 assertEquals("", nextLine[1]); ref {nextLine} [118-118],
 assertEquals("", nextLine[2]); ref {nextLine} [119-119]
[m[m07.11.2021 - 16:14:20.415 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::parseMultiLinedQuoted has 4 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [125-125],
 assertEquals("a", nextLine[0]); ref {nextLine} [126-126],
 assertEquals("PO Box 123,\nKippax,ACT. 2615.\nAustralia", nextLine[1]); ref {nextLine} [127-127],
 assertEquals("d.\n", nextLine[2]); ref {nextLine} [128-128]
[m[m07.11.2021 - 16:14:20.416 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::parseMultiLinedQuotedwithCarriageReturns has 4 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [134-134],
 assertEquals("a", nextLine[0]); ref {nextLine} [135-135],
 assertEquals("PO Box 123,\r\nKippax,ACT. 2615.\r\nAustralia", nextLine[1]); ref {nextLine} [136-136],
 assertEquals("d.\n", nextLine[2]); ref {nextLine} [137-137]
[m[m07.11.2021 - 16:14:20.416 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testADoubleQuoteAsDataElement has 5 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [145-145],
 assertEquals("a", nextLine[0]); ref {nextLine} [147-147],
 assertEquals(1, nextLine[1].length()); ref {nextLine} [148-148],
 assertEquals("\"", nextLine[1]); ref {nextLine} [149-149],
 assertEquals("c", nextLine[2]); ref {nextLine} [150-150]
[m[m07.11.2021 - 16:14:20.416 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testEscapedDoubleQuoteAsDataElement has 5 assertions: 
 assertEquals(4, nextLine.length); ref {nextLine, nextLine.length} [159-159],
 assertEquals("test", nextLine[0]); ref {nextLine} [161-161],
 assertEquals("this,test,is,good", nextLine[1]); ref {nextLine} [162-162],
 assertEquals("\"test\"", nextLine[2]); ref {nextLine} [163-163],
 assertEquals("\"quote\"", nextLine[3]); ref {nextLine} [164-164]
[m[m07.11.2021 - 16:14:20.417 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::parseQuotedQuoteCharacters has 4 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [171-171],
 assertEquals("Glen \"The Man\" Smith", nextLine[0]); ref {nextLine} [172-172],
 assertEquals("Athlete", nextLine[1]); ref {nextLine} [173-173],
 assertEquals("Developer\n", nextLine[2]); ref {nextLine} [174-174]
[m[m07.11.2021 - 16:14:20.417 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::parseMultipleQuotes has 3 assertions: 
 // check the tricky situation
assertEquals("\"\"", nextLine[0]); ref {nextLine} [180-180],
 // make sure we didn't ruin the next field..
assertEquals("test\"\n", nextLine[1]); ref {nextLine} [181-181],
 assertEquals(2, nextLine.length); ref {nextLine, nextLine.length} [182-182]
[m[m07.11.2021 - 16:14:20.417 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::parseTrickyString has 5 assertions: 
 assertEquals(4, nextLine.length); ref {nextLine, nextLine.length} [188-188],
 assertEquals("a\nb", nextLine[0]); ref {nextLine} [189-189],
 assertEquals("b", nextLine[1]); ref {nextLine} [190-190],
 assertEquals("\nd", nextLine[2]); ref {nextLine} [191-191],
 assertEquals("e\n", nextLine[3]); ref {nextLine} [192-192]
[m[m07.11.2021 - 16:14:20.418 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testAMultiLineInsideQuotes has 4 assertions: 
 assertEquals(2, nextLine.length); ref {nextLine, nextLine.length} [209-209],
 assertEquals("Small test", nextLine[0]); ref {nextLine} [210-210],
 assertEquals("This is a test across \ntwo lines.", nextLine[1]); ref {nextLine} [211-211],
 assertFalse(csvParser.isPending()); ref {csvParser} [212-212]
[m[m07.11.2021 - 16:14:20.418 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testStrictQuoteSimple has 4 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [221-221],
 assertEquals("a", nextLine[0]); ref {nextLine} [222-222],
 assertEquals("b", nextLine[1]); ref {nextLine} [223-223],
 assertEquals("c", nextLine[2]); ref {nextLine} [224-224]
[m[m07.11.2021 - 16:14:20.418 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testNotStrictQuoteSimple has 4 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [233-233],
 assertEquals("a", nextLine[0]); ref {nextLine} [234-234],
 assertEquals("b", nextLine[1]); ref {nextLine} [235-235],
 assertEquals("c", nextLine[2]); ref {nextLine} [236-236]
[m[m07.11.2021 - 16:14:20.419 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testStrictQuoteWithSpacesAndTabs has 4 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [245-245],
 assertEquals("a", nextLine[0]); ref {nextLine} [246-246],
 assertEquals("b", nextLine[1]); ref {nextLine} [247-247],
 assertEquals("c", nextLine[2]); ref {nextLine} [248-248]
[m[m07.11.2021 - 16:14:20.419 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testNotStrictQuoteWithSpacesAndTabs has 4 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [262-262],
 assertEquals("a", nextLine[0]); ref {nextLine} [263-263],
 assertEquals("b\"      \t       ", nextLine[1]); ref {nextLine} [264-264],
 assertEquals("c\"   ", nextLine[2]); ref {nextLine} [265-265]
[m[m07.11.2021 - 16:14:20.419 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testStrictQuoteWithGarbage has 4 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [274-274],
 assertEquals("", nextLine[0]); ref {nextLine} [275-275],
 assertEquals(",\"", nextLine[1]); ref {nextLine} [276-276],
 assertEquals("", nextLine[2]); ref {nextLine} [277-277]
[m[m07.11.2021 - 16:14:20.419 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testCanIgnoreQuotations has 5 assertions: 
 assertEquals(4, nextLine.length); ref {nextLine, nextLine.length} [291-291],
 assertEquals("Bob", nextLine[0]); ref {nextLine} [292-292],
 assertEquals("test", nextLine[1]); ref {nextLine} [293-293],
 assertEquals("Beaumont", nextLine[2]); ref {nextLine} [294-294],
 assertEquals("TX", nextLine[3]); ref {nextLine} [295-295]
[m[m07.11.2021 - 16:14:20.420 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testFalseIgnoreQuotations has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.420 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testIssue3314579 has 9 assertions: 
 assertEquals(8, nextLine.length); ref {nextLine, nextLine.length} [335-335],
 assertEquals("RPO", nextLine[0]); ref {nextLine} [336-336],
 assertEquals("2012", nextLine[1]); ref {nextLine} [337-337],
 assertEquals("P", nextLine[2]); ref {nextLine} [338-338],
 assertEquals(" ", nextLine[3]); ref {nextLine} [339-339],
 assertEquals(" ", nextLine[4]); ref {nextLine} [340-340],
 assertEquals(" ", nextLine[5]); ref {nextLine} [341-341],
 assertEquals("SDX", nextLine[6]); ref {nextLine} [342-342],
 assertEquals("ACCESSORY WHEEL, 16\", ALUMINUM, DESIGN 1", nextLine[7]); ref {nextLine} [343-343]
[m[m07.11.2021 - 16:14:20.420 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testIssue2263439 has 6 assertions: 
 assertEquals(11, nextLine.length); ref {nextLine, nextLine.length} [358-358],
 assertEquals("865", nextLine[0]); ref {nextLine} [360-360],
 assertEquals("0", nextLine[1]); ref {nextLine} [361-361],
 assertEquals("AmeriKKKa's_Most_Wanted", nextLine[2]); ref {nextLine} [362-362],
 assertEquals("", nextLine[3]); ref {nextLine} [363-363],
 assertEquals("18448", nextLine[10]); ref {nextLine} [364-364]
[m[m07.11.2021 - 16:14:20.421 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testIssue2859181 has 4 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [379-379],
 assertEquals("field1", nextLine[0]); ref {nextLine} [381-381],
 assertEquals("=field2", nextLine[1]); ref {nextLine} [382-382],
 assertEquals("\"field3\"", nextLine[2]); ref {nextLine} [383-383]
[m[m07.11.2021 - 16:14:20.421 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testIssue2726363 has 7 assertions: 
 assertEquals(6, nextLine.length); ref {nextLine, nextLine.length} [401-401],
 assertEquals("804503689", nextLine[0]); ref {nextLine} [404-404],
 assertEquals("London", nextLine[1]); ref {nextLine} [405-405],
 assertEquals("\"London\"shop", nextLine[2]); ref {nextLine} [406-406],
 assertEquals("address", nextLine[3]); ref {nextLine} [407-407],
 assertEquals("116.453182", nextLine[4]); ref {nextLine} [408-408],
 assertEquals("39.918884", nextLine[5]); ref {nextLine} [409-409]
[m[m07.11.2021 - 16:14:20.421 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::anIOExceptionThrownifStringEndsInsideAQuotedString has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.422 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::parseLineMultiAllowsQuotesAcrossMultipleLines has 6 assertions: 
 assertEquals(1, nextLine.length); ref {nextLine, nextLine.length} [422-422],
 assertEquals("This", nextLine[0]); ref {nextLine} [423-423],
 assertTrue(csvParser.isPending()); ref {csvParser} [424-424],
 assertEquals(1, nextLine.length); ref {nextLine, nextLine.length} [428-428],
 assertEquals("is a \"good\" line\\ to parse\nbecause we are using parseLineMulti.", nextLine[0]); ref {nextLine} [429-429],
 assertFalse(csvParser.isPending()); ref {csvParser} [430-430]
[m[m07.11.2021 - 16:14:20.422 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::pendingIsClearedAfterCallToParseLine has 6 assertions: 
 assertEquals(1, nextLine.length); ref {nextLine, nextLine.length} [437-437],
 assertEquals("This", nextLine[0]); ref {nextLine} [438-438],
 assertTrue(csvParser.isPending()); ref {csvParser} [439-439],
 assertEquals(1, nextLine.length); ref {nextLine, nextLine.length} [443-443],
 assertEquals("because we are using parseLineMulti.", nextLine[0]); ref {nextLine} [444-444],
 assertFalse(csvParser.isPending()); ref {csvParser} [445-445]
[m[m07.11.2021 - 16:14:20.422 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::returnPendingIfNullIsPassedIntoParseLineMulti has 6 assertions: 
 assertEquals(1, nextLine.length); ref {nextLine, nextLine.length} [452-452],
 assertEquals("This", nextLine[0]); ref {nextLine} [453-453],
 assertTrue(csvParser.isPending()); ref {csvParser} [454-454],
 assertEquals(1, nextLine.length); ref {nextLine, nextLine.length} [458-458],
 assertEquals("is a \"good\" line\\ to parse\n", nextLine[0]); ref {nextLine} [459-459],
 assertFalse(csvParser.isPending()); ref {csvParser} [460-460]
[m[m07.11.2021 - 16:14:20.422 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::spacesAtEndOfQuotedStringDoNotCountIfStrictQuotesIsTrue has 3 assertions: 
 assertEquals(2, nextLine.length); ref {nextLine, nextLine.length} [468-468],
 assertEquals("Line with", nextLine[0]); ref {nextLine} [469-469],
 assertEquals("spaces at end", nextLine[1]); ref {nextLine} [470-470]
[m[m07.11.2021 - 16:14:20.423 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::returnNullWhenNullPassedIn has 1 assertions: 
 assertNull(nextLine); ref {nextLine} [476-476]
[m[m07.11.2021 - 16:14:20.423 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::validateEscapeStringBeforeRealTest has 2 assertions: 
 assertNotNull(ESCAPE_TEST_STRING); ref {ESCAPE_TEST_STRING} [481-481],
 assertEquals(9, ESCAPE_TEST_STRING.length()); ref {ESCAPE_TEST_STRING} [482-482]
[m[m07.11.2021 - 16:14:20.423 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::whichCharactersAreEscapable has 10 assertions: 
 assertTrue(csvParser.isNextCharacterEscapable(ESCAPE_TEST_STRING, true, 0)); ref {ESCAPE_TEST_STRING, csvParser} [487-487],
 assertFalse(csvParser.isNextCharacterEscapable(ESCAPE_TEST_STRING, false, 0)); ref {ESCAPE_TEST_STRING, csvParser} [488-488],
 // Second character is not escapable because there is a non quote or non slash after it.
assertFalse(csvParser.isNextCharacterEscapable(ESCAPE_TEST_STRING, true, 1)); ref {ESCAPE_TEST_STRING, csvParser} [490-490],
 assertFalse(csvParser.isNextCharacterEscapable(ESCAPE_TEST_STRING, false, 1)); ref {ESCAPE_TEST_STRING, csvParser} [491-491],
 // Fourth character is not escapable because there is a non quote or non slash after it.
assertFalse(csvParser.isNextCharacterEscapable(ESCAPE_TEST_STRING, true, 3)); ref {ESCAPE_TEST_STRING, csvParser} [493-493],
 assertFalse(csvParser.isNextCharacterEscapable(ESCAPE_TEST_STRING, false, 3)); ref {ESCAPE_TEST_STRING, csvParser} [494-494],
 assertTrue(csvParser.isNextCharacterEscapable(ESCAPE_TEST_STRING, true, 5)); ref {ESCAPE_TEST_STRING, csvParser} [496-496],
 assertFalse(csvParser.isNextCharacterEscapable(ESCAPE_TEST_STRING, false, 5)); ref {ESCAPE_TEST_STRING, csvParser} [497-497],
 assertFalse(csvParser.isNextCharacterEscapable(ESCAPE_TEST_STRING, true, lastChar)); ref {ESCAPE_TEST_STRING, lastChar, csvParser} [500-500],
 assertFalse(csvParser.isNextCharacterEscapable(ESCAPE_TEST_STRING, false, lastChar)); ref {ESCAPE_TEST_STRING, lastChar, csvParser} [501-501]
[m[m07.11.2021 - 16:14:20.423 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::whitespaceBeforeEscape has 3 assertions: 
 assertEquals("this", nextItem[0]); ref {nextItem} [508-508],
 assertEquals("is", nextItem[1]); ref {nextItem} [509-509],
 assertEquals("a test", nextItem[2]); ref {nextItem} [510-510]
[m[m07.11.2021 - 16:14:20.424 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testIssue2958242WithoutQuotes has 5 assertions: 
 assertEquals(4, nextItem.length); ref {nextItem.length, nextItem} [517-517],
 assertEquals("zo\"har\"at", nextItem[0]); ref {nextItem} [518-518],
 assertEquals("10-04-1980", nextItem[1]); ref {nextItem} [519-519],
 assertEquals("29", nextItem[2]); ref {nextItem} [520-520],
 assertEquals("C:\\foo.txt", nextItem[3]); ref {nextItem} [521-521]
[m[m07.11.2021 - 16:14:20.424 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::quoteAndEscapeCannotBeTheSame has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.424 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::quoteAndEscapeCanBeTheSameIfNull has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.424 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::separatorCharacterCannotBeNull has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.424 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::separatorAndEscapeCannotBeTheSame has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.424 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::separatorAndQuoteCannotBeTheSame has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.425 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::parserHandlesNullInString has 2 assertions: 
 assertEquals(1, nextLine.length); ref {nextLine, nextLine.length} [553-553],
 assertEquals("because we are using\0 parseLineMulti.", nextLine[0]); ref {nextLine} [554-554]
[m[m07.11.2021 - 16:14:20.425 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::featureRequest60ByDefaultEmptyFieldsAreBlank has 6 assertions: 
 assertEquals(5, item.length); ref {item.length, item} [568-568],
 assertEquals("", item[0]); ref {item} [569-569],
 assertEquals("", item[1]); ref {item} [570-570],
 assertEquals("", item[2]); ref {item} [571-571],
 assertEquals("", item[3]); ref {item} [572-572],
 assertEquals("", item[4]); ref {item} [573-573]
[m[m07.11.2021 - 16:14:20.425 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::featureRequest60TreatEmptyFieldsAsNull has 6 assertions: 
 assertEquals(5, item.length); ref {item.length, item} [588-588],
 assertNull(item[0]); ref {item} [589-589],
 assertEquals(" ", item[1]); ref {item} [590-590],
 assertNull(item[2]); ref {item} [591-591],
 assertEquals("", item[3]); ref {item} [592-592],
 assertNull(item[4]); ref {item} [593-593]
[m[m07.11.2021 - 16:14:20.426 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::featureRequest60TreatEmptyDelimitedFieldsAsNull has 6 assertions: 
 assertEquals(5, item.length); ref {item.length, item} [608-608],
 assertEquals("", item[0]); ref {item} [609-609],
 assertEquals(" ", item[1]); ref {item} [610-610],
 assertEquals("", item[2]); ref {item} [611-611],
 assertNull(item[3]); ref {item} [612-612],
 assertEquals("", item[4]); ref {item} [613-613]
[m[m07.11.2021 - 16:14:20.426 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::featureRequest60TreatEmptyFieldsDelimitedOrNotAsNull has 6 assertions: 
 assertEquals(5, item.length); ref {item.length, item} [628-628],
 assertNull(item[0]); ref {item} [629-629],
 assertNull(item[1]); ref {item} [630-630],
 assertNull(item[2]); ref {item} [631-631],
 assertNull(item[3]); ref {item} [632-632],
 assertNull(item[4]); ref {item} [633-633]
[m[m07.11.2021 - 16:14:20.426 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testStrictQuotesEndsFieldAtQuote has 4 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [644-644],
 assertEquals("one", nextLine[0]); ref {nextLine} [646-646],
 assertEquals("t", nextLine[1]); ref {nextLine} [647-647],
 assertEquals("three", nextLine[2]); ref {nextLine} [648-648]
[m[m07.11.2021 - 16:14:20.426 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testStrictQuotesEndsFieldAtQuoteWithEscapedQuoteInMiddle has 4 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [658-658],
 assertEquals("one", nextLine[0]); ref {nextLine} [660-660],
 assertEquals("t\"w", nextLine[1]); ref {nextLine} [661-661],
 assertEquals("three", nextLine[2]); ref {nextLine} [662-662]
[m[m07.11.2021 - 16:14:20.427 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testNotStrictQuotesAllowsEmbeddedEscapedQuote has 4 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [672-672],
 assertEquals("one", nextLine[0]); ref {nextLine} [674-674],
 assertEquals("t\"wo", nextLine[1]); ref {nextLine} [675-675],
 assertEquals("three", nextLine[2]); ref {nextLine} [676-676]
[m[m07.11.2021 - 16:14:20.427 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testNotStrictQuotesAllowsEmbeddedQuote has 4 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [686-686],
 assertEquals("one", nextLine[0]); ref {nextLine} [688-688],
 assertEquals("t\"wo", nextLine[1]); ref {nextLine} [689-689],
 assertEquals("three", nextLine[2]); ref {nextLine} [690-690]
[m[m07.11.2021 - 16:14:20.427 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::issue93ParsingEmptyDoubleQuoteField has 3 assertions: 
 assertEquals(2, nextLine.length); ref {nextLine, nextLine.length} [700-700],
 assertTrue(nextLine[0].isEmpty()); ref {nextLine} [702-702],
 assertEquals("2", nextLine[1]); ref {nextLine} [703-703]
[m[m07.11.2021 - 16:14:20.427 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::tryAndParseExcelGeneratedString has 1 assertions: 
 assertEquals("\\\"", nextLine[0]); ref {nextLine} [715-715]
[m[m07.11.2021 - 16:14:20.428 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:14:20.428 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:14:20.428 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:14:20.434 [INFO ] ParsingStrategy.parseTestSuite() - Found 10 test cases
[m[m07.11.2021 - 16:14:20.434 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.BeanToCsvTest::throwRuntimeExceptionWhenExceptionIsThrown has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.434 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.BeanToCsvTest::beanReturnsFalseOnEmptyList has 1 assertions: 
 assertFalse(bean.write(strat, sw, new ArrayList<MockBean>())); ref {sw, bean, strat} [212-212]
[m[m07.11.2021 - 16:14:20.435 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.BeanToCsvTest::beanReturnsFalseOnNull has 1 assertions: 
 assertFalse(bean.write(strat, sw, null)); ref {sw, bean, strat} [224-224]
[m[m07.11.2021 - 16:14:20.435 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.BeanToCsvTest::testWriteQuotes has 3 assertions: 
 assertTrue(value); ref {value} [238-238],
 assertNotNull(content); ref {content} [241-241],
 assertEquals(TEST_STRING, content); ref {content, TEST_STRING} [242-242]
[m[m07.11.2021 - 16:14:20.435 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.BeanToCsvTest::writeBeansOneAtATime has 3 assertions: 
 assertTrue(value); ref {value} [259-259],
 assertNotNull(content); ref {content} [263-263],
 assertEquals(TEST_STRING, content); ref {content, TEST_STRING} [264-264]
[m[m07.11.2021 - 16:14:20.435 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.BeanToCsvTest::writeSingleBeanMethodReturnsFalseIfNullPassedIn has 1 assertions: 
 assertFalse(bean.write(strat, writer, null, false)); ref {writer, bean, strat} [277-277]
[m[m07.11.2021 - 16:14:20.435 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.BeanToCsvTest::handleException has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.435 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.BeanToCsvTest::testWriteQuotesWithAnnotatedBean has 3 assertions: 
 assertTrue(value); ref {value} [298-298],
 assertNotNull(content); ref {content} [301-301],
 assertEquals(TEST_STRING, content); ref {content, TEST_STRING} [302-302]
[m[m07.11.2021 - 16:14:20.436 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.BeanToCsvTest::testWriteNulls has 3 assertions: 
 assertTrue(value); ref {value} [316-316],
 assertNotNull(content); ref {content} [319-319],
 assertEquals(NULL_TEST_STRING, content); ref {NULL_TEST_STRING, content} [320-320]
[m[m07.11.2021 - 16:14:20.436 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.BeanToCsvTest::testWriteNullsWithAnnotatedBean has 3 assertions: 
 assertTrue(value); ref {value} [334-334],
 assertNotNull(content); ref {content} [337-337],
 assertEquals(NULL_TEST_STRING, content); ref {NULL_TEST_STRING, content} [338-338]
[m[m07.11.2021 - 16:14:20.437 [INFO ] ParsingStrategy.parseTestSuite() - Found 1 test case
[m[m07.11.2021 - 16:14:20.437 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase integrationTest.issue3402853.HeaderColumnNameMappingStrategyUserTest::testParse has 6 assertions: 
 assertNotNull(list); ref {list} [46-46],
 assertEquals(2, list.size()); ref {list} [47-47],
 assertEquals("rbst218@yahoo.com", bean.getEmail()); ref {bean} [49-49],
 assertEquals("\\\"CHia Sia Ta", bean.getFirst_Name()); ref {bean} [50-50],
 assertEquals("", bean.getLast_Name()); ref {bean} [51-51],
 assertEquals("bc1er1163", bean.getProfile_Id()); ref {bean} [52-52]
[m[m07.11.2021 - 16:14:20.440 [INFO ] ParsingStrategy.parseTestSuite() - Found 7 test cases
[m[m07.11.2021 - 16:14:20.440 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.HeaderColumnNameMappingStrategyTest::getColumnIndexWithoutHeaderThrowsException has 1 assertions: 
 assertNull(strat.getColumnIndex("some index name")); ref {strat} [56-56]
[m[m07.11.2021 - 16:14:20.440 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.HeaderColumnNameMappingStrategyTest::getColumnIndexAfterParse has 4 assertions: 
 assertEquals(0, strat.getColumnIndex("name").intValue()); ref {strat} [62-62],
 assertEquals(1, strat.getColumnIndex("orderNumber").intValue()); ref {strat} [63-63],
 assertEquals(2, strat.getColumnIndex("num").intValue()); ref {strat} [64-64],
 assertNull(strat.getColumnIndex("unknown column")); ref {strat} [65-65]
[m[m07.11.2021 - 16:14:20.440 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.HeaderColumnNameMappingStrategyTest::testParse has 5 assertions: 
 assertNotNull(list); ref {list} [71-71],
 assertTrue(list.size() == 2); ref {list} [72-72],
 assertEquals("kyle", bean.getName()); ref {bean} [74-74],
 assertEquals("abc123456", bean.getOrderNumber()); ref {bean} [75-75],
 assertEquals(123, bean.getNum()); ref {bean} [76-76]
[m[m07.11.2021 - 16:14:20.441 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.HeaderColumnNameMappingStrategyTest::testQuotedString has 5 assertions: 
 assertNotNull(list); ref {list} [82-82],
 assertTrue(list.size() == 2); ref {list} [83-83],
 assertEquals("kyle", bean.getName()); ref {bean} [85-85],
 assertEquals("abc123456", bean.getOrderNumber()); ref {bean} [86-86],
 assertEquals(123, bean.getNum()); ref {bean} [87-87]
[m[m07.11.2021 - 16:14:20.441 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.HeaderColumnNameMappingStrategyTest::testParseWithSpacesInHeader has 5 assertions: 
 assertNotNull(list); ref {list} [93-93],
 assertTrue(list.size() == 2); ref {list} [94-94],
 assertEquals("kyle", bean.getName()); ref {bean} [96-96],
 assertEquals("abc123456", bean.getOrderNumber()); ref {bean} [97-97],
 assertEquals(123, bean.getNum()); ref {bean} [98-98]
[m[m07.11.2021 - 16:14:20.441 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.HeaderColumnNameMappingStrategyTest::verifyColumnNames has 5 assertions: 
 assertNull(strat.getColumnName(0)); ref {strat} [105-105],
 assertNull(strat.findDescriptor(0)); ref {strat} [106-106],
 assertEquals("name", strat.getColumnName(0)); ref {strat} [113-113],
 assertEquals(strat.findDescriptor(0), strat.findDescriptor("name")); ref {strat} [114-114],
 assertEquals("name", strat.findDescriptor("name").getName()); ref {strat} [115-115]
[m[m07.11.2021 - 16:14:20.441 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.HeaderColumnNameMappingStrategyTest::throwsIllegalStateExceptionIfTypeNotSet has 1 assertions: 
 assertEquals(IllegalStateException.class, e.getCause().getClass()); ref {e} [128-128]
[m[m07.11.2021 - 16:14:20.442 [INFO ] ParsingStrategy.parseTestSuite() - Found 1 test case
[m[m07.11.2021 - 16:14:20.442 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.TestUtilitiesTest::displayStringArray has 1 assertions: 
 assertEquals("Header\nNumber of elements:\t3\nelement 0:\ta\nelement 1:\tb\nelement 2:\tc\n", TestUtilities.displayStringArray("Header", stringArray)); ref {TestUtilities, stringArray} [17-18]
[m[m07.11.2021 - 16:14:20.449 [INFO ] ParsingStrategy.parseTestSuite() - Found 4 test cases
[m[m07.11.2021 - 16:14:20.450 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.StatefulBeanToCsvTest::writeGoodData has 10 assertions: 
 assertEquals(GOOD_DATA_1 + "\n", writer.toString()); ref {GOOD_DATA_1, writer} [143-143],
 assertEquals(GOOD_DATA_1 + "\n" + GOOD_DATA_2 + "\n", writer.toString()); ref {GOOD_DATA_1, GOOD_DATA_2, writer} [152-152],
 assertEquals(GOOD_DATA_1 + "\n" + GOOD_DATA_2 + "\n" + GOOD_DATA_1 + "\n", writer.toString()); ref {GOOD_DATA_1, GOOD_DATA_2, writer} [160-160],
 assertEquals(GOOD_DATA_OPTIONALS_NULL + EXTRA_STRING_FOR_WRITING + "\n", writer.toString()); ref {GOOD_DATA_OPTIONALS_NULL, writer, EXTRA_STRING_FOR_WRITING} [170-170],
 assertEquals(HEADER_NAME_FULL + "\n" + GOOD_DATA_NAME_1 + "\n", writer.toString()); ref {writer, HEADER_NAME_FULL, GOOD_DATA_NAME_1} [181-181],
 assertEquals(BindByNameUnknownType.TOSTRING + "\n", writer.toString()); ref {BindByNameUnknownType, BindByNameUnknownType.TOSTRING, writer} [187-187],
 assertEquals("TEST\n" + BindByNameUnknownType.TOSTRING + "\n", writer.toString()); ref {BindByNameUnknownType, BindByNameUnknownType.TOSTRING, writer} [196-196],
 assertEquals("c;i;s\nA;1;String\n", writer.toString()); ref {writer} [205-205],
 assertEquals(HEADER_NAME_FULL_DERIVED + "\n" + GOOD_DATA_NAME_DERIVED_1 + "\n", writer.toString()); ref {HEADER_NAME_FULL_DERIVED, GOOD_DATA_NAME_DERIVED_1, writer} [216-216],
 assertEquals(HEADER_NAME_FULL + "\n" + GOOD_DATA_NAME_DERIVED_SUB_1 + "\n", writer.toString()); ref {GOOD_DATA_NAME_DERIVED_SUB_1, writer, HEADER_NAME_FULL} [227-227]
[m[m07.11.2021 - 16:14:20.450 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.StatefulBeanToCsvTest::writeBadData has 27 assertions: 
 assertTrue("An exception should have been thrown!", false); ref {} [253-253],
 assertEquals(getterMissing, e.getBean()); ref {e, getterMissing} [256-256],
 assertEquals("test", e.getField().getName()); ref {e} [257-257],
 assertTrue("An exception should have been thrown!", false); ref {} [266-266],
 assertEquals(getterPrivate, e.getBean()); ref {e, getterPrivate} [269-269],
 assertEquals("test", e.getField().getName()); ref {e} [270-270],
 assertNotNull(csves); ref {csves} [281-281],
 assertEquals(1, csves.size()); ref {csves} [282-282],
 assertTrue(csve instanceof CsvRequiredFieldEmptyException); ref {csve} [284-284],
 assertEquals(1L, rfe.getLineNumber()); ref {rfe} [286-286],
 assertEquals(AnnotatedMockBeanFull.class, rfe.getBeanClass()); ref {rfe} [287-287],
 assertEquals(beans.left.getClass().getDeclaredField("byteWrappedSetLocale"), rfe.getDestinationField()); ref {rfe, beans.left, beans} [288-289],
 assertNotNull(csves); ref {csves} [294-294],
 assertEquals(1, csves.size()); ref {csves} [295-295],
 assertTrue(csve instanceof CsvRequiredFieldEmptyException); ref {csve} [297-297],
 assertEquals(2L, rfe.getLineNumber()); ref {rfe} [299-299],
 assertEquals(AnnotatedMockBeanFull.class, rfe.getBeanClass()); ref {rfe} [300-300],
 assertEquals(beans.right.getClass().getDeclaredField("dateDefaultLocale"), rfe.getDestinationField()); ref {rfe, beans, beans.right} [301-302],
 assertTrue(csves.isEmpty()); ref {csves} [306-306],
 assertEquals(2, csves.size()); ref {csves} [312-312],
 assertNotNull(csves); ref {csves} [321-321],
 assertEquals(1, csves.size()); ref {csves} [322-322],
 assertTrue(csve instanceof CsvDataTypeMismatchException); ref {csve} [324-324],
 assertEquals(1L, dtm.getLineNumber()); ref {dtm} [326-326],
 assertTrue(dtm.getSourceObject() instanceof BindCustomToWrongDataType); ref {dtm} [327-327],
 assertEquals(String.class, dtm.getDestinationClass()); ref {dtm} [328-328],
 assertEquals("TEST\n" + BindByNameUnknownTypeLegacy.TOSTRING + "\n", writer.toString()); ref {BindByNameUnknownTypeLegacy, writer, BindByNameUnknownTypeLegacy.TOSTRING} [334-334]
[m[m07.11.2021 - 16:14:20.450 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.StatefulBeanToCsvTest::writeGoodDataCustom has 2 assertions: 
 assertEquals(GOOD_DATA_CUSTOM_1 + "\n", writer.toString()); ref {GOOD_DATA_CUSTOM_1, writer} [358-358],
 assertEquals(HEADER_NAME_FULL_CUSTOM + "\n" + GOOD_DATA_NAME_CUSTOM_2 + "\n" + GOOD_DATA_NAME_CUSTOM_1 + "\n" + GOOD_DATA_NAME_CUSTOM_2 + "\n", writer.toString()); ref {HEADER_NAME_FULL_CUSTOM, writer, GOOD_DATA_NAME_CUSTOM_2, GOOD_DATA_NAME_CUSTOM_1} [369-371]
[m[m07.11.2021 - 16:14:20.451 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.StatefulBeanToCsvTest::writeBadDataCustom has 4 assertions: 
 assertTrue("Exception should have been thrown!", false); ref {} [393-393],
 assertEquals(1, e.getLineNumber()); ref {e} [396-396],
 assertEquals(AnnotatedMockBeanCustom.class, e.getBeanClass()); ref {e} [397-397],
 assertEquals("boolWrapped", e.getDestinationField().getName()); ref {e} [398-398]
[m[m07.11.2021 - 16:14:20.452 [INFO ] ParsingStrategy.parseTestSuite() - Found 4 test cases
[m[m07.11.2021 - 16:14:20.452 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVIteratorTest::readerExceptionCausesRunTimeException has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.452 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVIteratorTest::removethrowsUnsupportedOperationException has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.452 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVIteratorTest::initialReadReturnsStrings has 1 assertions: 
 assertArrayEquals(STRINGS, iterator.next()); ref {STRINGS, iterator} [38-38]
[m[m07.11.2021 - 16:14:20.452 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVIteratorTest::hasNextWorks has 2 assertions: 
 // initial read from constructor
assertTrue(iterator.hasNext()); ref {iterator} [44-44],
 assertFalse(iterator.hasNext()); ref {iterator} [46-46]
[m[m07.11.2021 - 16:14:20.452 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:14:20.453 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:14:20.453 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:14:20.455 [INFO ] ParsingStrategy.parseTestSuite() - Found 10 test cases
[m[m07.11.2021 - 16:14:20.455 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderBuilderTest::testDefaultBuilder has 6 assertions: 
 assertSame(reader, builder.getReader()); ref {reader, builder} [25-25],
 assertNull(builder.getCsvParser()); ref {builder} [26-26],
 assertEquals(CSVReader.DEFAULT_SKIP_LINES, builder.getSkipLines()); ref {CSVReader, builder, CSVReader.DEFAULT_SKIP_LINES} [27-29],
 assertEquals(CSVReader.DEFAULT_SKIP_LINES, csvReader.getSkipLines()); ref {CSVReader, CSVReader.DEFAULT_SKIP_LINES, csvReader} [32-34],
 assertEquals(CSVReader.DEFAULT_KEEP_CR, csvReader.keepCarriageReturns()); ref {CSVReader, CSVReader.DEFAULT_KEEP_CR, csvReader} [35-35],
 assertEquals(CSVReader.DEFAULT_VERIFY_READER, csvReader.verifyReader()); ref {CSVReader.DEFAULT_VERIFY_READER, CSVReader, csvReader} [36-36]
[m[m07.11.2021 - 16:14:20.456 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderBuilderTest::testNullReader has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.456 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderBuilderTest::testWithCSVParserNull has 1 assertions: 
 assertNull(builder.getCsvParser()); ref {builder} [48-48]
[m[m07.11.2021 - 16:14:20.456 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderBuilderTest::testWithCSVParser has 2 assertions: 
 assertSame(csvParser, builder.getCsvParser()); ref {csvParser, builder} [57-57],
 assertSame(csvParser, actual.getParser()); ref {actual, csvParser} [60-60]
[m[m07.11.2021 - 16:14:20.456 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderBuilderTest::testWithSkipLines has 2 assertions: 
 assertEquals(99, builder.getSkipLines()); ref {builder} [67-67],
 assertSame(99, actual.getSkipLines()); ref {actual} [70-70]
[m[m07.11.2021 - 16:14:20.456 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderBuilderTest::testWithKeepCR has 2 assertions: 
 assertTrue(builder.keepCarriageReturn()); ref {builder} [76-76],
 assertTrue(actual.keepCarriageReturns()); ref {actual} [79-79]
[m[m07.11.2021 - 16:14:20.456 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderBuilderTest::testWithSkipLinesZero has 2 assertions: 
 assertEquals(0, builder.getSkipLines()); ref {builder} [86-86],
 assertSame(0, actual.getSkipLines()); ref {actual} [89-89]
[m[m07.11.2021 - 16:14:20.456 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderBuilderTest::testWithSkipLinesNegative has 2 assertions: 
 assertEquals(0, builder.getSkipLines()); ref {builder} [96-96],
 assertSame(0, actual.getSkipLines()); ref {actual} [99-99]
[m[m07.11.2021 - 16:14:20.457 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderBuilderTest::testWithVerifyReader has 1 assertions: 
 assertFalse(reader.verifyReader()); ref {reader} [105-105]
[m[m07.11.2021 - 16:14:20.457 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderBuilderTest::builderWithNullFieldIndicator has 1 assertions: 
 assertEquals(CSVReaderNullFieldIndicator.EMPTY_SEPARATORS, reader.getParser().nullFieldIndicator()); ref {CSVReaderNullFieldIndicator, reader, CSVReaderNullFieldIndicator.EMPTY_SEPARATORS} [112-112]
[m[m07.11.2021 - 16:14:20.469 [INFO ] ParsingStrategy.parseTestSuite() - Found 32 test cases
[m[m07.11.2021 - 16:14:20.469 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::testParseLine has 13 assertions: 
 assertEquals("a", nextLine[0]); ref {nextLine} [58-58],
 assertEquals("b", nextLine[1]); ref {nextLine} [59-59],
 assertEquals("c", nextLine[2]); ref {nextLine} [60-60],
 assertEquals("a", nextLine[0]); ref {nextLine} [64-64],
 assertEquals("b,b,b", nextLine[1]); ref {nextLine} [65-65],
 assertEquals("c", nextLine[2]); ref {nextLine} [66-66],
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [70-70],
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [74-74],
 assertEquals("Glen \"The Man\" Smith", nextLine[0]); ref {nextLine} [78-78],
 // check the tricky situation
assertEquals("\"\"", nextLine[0]); ref {nextLine} [81-81],
 // make sure we didn't ruin the next field..
assertEquals("test", nextLine[1]); ref {nextLine} [82-82],
 assertEquals(4, nextLine.length); ref {nextLine, nextLine.length} [85-85],
 // test end of stream
assertNull(csvr.readNext()); ref {csvr} [88-88]
[m[m07.11.2021 - 16:14:20.470 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::readerCanHandleNullInString has 5 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [102-102],
 assertEquals("a", nextLine[0]); ref {nextLine} [103-103],
 assertEquals("\0b", nextLine[1]); ref {nextLine} [104-104],
 assertEquals(0, nextLine[1].charAt(0)); ref {nextLine} [105-105],
 assertEquals("c", nextLine[2]); ref {nextLine} [106-106]
[m[m07.11.2021 - 16:14:20.470 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::testParseLineStrictQuote has 17 assertions: 
 assertEquals("", nextLine[0]); ref {nextLine} [123-123],
 assertEquals("", nextLine[1]); ref {nextLine} [124-124],
 assertEquals("", nextLine[2]); ref {nextLine} [125-125],
 assertEquals("", nextLine[0]); ref {nextLine} [129-129],
 assertEquals("b,b,b", nextLine[1]); ref {nextLine} [130-130],
 assertEquals("", nextLine[2]); ref {nextLine} [131-131],
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [135-135],
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [139-139],
 assertEquals("Glen \"The Man\" Smith", nextLine[0]); ref {nextLine} [143-143],
 // check the tricky situation
assertTrue(nextLine[0].equals("\"\"")); ref {nextLine} [146-146],
 // make sure we didn't ruin the next field..
assertTrue(nextLine[1].equals("test")); ref {nextLine} [147-147],
 assertEquals(4, nextLine.length); ref {nextLine, nextLine.length} [150-150],
 assertEquals("a\nb", nextLine[0]); ref {nextLine} [151-151],
 assertEquals("", nextLine[1]); ref {nextLine} [152-152],
 assertEquals("\nd", nextLine[2]); ref {nextLine} [153-153],
 assertEquals("", nextLine[3]); ref {nextLine} [154-154],
 // test end of stream
assertNull(csvr.readNext()); ref {csvr} [157-157]
[m[m07.11.2021 - 16:14:20.470 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::testParseAll has 1 assertions: 
 assertEquals(7, csvr.readAll().size()); ref {csvr} [168-168]
[m[m07.11.2021 - 16:14:20.470 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::testOptionalConstructors has 2 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [185-185],
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [188-188]
[m[m07.11.2021 - 16:14:20.470 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::parseQuotedStringWithDefinedSeperator has 1 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [199-199]
[m[m07.11.2021 - 16:14:20.471 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::testSkippingLines has 2 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [217-217],
 assertEquals("a", nextLine[0]); ref {nextLine} [219-219]
[m[m07.11.2021 - 16:14:20.471 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::linesAndRecordsRead has 15 assertions: 
 assertEquals(0, c.getLinesRead()); ref {c} [242-242],
 assertEquals(0, c.getRecordsRead()); ref {c} [243-243],
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [246-246],
 assertEquals(3, c.getLinesRead()); ref {c} [248-248],
 assertEquals(1, c.getRecordsRead()); ref {c} [249-249],
 assertEquals(1, nextLine.length); ref {nextLine, nextLine.length} [252-252],
 assertEquals(0, nextLine[0].length()); ref {nextLine} [253-253],
 assertEquals(4, c.getLinesRead()); ref {c} [255-255],
 // A blank line is considered a record with a single element
assertEquals(2, c.getRecordsRead()); ref {c} [256-256],
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [259-259],
 assertEquals(6, c.getLinesRead()); ref {c} [261-261],
 // two lines read to get a single record.
assertEquals(3, c.getRecordsRead()); ref {c} [262-262],
 assertNull(nextLine); ref {nextLine} [265-265],
 assertEquals(6, c.getLinesRead()); ref {c} [267-267],
 assertEquals(3, c.getRecordsRead()); ref {c} [268-268]
[m[m07.11.2021 - 16:14:20.471 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::testSkippingLinesWithDifferentEscape has 4 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [287-287],
 assertEquals("a", nextLine[0]); ref {nextLine} [289-289],
 assertEquals("b\tb\tb", nextLine[1]); ref {nextLine} [290-290],
 assertEquals("c", nextLine[2]); ref {nextLine} [291-291]
[m[m07.11.2021 - 16:14:20.471 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::testNormalParsedLine has 4 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [309-309],
 assertEquals("a", nextLine[0]); ref {nextLine} [311-311],
 assertEquals("1234567", nextLine[1]); ref {nextLine} [312-312],
 assertEquals("c", nextLine[2]); ref {nextLine} [313-313]
[m[m07.11.2021 - 16:14:20.471 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::testASingleQuoteAsDataElement has 5 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [333-333],
 assertEquals("a", nextLine[0]); ref {nextLine} [335-335],
 assertEquals(1, nextLine[1].length()); ref {nextLine} [336-336],
 assertEquals("\'", nextLine[1]); ref {nextLine} [337-337],
 assertEquals("c", nextLine[2]); ref {nextLine} [338-338]
[m[m07.11.2021 - 16:14:20.472 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::testASingleQuoteAsDataElementWithEmptyField has 5 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [357-357],
 assertEquals("a", nextLine[0]); ref {nextLine} [359-359],
 assertEquals(0, nextLine[1].length()); ref {nextLine} [360-360],
 assertEquals("", nextLine[1]); ref {nextLine} [361-361],
 assertEquals("c", nextLine[2]); ref {nextLine} [362-362]
[m[m07.11.2021 - 16:14:20.472 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::testSpacesAtEndOfString has 4 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [374-374],
 assertEquals("a", nextLine[0]); ref {nextLine} [376-376],
 assertEquals("b", nextLine[1]); ref {nextLine} [377-377],
 assertEquals("c", nextLine[2]); ref {nextLine} [378-378]
[m[m07.11.2021 - 16:14:20.472 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::testEscapedQuote has 2 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [392-392],
 assertEquals("123\"4567", nextLine[1]); ref {nextLine} [394-394]
[m[m07.11.2021 - 16:14:20.472 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::testEscapedEscape has 2 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [407-407],
 assertEquals("123\\4567", nextLine[1]); ref {nextLine} [409-409]
[m[m07.11.2021 - 16:14:20.472 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::testSingleQuoteWhenDoubleQuoteIsQuoteChar has 5 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [430-430],
 assertEquals("a", nextLine[0]); ref {nextLine} [432-432],
 assertEquals(2, nextLine[1].length()); ref {nextLine} [433-433],
 assertEquals("''", nextLine[1]); ref {nextLine} [434-434],
 assertEquals("c", nextLine[2]); ref {nextLine} [435-435]
[m[m07.11.2021 - 16:14:20.472 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::testQuotedParsedLine has 5 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [453-453],
 assertEquals("a", nextLine[0]); ref {nextLine} [455-455],
 assertEquals(1, nextLine[0].length()); ref {nextLine} [456-456],
 assertEquals("1234567", nextLine[1]); ref {nextLine} [458-458],
 assertEquals("c", nextLine[2]); ref {nextLine} [459-459]
[m[m07.11.2021 - 16:14:20.473 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::bug106ParseLineWithCarriageReturnNewLineStrictQuotes has 5 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [475-475],
 assertEquals("a", nextLine[0]); ref {nextLine} [477-477],
 assertEquals(1, nextLine[0].length()); ref {nextLine} [478-478],
 assertEquals("123\r\n4567", nextLine[1]); ref {nextLine} [480-480],
 assertEquals("c", nextLine[2]); ref {nextLine} [481-481]
[m[m07.11.2021 - 16:14:20.473 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::testIssue2992134OutOfPlaceQuotes has 4 assertions: 
 assertEquals("a", nextLine[0]); ref {nextLine} [494-494],
 assertEquals("b", nextLine[1]); ref {nextLine} [495-495],
 assertEquals("c", nextLine[2]); ref {nextLine} [496-496],
 assertEquals("ddd\"eee", nextLine[3]); ref {nextLine} [497-497]
[m[m07.11.2021 - 16:14:20.473 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::quoteAndEscapeMustBeDifferent has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.473 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::separatorAndEscapeMustBeDifferent has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.473 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::separatorAndQuoteMustBeDifferent has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.473 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::testIteratorFunctionality has 1 assertions: 
 assertArrayEquals(expectedLine, line); ref {line, expectedLine} [545-545]
[m[m07.11.2021 - 16:14:20.473 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::canCloseReader has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.473 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::canCreateIteratorFromReader has 1 assertions: 
 assertNotNull(csvr.iterator()); ref {csvr} [556-556]
[m[m07.11.2021 - 16:14:20.474 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::attemptToReadCloseStreamReturnsNull has 1 assertions: 
 assertNull(csvReader.readNext()); ref {csvReader} [564-564]
[m[m07.11.2021 - 16:14:20.474 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::testIssue102 has 6 assertions: 
 assertEquals(2, firstRow.length); ref {firstRow, firstRow.length} [572-572],
 assertTrue(firstRow[0].isEmpty()); ref {firstRow} [573-573],
 assertEquals("a", firstRow[1]); ref {firstRow} [574-574],
 assertEquals(2, secondRow.length); ref {secondRow, secondRow.length} [577-577],
 assertTrue(secondRow[0].isEmpty()); ref {secondRow} [578-578],
 assertEquals("b", secondRow[1]); ref {secondRow} [579-579]
[m[m07.11.2021 - 16:14:20.474 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::issue108ReaderPlaysWellWithChannels has 1 assertions: 
 assertEquals(2, csv.readAll().size()); ref {csv} [591-591]
[m[m07.11.2021 - 16:14:20.474 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::featureRequest60ByDefaultEmptyFieldsAreBlank has 6 assertions: 
 assertEquals(5, row.length); ref {row.length, row} [607-607],
 assertEquals("", row[0]); ref {row} [608-608],
 assertEquals("", row[1]); ref {row} [609-609],
 assertEquals("", row[2]); ref {row} [610-610],
 assertEquals("", row[3]); ref {row} [611-611],
 assertEquals("", row[4]); ref {row} [612-612]
[m[m07.11.2021 - 16:14:20.474 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::featureRequest60TreatEmptyFieldsAsNull has 6 assertions: 
 assertEquals(5, item.length); ref {item.length, item} [630-630],
 assertNull(item[0]); ref {item} [631-631],
 assertNull(item[1]); ref {item} [632-632],
 assertNull(item[2]); ref {item} [633-633],
 assertEquals("", item[3]); ref {item} [634-634],
 assertNull(item[4]); ref {item} [635-635]
[m[m07.11.2021 - 16:14:20.475 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::featureRequest60TreatEmptyDelimitedFieldsAsNull has 6 assertions: 
 assertEquals(5, item.length); ref {item.length, item} [652-652],
 assertEquals("", item[0]); ref {item} [653-653],
 assertEquals("", item[1]); ref {item} [654-654],
 assertEquals("", item[2]); ref {item} [655-655],
 assertNull(item[3]); ref {item} [656-656],
 assertEquals("", item[4]); ref {item} [657-657]
[m[m07.11.2021 - 16:14:20.475 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::featureRequest60TreatEmptyFieldsDelimitedOrNotAsNull has 6 assertions: 
 assertEquals(5, item.length); ref {item.length, item} [674-674],
 assertNull(item[0]); ref {item} [675-675],
 assertNull(item[1]); ref {item} [676-676],
 assertNull(item[2]); ref {item} [677-677],
 assertNull(item[3]); ref {item} [678-678],
 assertNull(item[4]); ref {item} [679-679]
[m[m07.11.2021 - 16:14:20.475 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:14:20.476 [INFO ] ParsingStrategy.parseTestSuite() - Found 6 test cases
[m[m07.11.2021 - 16:14:20.476 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.stream.reader.LineReaderTest::lineReaderWillKeepCR has 1 assertions: 
 assertEquals(WITH_CR, keepCRReader.readLine()); ref {WITH_CR, keepCRReader} [26-26]
[m[m07.11.2021 - 16:14:20.476 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.stream.reader.LineReaderTest::lineReaderWillRemoveCR has 1 assertions: 
 assertEquals(NO_CR, noCRReader.readLine()); ref {noCRReader, NO_CR} [32-32]
[m[m07.11.2021 - 16:14:20.476 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.stream.reader.LineReaderTest::lineReaderKeepingCRWillHandleStringWithNoLinefeed has 1 assertions: 
 assertEquals(NO_CR, reader.readLine()); ref {reader, NO_CR} [38-38]
[m[m07.11.2021 - 16:14:20.476 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.stream.reader.LineReaderTest::lineReaderNoCRWillHandleStringWithNoLinefeed has 1 assertions: 
 assertEquals(NO_CR, reader.readLine()); ref {reader, NO_CR} [44-44]
[m[m07.11.2021 - 16:14:20.476 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.stream.reader.LineReaderTest::lineReaderKeepingCRWillHandleEmptyString has 1 assertions: 
 assertEquals(NULL_STRING, reader.readLine()); ref {reader, NULL_STRING} [50-50]
[m[m07.11.2021 - 16:14:20.477 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.stream.reader.LineReaderTest::lineReaderNoCRWillHandleEmptyString has 1 assertions: 
 assertEquals(NULL_STRING, reader.readLine()); ref {reader, NULL_STRING} [56-56]
[m[m07.11.2021 - 16:14:20.484 [INFO ] ParsingStrategy.parseTestSuite() - Found 16 test cases
[m[m07.11.2021 - 16:14:20.484 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.AnnotationTest::testGoodDataByName has 2 assertions: 
 assertEquals(7, bean.getIntInSubclass()); ref {bean} [85-85],
 assertEquals(8, bean.getIntInSubclass()); ref {bean} [87-87]
[m[m07.11.2021 - 16:14:20.484 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.AnnotationTest::testGoodDataByPosition has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.484 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.AnnotationTest::testGoodDataCustomByName has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.484 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.AnnotationTest::testGoodDataCustomByPosition has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.484 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.AnnotationTest::testCase7 has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.484 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.AnnotationTest::testCase51 has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.485 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.AnnotationTest::testCase11 has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.485 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.AnnotationTest::testCase55 has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.485 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.AnnotationTest::testCase21 has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.485 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.AnnotationTest::testCase63 has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.485 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.AnnotationTest::testBadDataByName has 45 assertions: 
 assertTrue(e.getCause() instanceof CsvRequiredFieldEmptyException); ref {e} [391-391],
 assertEquals(1, csve.getLineNumber()); ref {csve} [393-393],
 assertEquals(AnnotatedMockBeanFull.class, csve.getBeanClass()); ref {csve} [394-394],
 assertEquals("dateDefaultLocale", csve.getDestinationField().getName()); ref {csve} [395-395],
 assertTrue(e.getCause() instanceof CsvDataTypeMismatchException); ref {e} [404-404],
 assertEquals(1, csve.getLineNumber()); ref {csve} [406-406],
 assertEquals(GregorianCalendar.class, csve.getDestinationClass()); ref {csve} [407-407],
 assertEquals(UNPARSABLE, (String) csve.getSourceObject()); ref {csve, UNPARSABLE} [408-408],
 assertTrue(csve.getCause() instanceof ParseException); ref {csve} [409-409],
 assertTrue(e.getCause() instanceof CsvDataTypeMismatchException); ref {e} [419-419],
 assertEquals(1, csve.getLineNumber()); ref {csve} [421-421],
 assertEquals(Date.class, csve.getDestinationClass()); ref {csve} [422-422],
 assertEquals(UNPARSABLE, (String) csve.getSourceObject()); ref {csve, UNPARSABLE} [423-423],
 assertTrue(csve.getCause() instanceof ParseException); ref {csve} [424-424],
 assertTrue(e.getCause() instanceof CsvDataTypeMismatchException); ref {e} [433-433],
 assertEquals(1, csve.getLineNumber()); ref {csve} [435-435],
 assertEquals(Date.class, csve.getDestinationClass()); ref {csve} [436-436],
 assertEquals(UNPARSABLE, (String) csve.getSourceObject()); ref {csve, UNPARSABLE} [437-437],
 assertTrue(csve.getCause() instanceof ParseException); ref {csve} [438-438],
 assertTrue(e.getCause() instanceof CsvDataTypeMismatchException); ref {e} [447-447],
 assertEquals(1, csve.getLineNumber()); ref {csve} [449-449],
 assertEquals(GregorianCalendar.class, csve.getDestinationClass()); ref {csve} [450-450],
 assertEquals(UNPARSABLE, (String) csve.getSourceObject()); ref {csve, UNPARSABLE} [451-451],
 assertTrue(csve.getCause() instanceof ParseException); ref {csve} [452-452],
 assertTrue(e.getCause() instanceof CsvDataTypeMismatchException); ref {e} [462-462],
 assertEquals(1, csve.getLineNumber()); ref {csve} [464-464],
 assertEquals(Date.class, csve.getDestinationClass()); ref {csve} [465-465],
 assertEquals(UNPARSABLE, (String) csve.getSourceObject()); ref {csve, UNPARSABLE} [466-466],
 assertTrue(csve.getCause() instanceof ParseException); ref {csve} [467-467],
 assertTrue(e.getCause() instanceof CsvDataTypeMismatchException); ref {e} [476-476],
 assertEquals(1, csve.getLineNumber()); ref {csve} [478-478],
 assertEquals(Date.class, csve.getDestinationClass()); ref {csve} [479-479],
 assertEquals(UNPARSABLE, (String) csve.getSourceObject()); ref {csve, UNPARSABLE} [480-480],
 assertTrue(csve.getCause() instanceof ParseException); ref {csve} [481-481],
 assertTrue(e.getCause() instanceof CsvDataTypeMismatchException); ref {e} [492-492],
 assertEquals(1, csve.getLineNumber()); ref {csve} [494-494],
 assertTrue(csve.getSourceObject() instanceof String); ref {csve} [495-495],
 assertEquals("19780115T063209", (String) csve.getSourceObject()); ref {csve} [496-496],
 assertEquals(String.class, csve.getDestinationClass()); ref {csve} [497-497],
 assertEquals(1, exlist.size()); ref {exlist} [504-504],
 assertTrue(exlist.get(0) instanceof CsvDataTypeMismatchException); ref {exlist} [505-505],
 assertEquals(1, innere.getLineNumber()); ref {innere} [507-507],
 assertTrue(innere.getSourceObject() instanceof String); ref {innere} [508-508],
 assertEquals("19780115T063209", (String) innere.getSourceObject()); ref {innere} [509-509],
 assertEquals(String.class, innere.getDestinationClass()); ref {innere} [510-510]
[m[m07.11.2021 - 16:14:20.486 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.AnnotationTest::testCase16 has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.486 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.AnnotationTest::testCase60 has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.486 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.AnnotationTest::testBadDataCustomByName has 14 assertions: 
 assertTrue(e.getCause() instanceof CsvDataTypeMismatchException); ref {e} [563-563],
 assertEquals(1, csve.getLineNumber()); ref {csve} [565-565],
 assertTrue(csve.getSourceObject() instanceof String); ref {csve} [566-566],
 assertEquals("invalidstring", (String) csve.getSourceObject()); ref {csve} [567-567],
 assertEquals(Boolean.class, csve.getDestinationClass()); ref {csve} [568-568],
 assertTrue(csve.getCause() instanceof ConversionException); ref {csve} [569-569],
 assertTrue(e.getCause() instanceof CsvRequiredFieldEmptyException); ref {e} [578-578],
 assertEquals(1, csve.getLineNumber()); ref {csve} [580-580],
 assertEquals(AnnotatedMockBeanCustom.class, csve.getBeanClass()); ref {csve} [581-581],
 assertEquals("boolWrapped", csve.getDestinationField().getName()); ref {csve} [582-582],
 assertTrue(e.getCause() instanceof CsvDataTypeMismatchException); ref {e} [591-591],
 assertEquals(1, csve.getLineNumber()); ref {csve} [593-593],
 assertEquals("invaliddatum", csve.getSourceObject()); ref {csve} [594-594],
 assertEquals(Boolean.class, csve.getDestinationClass()); ref {csve} [595-595]
[m[m07.11.2021 - 16:14:20.486 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.AnnotationTest::testBadConverter has 2 assertions: 
 assertEquals(BadIntConverter.class, e.getConverterClass()); ref {e} [608-608],
 assertEquals(BadIntConverter.class, e.getConverterClass()); ref {e} [617-617]
[m[m07.11.2021 - 16:14:20.486 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.AnnotationTest::codeCoverageExceptions has 13 assertions: 
 assertEquals(TestCase80.class, e1.getBeanClass()); ref {e1} [626-626],
 assertEquals(f, e1.getDestinationField()); ref {f, e1} [627-627],
 assertNull(e2.getDestinationClass()); ref {e2} [631-631],
 assertNull(e2.getSourceObject()); ref {e2} [632-632],
 assertEquals(err, e2.getMessage()); ref {err, e2} [634-634],
 assertNull(e3.getConverterClass()); ref {e3} [637-637],
 assertEquals(c, e3.getConverterClass()); ref {c, e3} [639-639],
 assertEquals(err, e3.getMessage()); ref {err, e3} [641-641],
 assertNull(e4.getSourceObject()); ref {e4} [644-644],
 assertEquals(f, e4.getSourceObject()); ref {f, e4} [646-646],
 assertEquals(err, e4.getMessage()); ref {err, e4} [648-648],
 assertEquals(f, e4.getSourceObject()); ref {f, e4} [650-650],
 assertEquals(err, e4.getMessage()); ref {err, e4} [651-651]
[m[m07.11.2021 - 16:14:20.487 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:14:20.487 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:14:20.487 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:14:20.487 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:14:20.489 [INFO ] ParsingStrategy.parseTestSuite() - Found 4 test cases
[m[m07.11.2021 - 16:14:20.489 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.IterableCSVToBeanTest::nextLine has 7 assertions: 
 assertEquals("kyle", mockBean.getName()); ref {mockBean} [55-55],
 assertEquals("abc123456", mockBean.getOrderNumber()); ref {mockBean} [56-56],
 assertEquals(123, mockBean.getNum()); ref {mockBean} [57-57],
 assertEquals("jimmy", mockBean.getName()); ref {mockBean} [60-60],
 assertEquals("def098765", mockBean.getOrderNumber()); ref {mockBean} [61-61],
 assertEquals(456, mockBean.getNum()); ref {mockBean} [62-62],
 assertNull(mockBean); ref {mockBean} [65-65]
[m[m07.11.2021 - 16:14:20.489 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.IterableCSVToBeanTest::nextLineWithFilter has 4 assertions: 
 assertEquals("jimmy", mockBean.getName()); ref {mockBean} [76-76],
 assertEquals("def098765", mockBean.getOrderNumber()); ref {mockBean} [77-77],
 assertEquals(456, mockBean.getNum()); ref {mockBean} [78-78],
 assertNull(mockBean); ref {mockBean} [81-81]
[m[m07.11.2021 - 16:14:20.490 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.IterableCSVToBeanTest::readWithIterator has 13 assertions: 
 // not reached
assertTrue(false); ref {} [90-90],
 // not reached
assertTrue(false); ref {} [97-97],
 assertTrue(iterator.hasNext()); ref {iterator} [102-102],
 assertEquals("kyle", mockBean.getName()); ref {mockBean} [104-104],
 assertEquals("abc123456", mockBean.getOrderNumber()); ref {mockBean} [105-105],
 assertEquals(123, mockBean.getNum()); ref {mockBean} [106-106],
 assertTrue(iterator.hasNext()); ref {iterator} [108-108],
 assertEquals("jimmy", mockBean.getName()); ref {mockBean} [110-110],
 assertEquals("def098765", mockBean.getOrderNumber()); ref {mockBean} [111-111],
 assertEquals(456, mockBean.getNum()); ref {mockBean} [112-112],
 assertFalse(iterator.hasNext()); ref {iterator} [114-114],
 assertFalse(true); ref {} [117-117],
 assertFalse(iterator.hasNext()); ref {iterator} [120-120]
[m[m07.11.2021 - 16:14:20.490 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.IterableCSVToBeanTest::readWithIteratorAndFilter has 7 assertions: 
 assertTrue(iterator.hasNext()); ref {iterator} [132-132],
 assertEquals("jimmy", mockBean.getName()); ref {mockBean} [134-134],
 assertEquals("def098765", mockBean.getOrderNumber()); ref {mockBean} [135-135],
 assertEquals(456, mockBean.getNum()); ref {mockBean} [136-136],
 assertFalse(iterator.hasNext()); ref {iterator} [138-138],
 assertFalse(true); ref {} [141-141],
 assertFalse(iterator.hasNext()); ref {iterator} [144-144]
[m[m07.11.2021 - 16:14:20.490 [INFO ] ParsingStrategy.parseTestSuite() - Found 1 test case
[m[m07.11.2021 - 16:14:20.491 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.OpencsvTest::testWriteRead has 3 assertions: 
 assertTrue(line.length == data[row].length); ref {data[row].length, data, line.length, line, row} [56-56],
 assertTrue(line[col].equals("")); ref {col, line} [60-60],
 assertTrue(line[col].equals(data[row][col])); ref {col, data, line, row} [62-62]
[m[m07.11.2021 - 16:14:20.492 [INFO ] ParsingStrategy.parseTestSuite() - Found 3 test cases
[m[m07.11.2021 - 16:14:20.492 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest::testParse has 5 assertions: 
 assertNotNull(list); ref {list} [46-46],
 assertTrue(list.size() == 2); ref {list} [47-47],
 assertEquals("kyle", bean.getName()); ref {bean} [49-49],
 assertEquals("123456", bean.getOrderNumber()); ref {bean} [50-50],
 assertEquals("emp123", bean.getId()); ref {bean} [51-51]
[m[m07.11.2021 - 16:14:20.492 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest::getColumnNameReturnsNullIfColumnNumberIsTooLarge has 4 assertions: 
 assertEquals("name", strat.getColumnName(0)); ref {strat} [70-70],
 assertEquals("orderNumber", strat.getColumnName(1)); ref {strat} [71-71],
 assertEquals("id", strat.getColumnName(2)); ref {strat} [72-72],
 assertNull(strat.getColumnName(3)); ref {strat} [73-73]
[m[m07.11.2021 - 16:14:20.492 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest::columnNameMappingShouldBeCaseInsensitive has 5 assertions: 
 assertNotNull(strat.getColumnMapping()); ref {strat} [88-88],
 assertEquals("name", strat.getColumnName(0)); ref {strat} [93-93],
 assertEquals("orderNumber", strat.getColumnName(1)); ref {strat} [94-94],
 assertEquals("id", strat.getColumnName(2)); ref {strat} [95-95],
 assertNull(strat.getColumnName(3)); ref {strat} [96-96]
[m[m07.11.2021 - 16:14:20.492 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:14:20.517 [INFO ] ParsingStrategy.parseTestSuite() - Found 32 test cases
[m[m07.11.2021 - 16:14:20.517 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::correctlyParseNullString has 1 assertions: 
 assertEquals(0, sw.toString().length()); ref {sw} [66-66]
[m[m07.11.2021 - 16:14:20.517 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::correctlyParserNullObject has 1 assertions: 
 assertEquals(0, sw.toString().length()); ref {sw} [74-74]
[m[m07.11.2021 - 16:14:20.518 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testParseLine has 5 assertions: 
 assertEquals("'a','b','c'\n", output); ref {output} [88-88],
 assertEquals("'a','b,b,b','c'\n", output); ref {output} [93-93],
 assertEquals("\n", output); ref {output} [98-98],
 assertEquals("'This is a \n multiline entry','so is \n this'\n", output); ref {output} [103-103],
 assertEquals("'This is a \"\" multiline entry','so is \n this'\n", output); ref {output} [109-109]
[m[m07.11.2021 - 16:14:20.518 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testSpecialCharacters has 1 assertions: 
 assertEquals("'This is a \r multiline entry','so is \n this'\n", output); ref {output} [117-117]
[m[m07.11.2021 - 16:14:20.518 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::parseLineWithBothEscapeAndQuoteChar has 1 assertions: 
 assertEquals("'This is a \"'multiline\"' entry','so is \n this'\n", output); ref {output} [124-124]
[m[m07.11.2021 - 16:14:20.518 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testParseLineWithNoEscapeChar has 4 assertions: 
 assertEquals("'a','b','c'\n", output); ref {output} [138-138],
 assertEquals("'a','b,b,b','c'\n", output); ref {output} [143-143],
 assertEquals("\n", output); ref {output} [148-148],
 assertEquals("'This is a \n multiline entry','so is \n this'\n", output); ref {output} [153-153]
[m[m07.11.2021 - 16:14:20.518 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::parseLineWithNoEscapeCharAndQuotes has 1 assertions: 
 assertEquals("'This is a \" 'multiline' entry','so is \n this'\n", output); ref {output} [159-159]
[m[m07.11.2021 - 16:14:20.518 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testWriteAllAsList has 5 assertions: 
 assertFalse(csvw.checkError()); ref {csvw} [184-184],
 assertEquals(3, lines.length); ref {lines.length, lines} [188-188],
 assertEquals("\"Name\",\"Phone\",\"Email\"", lines[0]); ref {lines} [189-189],
 assertEquals("\"Glen\",\"1234\",\"glen@abcd.com\"", lines[1]); ref {lines} [190-190],
 assertEquals("\"John\",\"5678\",\"john@efgh.com\"", lines[2]); ref {lines} [191-191]
[m[m07.11.2021 - 16:14:20.518 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testWriteAllAsIterable has 5 assertions: 
 assertFalse(csvw.checkError()); ref {csvw} [225-225],
 assertEquals(3, lines.length); ref {lines.length, lines} [230-230],
 assertEquals("\"Name\",\"Phone\",\"Email\"", lines[0]); ref {lines} [231-231],
 assertEquals("\"Glen\",\"1234\",\"glen@abcd.com\"", lines[1]); ref {lines} [232-232],
 assertEquals("\"John\",\"5678\",\"john@efgh.com\"", lines[2]); ref {lines} [233-233]
[m[m07.11.2021 - 16:14:20.518 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testWriteAllObjects has 2 assertions: 
 assertEquals(3, lines.length); ref {lines.length, lines} [259-259],
 assertEquals("1234", values[1]); ref {values} [262-262]
[m[m07.11.2021 - 16:14:20.518 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testNoQuoteChars has 1 assertions: 
 assertEquals("Foo,Bar,Baz\n", result); ref {result} [279-279]
[m[m07.11.2021 - 16:14:20.519 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testNoQuoteCharsAndNoEscapeChars has 1 assertions: 
 assertEquals("Foo,Bar,Baz\n", result); ref {result} [296-296]
[m[m07.11.2021 - 16:14:20.519 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testIntelligentQuotes has 1 assertions: 
 assertEquals("1,Foo,\"With,Separator\",\"Line\nBreak\",\"Hello \"\"Foo Bar\"\" World\",Bar\n", result); ref {result} [310-310]
[m[m07.11.2021 - 16:14:20.519 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testNullValues has 1 assertions: 
 assertEquals("\"Foo\",,\"Bar\",\"baz\"\n", result); ref {result} [328-328]
[m[m07.11.2021 - 16:14:20.519 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testStreamFlushing has 2 assertions: 
 assertFalse(tester.exists()); ref {tester} [337-337],
 assertTrue(tester.exists()); ref {tester} [350-350]
[m[m07.11.2021 - 16:14:20.519 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::flushWillThrowIOException has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.519 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::flushQuietlyWillNotThrowException has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.519 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testAlternateEscapeChar has 1 assertions: 
 assertEquals("\"Foo\",\"bar''s\"\n", sw.toString()); ref {sw} [380-380]
[m[m07.11.2021 - 16:14:20.519 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::embeddedQuoteInString has 1 assertions: 
 assertEquals("\"Foo\",\"I choose a \\\"hero\\\" for this adventure\"\n", sw.toString()); ref {sw} [389-389]
[m[m07.11.2021 - 16:14:20.519 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testNoQuotingNoEscaping has 1 assertions: 
 assertEquals("\"Foo\",\"Bar\"\n", sw.toString()); ref {sw} [398-398]
[m[m07.11.2021 - 16:14:20.519 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testNestedQuotes has 2 assertions: 
 // assert that the writer was also closed.
fwriter.flush(); ref {fwriter} [430-430],
 assertTrue(oracle.equals(fileContents.toString())); ref {oracle, fileContents} [455-455]
[m[m07.11.2021 - 16:14:20.520 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testAlternateLineFeeds has 1 assertions: 
 assertTrue(result.endsWith("\r")); ref {result} [466-466]
[m[m07.11.2021 - 16:14:20.520 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testResultSetWithHeaders has 4 assertions: 
 assertFalse(csvw.checkError()); ref {csvw} [480-480],
 assertNotNull(result); ref {result} [483-483],
 assertEquals("\"Foo\",\"Bar\",\"baz\"\n\"v1\",\"v2\",\"v3\"\n", result); ref {result} [484-484],
 assertEquals(2, linesWritten); ref {linesWritten} [485-485]
[m[m07.11.2021 - 16:14:20.520 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testMultiLineResultSetWithHeaders has 4 assertions: 
 assertFalse(csvw.checkError()); ref {csvw} [500-500],
 assertNotNull(result); ref {result} [503-503],
 assertEquals("\"Foo\",\"Bar\",\"baz\"\n\"v1\",\"v2\",\"v3\"\n\"v1\",\"v2\",\"v3\"\n\"v1\",\"v2\",\"v3\"\n", result); ref {result} [504-504],
 assertEquals(4, linesWritten); ref {linesWritten} [505-505]
[m[m07.11.2021 - 16:14:20.520 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testResultSetWithoutHeaders has 4 assertions: 
 assertFalse(csvw.checkError()); ref {csvw} [520-520],
 assertNotNull(result); ref {result} [523-523],
 assertEquals("\"v1\",\"v2\",\"v3\"\n", result); ref {result} [524-524],
 assertEquals(1, linesWritten); ref {linesWritten} [525-525]
[m[m07.11.2021 - 16:14:20.520 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testMultiLineResultSetWithoutHeaders has 4 assertions: 
 assertFalse(csvw.checkError()); ref {csvw} [541-541],
 assertNotNull(result); ref {result} [544-544],
 assertEquals("\"v1\",\"v2\",\"v3\"\n\"v1\",\"v2\",\"v3\"\n\"v1\",\"v2\",\"v3\"\n", result); ref {result} [545-545],
 assertEquals(3, linesWritten); ref {linesWritten} [546-546]
[m[m07.11.2021 - 16:14:20.520 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testResultSetTrim has 4 assertions: 
 assertFalse(csvw.checkError()); ref {csvw} [561-561],
 assertNotNull(result); ref {result} [564-564],
 assertEquals("\"Foo\",\"Bar\",\"baz\"\n\"v1\",\"v2\",\"v3\"\n", result); ref {result} [565-565],
 assertEquals(2, linesWritten); ref {linesWritten} [566-566]
[m[m07.11.2021 - 16:14:20.520 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::needToSetBothQuoteAndEscapeCharIfYouWantThemToBeTheSame has 4 assertions: 
 assertFalse(csvw.checkError()); ref {csvw} [581-581],
 assertNotNull(result); ref {result} [584-584],
 assertEquals("'Foo','Bar','baz'\n'v1','v2''v2a','v3'\n", result); ref {result} [585-585],
 assertEquals(2, linesWritten); ref {linesWritten} [586-586]
[m[m07.11.2021 - 16:14:20.520 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::issue123SeparatorEscapedWhenQuoteIsNoQuoteChar has 2 assertions: 
 assertNotNull(result); ref {result} [602-602],
 assertEquals("Foo,Bar,baz\nv1,v2" + CSVWriter.DEFAULT_ESCAPE_CHARACTER + CSVWriter.DEFAULT_ESCAPE_CHARACTER + "v2a,v3\n", result); ref {CSVWriter.DEFAULT_ESCAPE_CHARACTER, result, CSVWriter} [603-603]
[m[m07.11.2021 - 16:14:20.520 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::issue123SeparatorEscapedWhenQuoteIsNoQuoteCharSpecifingNoneDefaultEscapeChar has 2 assertions: 
 assertNotNull(result); ref {result} [619-619],
 assertEquals("Foo,Bar,baz\nv1,v2" + escapeCharacter + escapeCharacter + "v2a" + escapeCharacter + CSVWriter.DEFAULT_SEPARATOR + "v2b,v3\n", result); ref {result, CSVWriter.DEFAULT_SEPARATOR, CSVWriter, escapeCharacter} [620-620]
[m[m07.11.2021 - 16:14:20.521 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testIOException has 1 assertions: 
 assertTrue(csvWriter.checkError()); ref {csvWriter} [633-633]
[m[m07.11.2021 - 16:14:20.521 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::checkErrorReturnsTrueWhenPassedInPrintWriter has 1 assertions: 
 assertTrue(csvWriter.checkError()); ref {csvWriter} [649-649]
[m[m07.11.2021 - 16:14:20.523 [INFO ] ParsingStrategy.parseTestSuite() - Found 20 test cases
[m[m07.11.2021 - 16:14:20.523 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanTest::throwRuntimeExceptionWhenExceptionIsThrown has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.524 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanTest::throwRuntimeExceptionLineWhenExceptionIsThrown has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.524 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanTest::parseBeanWithNoAnnotations has 3 assertions: 
 assertEquals(2, beanList.size()); ref {beanList} [163-163],
 assertTrue(beanList.contains(createMockBean("kyle", "abc123456", 123))); ref {beanList} [164-164],
 assertTrue(beanList.contains(createMockBean("jimmy", "def098765", 456))); ref {beanList} [165-165]
[m[m07.11.2021 - 16:14:20.524 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanTest::parseBeanWithAnnotations has 4 assertions: 
 assertEquals(2, beanList.size()); ref {beanList} [183-183],
 assertTrue(expectedNames.contains(bean.getName())); ref {expectedNames, bean} [189-189],
 assertTrue(expectedOrderNumbers.contains(bean.getOrderNumber())); ref {expectedOrderNumbers, bean} [190-190],
 assertTrue(expectedNums.contains(bean.getNum())); ref {expectedNums, bean} [191-191]
[m[m07.11.2021 - 16:14:20.524 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanTest::parseBeanWithSomeAnnotations has 4 assertions: 
 assertEquals(2, beanList.size()); ref {beanList} [202-202],
 assertTrue(expectedNames.contains(bean.getName())); ref {expectedNames, bean} [207-207],
 assertTrue(expectedNums.contains(bean.getNum())); ref {expectedNums, bean} [208-208],
 assertNull(bean.getOrderNumber()); ref {bean} [209-209]
[m[m07.11.2021 - 16:14:20.524 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanTest::parseAnnotatedBeanWithAllValidDataTypes has 10 assertions: 
 assertEquals(4, beanList.size()); ref {beanList} [221-221],
 assertTrue(bean.getFamilyId() == 922337203685477580L); ref {bean} [223-223],
 assertTrue(bean.getFamilyName().equals("Jones")); ref {bean} [224-224],
 assertTrue(bean.getFamilySize() == 5); ref {bean} [225-225],
 assertTrue(bean.getAverageAge() == 18.77293748162537D); ref {bean} [226-226],
 assertTrue(bean.getAverageIncome() == 32000.729F); ref {bean} [227-227],
 assertTrue(bean.getNumberOfPets() == 1); ref {bean} [228-228],
 assertTrue(bean.getNumberOfBedrooms() == 4); ref {bean} [229-229],
 assertTrue(bean.getZipcodePrefix() == 'Z'); ref {bean} [230-230],
 assertTrue(bean.isHasBeenContacted()); ref {bean} [231-231]
[m[m07.11.2021 - 16:14:20.524 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanTest::parseAnnotatedBeanWithPrivateField has 3 assertions: 
 assertEquals(1, beanList.size()); ref {beanList} [241-241],
 assertTrue("firstValue".equals(bean.getPrivateField1())); ref {bean} [244-244],
 assertTrue("secondValue".equals(bean.getPrivateField2())); ref {bean} [245-245]
[m[m07.11.2021 - 16:14:20.524 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanTest::parseAnnotatedBeanWithFieldsOfAllAccessModifierTypes has 5 assertions: 
 assertEquals(1, beanList.size()); ref {beanList} [255-255],
 assertTrue("firstValue".equals(bean.getPublicField())); ref {bean} [258-258],
 assertTrue("secondValue".equals(bean.getPrivateField())); ref {bean} [259-259],
 assertTrue("thirdValue".equals(bean.getProtectedField())); ref {bean} [260-260],
 assertTrue("fourthValue".equals(bean.getPackagePrivateField())); ref {bean} [261-261]
[m[m07.11.2021 - 16:14:20.524 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanTest::bug133ShouldNotThrowNullPointerExceptionWhenProcessingEmptyWithNoAnnotations has 1 assertions: 
 assertEquals(2, beanList.size()); ref {beanList} [282-282]
[m[m07.11.2021 - 16:14:20.525 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanTest::throwRuntimeExceptionWhenUnsupportedDataTypeUsedInAnnotatedBean has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.525 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanTest::throwRuntimeExceptionWhenRequiredFieldNotProvidedInAnnotatedBean has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.525 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanTest::throwIllegalStateWhenParseWithoutArgumentsIsCalled has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.525 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanTest::throwIllegalStateWhenOnlyReaderIsSpecifiedToParseWithoutArguments has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.525 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanTest::throwIllegalStateWhenOnlyMapperIsSpecifiedToParseWithoutArguments has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.525 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanTest::throwIllegalStateWhenReaderNotProvidedInBuilder has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.525 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanTest::throwIllegalStateWhenTypeAndMapperNotProvidedInBuilder has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.525 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanTest::testMinimumBuilder has 1 assertions: 
 assertEquals(2, result.size()); ref {result} [343-343]
[m[m07.11.2021 - 16:14:20.526 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanTest::testMaximumBuilder has 6 assertions: 
 // Three lines, one filtered, one throws an exception
assertEquals(1, result.size()); ref {result} [386-386],
 assertEquals(1, csvtb.getCapturedExceptions().size()); ref {csvtb} [387-387],
 assertEquals("\ttest string of everything!", bean.getStringClass()); ref {bean} [389-389],
 assertTrue(bean.getBoolWrapped()); ref {bean} [390-390],
 assertFalse(bean.isBoolPrimitive()); ref {bean} [391-391],
 assertTrue(bean.getByteWrappedDefaultLocale() == 1); ref {bean} [392-392]
[m[m07.11.2021 - 16:14:20.526 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanTest::testColumnMappingStrategyWithBuilder has 1 assertions: 
 assertEquals(2, result.size()); ref {result} [404-404]
[m[m07.11.2021 - 16:14:20.526 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanTest::testMappingWithoutAnnotationsWithBuilder has 1 assertions: 
 assertEquals(2, result.size()); ref {result} [414-414]
[m[m07.11.2021 - 16:14:20.526 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:14:20.526 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:14:20.526 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:14:20.526 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:14:20.527 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:14:20.533 [INFO ] ParsingStrategy.parseTestSuite() - Found 23 test cases
[m[m07.11.2021 - 16:14:20.533 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::canPrintColumnNames has 1 assertions: 
 assertArrayEquals(expectedNames, columnNames); ref {expectedNames, columnNames} [49-49]
[m[m07.11.2021 - 16:14:20.533 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::getObjectFromResultSet has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [65-65]
[m[m07.11.2021 - 16:14:20.533 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::getBitFromResultSet has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [82-82]
[m[m07.11.2021 - 16:14:20.533 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::getBooleanFromResultSet has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [98-98]
[m[m07.11.2021 - 16:14:20.534 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::getBigIntFromResultSet has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [114-114]
[m[m07.11.2021 - 16:14:20.534 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::getBigDecimalFromResultSet has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [131-131]
[m[m07.11.2021 - 16:14:20.534 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::issue121ConvertingNaNForDoubleOrFloat has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [147-147]
[m[m07.11.2021 - 16:14:20.534 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::issue121ConvertingPositiveInfinityForDoubleOrFloat has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [163-163]
[m[m07.11.2021 - 16:14:20.534 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::issue121ConvertingNegativeInfinityForDoubleOrFloat has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [180-180]
[m[m07.11.2021 - 16:14:20.534 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::getIntegerFromResultSet has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [196-196]
[m[m07.11.2021 - 16:14:20.534 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::getCharFromResultSet has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [213-213]
[m[m07.11.2021 - 16:14:20.534 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::getCharHandlesNulls has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [230-230]
[m[m07.11.2021 - 16:14:20.534 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::getUnsupportedFromResultSet has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [247-247]
[m[m07.11.2021 - 16:14:20.534 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::getDateFromResultSet has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [268-268]
[m[m07.11.2021 - 16:14:20.535 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::getDateFromResultSetUsingCustomFormat has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [290-290]
[m[m07.11.2021 - 16:14:20.535 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::setDateFormat has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [313-313]
[m[m07.11.2021 - 16:14:20.535 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::getTimeFromResultSet has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [334-334]
[m[m07.11.2021 - 16:14:20.535 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::getTimestampFromResultSet has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [354-354]
[m[m07.11.2021 - 16:14:20.535 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::getTimestampFromResultSetWithCustomFormat has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [375-375]
[m[m07.11.2021 - 16:14:20.535 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::setDateTimeFormat has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [397-397]
[m[m07.11.2021 - 16:14:20.535 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::getClobFromResultSet has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [415-415]
[m[m07.11.2021 - 16:14:20.535 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::getEmptyClobFromResultSet has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [433-433]
[m[m07.11.2021 - 16:14:20.535 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::getLargeClobFromResultSet has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [451-451]
[m[m07.11.2021 - 16:14:20.537 [INFO ] ParsingStrategy.parseTestSuite() - Found 10 test cases
[m[m07.11.2021 - 16:14:20.537 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.UniCodeTest::canParseUnicode has 4 assertions: 
 assertEquals(2, items.length); ref {items.length, items} [30-30],
 assertEquals(FIRST_STRING, items[0]); ref {FIRST_STRING, items} [31-31],
 assertEquals(SECOND_STRING, items[1]); ref {items, SECOND_STRING} [32-32],
 assertArrayEquals(UNICODE_ARRAY, items); ref {UNICODE_ARRAY, items} [33-33]
[m[m07.11.2021 - 16:14:20.537 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.UniCodeTest::readerTest has 1 assertions: 
 assertEquals(FIRST_STRING, testString); ref {testString, FIRST_STRING} [40-40]
[m[m07.11.2021 - 16:14:20.537 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.UniCodeTest::writerTest has 1 assertions: 
 assertEquals(FIRST_STRING, sw.toString()); ref {sw, FIRST_STRING} [47-47]
[m[m07.11.2021 - 16:14:20.538 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.UniCodeTest::runUniCodeThroughCSVReader has 4 assertions: 
 assertEquals(2, items.length); ref {items.length, items} [54-54],
 assertEquals(FIRST_STRING, items[0]); ref {FIRST_STRING, items} [55-55],
 assertEquals(SECOND_STRING, items[1]); ref {items, SECOND_STRING} [56-56],
 assertArrayEquals(UNICODE_ARRAY, items); ref {UNICODE_ARRAY, items} [57-57]
[m[m07.11.2021 - 16:14:20.538 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.UniCodeTest::runUniCodeThroughCSVWriter has 1 assertions: 
 assertEquals(COMPOUND_STRING_WITH_QUOTES.trim(), sw.toString().trim()); ref {sw, COMPOUND_STRING_WITH_QUOTES} [65-65]
[m[m07.11.2021 - 16:14:20.538 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.UniCodeTest::runASCIIThroughCSVWriter has 1 assertions: 
 assertEquals(ASCII_STRING_WITH_QUOTES.trim(), sw.toString().trim()); ref {ASCII_STRING_WITH_QUOTES, sw} [73-73]
[m[m07.11.2021 - 16:14:20.538 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.UniCodeTest::writeThenReadAscii has 2 assertions: 
 assertEquals(2, items.length); ref {items.length, items} [84-84],
 assertArrayEquals(ASCII_ARRAY, items); ref {ASCII_ARRAY, items} [85-85]
[m[m07.11.2021 - 16:14:20.538 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.UniCodeTest::writeThenReadTwiceAscii has 5 assertions: 
 assertEquals(2, lines.size()); ref {lines} [97-97],
 assertEquals(2, items.length); ref {items.length, items} [100-100],
 assertArrayEquals(ASCII_ARRAY, items); ref {ASCII_ARRAY, items} [101-101],
 assertEquals(2, items.length); ref {items.length, items} [105-105],
 assertArrayEquals(ASCII_ARRAY, items); ref {ASCII_ARRAY, items} [106-106]
[m[m07.11.2021 - 16:14:20.538 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.UniCodeTest::writeThenReadTwiceUnicode has 5 assertions: 
 assertEquals(2, lines.size()); ref {lines} [118-118],
 assertEquals(2, items.length); ref {items.length, items} [121-121],
 assertArrayEquals(UNICODE_ARRAY, items); ref {UNICODE_ARRAY, items} [122-122],
 assertEquals(2, items.length); ref {items.length, items} [126-126],
 assertArrayEquals(UNICODE_ARRAY, items); ref {UNICODE_ARRAY, items} [127-127]
[m[m07.11.2021 - 16:14:20.538 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.UniCodeTest::writeThenReadTwiceMixedUnicode has 5 assertions: 
 assertEquals(2, lines.size()); ref {lines} [139-139],
 assertEquals(4, items.length); ref {items.length, items} [142-142],
 assertArrayEquals(MIXED_ARRAY, items); ref {MIXED_ARRAY, items} [143-143],
 assertEquals(4, items.length); ref {items.length, items} [147-147],
 assertArrayEquals(MIXED_ARRAY, items); ref {MIXED_ARRAY, items} [148-148]
[m[m07.11.2021 - 16:14:20.538 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:14:20.539 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:14:20.540 [INFO ] ParsingStrategy.parseTestSuite() - Found 7 test cases
[m[m07.11.2021 - 16:14:20.540 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserBuilderTest::testDefaultBuilder has 14 assertions: 
 assertEquals(ICSVParser.DEFAULT_SEPARATOR, builder.getSeparator()); ref {ICSVParser.DEFAULT_SEPARATOR, builder, ICSVParser} [20-22],
 assertEquals(ICSVParser.DEFAULT_QUOTE_CHARACTER, builder.getQuoteChar()); ref {ICSVParser.DEFAULT_QUOTE_CHARACTER, builder, ICSVParser} [23-25],
 assertEquals(ICSVParser.DEFAULT_ESCAPE_CHARACTER, builder.getEscapeChar()); ref {builder, ICSVParser.DEFAULT_ESCAPE_CHARACTER, ICSVParser} [26-28],
 assertEquals(ICSVParser.DEFAULT_STRICT_QUOTES, builder.isStrictQuotes()); ref {builder, ICSVParser.DEFAULT_STRICT_QUOTES, ICSVParser} [29-31],
 assertEquals(ICSVParser.DEFAULT_IGNORE_LEADING_WHITESPACE, builder.isIgnoreLeadingWhiteSpace()); ref {builder, ICSVParser.DEFAULT_IGNORE_LEADING_WHITESPACE, ICSVParser} [32-34],
 assertEquals(ICSVParser.DEFAULT_IGNORE_QUOTATIONS, builder.isIgnoreQuotations()); ref {builder, ICSVParser.DEFAULT_IGNORE_QUOTATIONS, ICSVParser} [35-37],
 assertEquals(CSVReaderNullFieldIndicator.NEITHER, builder.nullFieldIndicator()); ref {CSVReaderNullFieldIndicator, CSVReaderNullFieldIndicator.NEITHER, builder} [38-38],
 assertEquals(ICSVParser.DEFAULT_SEPARATOR, parser.getSeparator()); ref {ICSVParser.DEFAULT_SEPARATOR, parser, ICSVParser} [41-43],
 assertEquals(ICSVParser.DEFAULT_QUOTE_CHARACTER, parser.getQuotechar()); ref {ICSVParser.DEFAULT_QUOTE_CHARACTER, parser, ICSVParser} [44-46],
 assertEquals(ICSVParser.DEFAULT_ESCAPE_CHARACTER, parser.getEscape()); ref {parser, ICSVParser.DEFAULT_ESCAPE_CHARACTER, ICSVParser} [47-49],
 assertEquals(ICSVParser.DEFAULT_STRICT_QUOTES, parser.isStrictQuotes()); ref {parser, ICSVParser.DEFAULT_STRICT_QUOTES, ICSVParser} [50-52],
 assertEquals(ICSVParser.DEFAULT_IGNORE_LEADING_WHITESPACE, parser.isIgnoreLeadingWhiteSpace()); ref {parser, ICSVParser.DEFAULT_IGNORE_LEADING_WHITESPACE, ICSVParser} [53-55],
 assertEquals(ICSVParser.DEFAULT_IGNORE_QUOTATIONS, parser.isIgnoreQuotations()); ref {parser, ICSVParser.DEFAULT_IGNORE_QUOTATIONS, ICSVParser} [56-58],
 assertEquals(CSVReaderNullFieldIndicator.NEITHER, parser.nullFieldIndicator()); ref {parser, CSVReaderNullFieldIndicator, CSVReaderNullFieldIndicator.NEITHER} [59-59]
[m[m07.11.2021 - 16:14:20.540 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserBuilderTest::testWithSeparator has 2 assertions: 
 assertEquals(expected, builder.getSeparator()); ref {expected, builder} [66-66],
 assertEquals(expected, builder.build().getSeparator()); ref {expected, builder} [67-67]
[m[m07.11.2021 - 16:14:20.540 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserBuilderTest::testWithQuoteChar has 2 assertions: 
 assertEquals(expected, builder.getQuoteChar()); ref {expected, builder} [74-74],
 assertEquals(expected, builder.build().getQuotechar()); ref {expected, builder} [75-75]
[m[m07.11.2021 - 16:14:20.540 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserBuilderTest::testWithEscapeChar has 2 assertions: 
 assertEquals(expected, builder.getEscapeChar()); ref {expected, builder} [82-82],
 assertEquals(expected, builder.build().getEscape()); ref {expected, builder} [83-83]
[m[m07.11.2021 - 16:14:20.540 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserBuilderTest::testWithStrictQuotes has 2 assertions: 
 assertEquals(expected, builder.isStrictQuotes()); ref {expected, builder} [90-90],
 assertEquals(expected, builder.build().isStrictQuotes()); ref {expected, builder} [91-91]
[m[m07.11.2021 - 16:14:20.541 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserBuilderTest::testWithIgnoreLeadingWhiteSpace has 2 assertions: 
 assertEquals(expected, builder.isIgnoreLeadingWhiteSpace()); ref {expected, builder} [98-98],
 assertEquals(expected, builder.build().isIgnoreLeadingWhiteSpace()); ref {expected, builder} [99-99]
[m[m07.11.2021 - 16:14:20.541 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserBuilderTest::testWithIgnoreQuotations has 2 assertions: 
 assertEquals(expected, builder.isIgnoreQuotations()); ref {expected, builder} [106-106],
 assertEquals(expected, builder.build().isIgnoreQuotations()); ref {expected, builder} [107-107]
[m[m07.11.2021 - 16:14:20.541 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:14:20.542 [INFO ] ParsingStrategy.parseTestSuite() - Found 12 test cases
[m[m07.11.2021 - 16:14:20.542 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.ColumnPositionMappingStrategyTest::getColumnIndexBeforeMappingSetReturnsNull has 1 assertions: 
 assertNull(strat.getColumnIndex("name")); ref {strat} [41-41]
[m[m07.11.2021 - 16:14:20.543 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.ColumnPositionMappingStrategyTest::getColumnIndexEmptyMappingReturnsNull has 1 assertions: 
 assertNull(strat.getColumnIndex("name")); ref {strat} [47-47]
[m[m07.11.2021 - 16:14:20.543 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.ColumnPositionMappingStrategyTest::getColumnIndex has 5 assertions: 
 assertNull(strat.getColumnIndex("name")); ref {strat} [52-52],
 assertEquals(0, strat.getColumnIndex("name").intValue()); ref {strat} [56-56],
 assertEquals(1, strat.getColumnIndex("orderNumber").intValue()); ref {strat} [57-57],
 assertEquals(2, strat.getColumnIndex("id").intValue()); ref {strat} [58-58],
 assertNull(strat.getColumnIndex("name not mapped")); ref {strat} [60-60]
[m[m07.11.2021 - 16:14:20.543 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.ColumnPositionMappingStrategyTest::testParse has 6 assertions: 
 assertNotNull(list); ref {list} [73-73],
 assertTrue(list.size() == 2); ref {list} [74-74],
 assertEquals("kyle", bean.getName()); ref {bean} [76-76],
 assertEquals("123456", bean.getOrderNumber()); ref {bean} [77-77],
 assertEquals("emp123", bean.getId()); ref {bean} [78-78],
 assertEquals(1, bean.getNum()); ref {bean} [79-79]
[m[m07.11.2021 - 16:14:20.543 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.ColumnPositionMappingStrategyTest::testParseWithTrailingSpaces has 6 assertions: 
 assertNotNull(list); ref {list} [93-93],
 assertTrue(list.size() == 2); ref {list} [94-94],
 assertEquals("kyle  ", bean.getName()); ref {bean} [96-96],
 assertEquals("123456  ", bean.getOrderNumber()); ref {bean} [97-97],
 assertEquals("emp123  ", bean.getId()); ref {bean} [98-98],
 assertEquals(1, bean.getNum()); ref {bean} [99-99]
[m[m07.11.2021 - 16:14:20.543 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.ColumnPositionMappingStrategyTest::testGetColumnMapping has 5 assertions: 
 assertNotNull(columnMapping); ref {columnMapping} [105-105],
 assertEquals(0, columnMapping.length); ref {columnMapping.length, columnMapping} [106-106],
 assertNotNull(columnMapping); ref {columnMapping} [112-112],
 assertEquals(3, columnMapping.length); ref {columnMapping.length, columnMapping} [113-113],
 assertArrayEquals(columns, columnMapping); ref {columns, columnMapping} [114-114]
[m[m07.11.2021 - 16:14:20.543 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.ColumnPositionMappingStrategyTest::testGetColumnNames has 4 assertions: 
 assertEquals("name", strat.getColumnName(0)); ref {strat} [123-123],
 assertEquals(null, strat.getColumnName(1)); ref {strat} [124-124],
 assertEquals("id", strat.getColumnName(2)); ref {strat} [125-125],
 assertEquals(null, strat.getColumnName(3)); ref {strat} [126-126]
[m[m07.11.2021 - 16:14:20.543 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.ColumnPositionMappingStrategyTest::testGetColumnNamesArray has 4 assertions: 
 assertEquals(3, mapping.length); ref {mapping.length, mapping} [135-135],
 assertEquals("name", mapping[0]); ref {mapping} [136-136],
 assertEquals(null, mapping[1]); ref {mapping} [137-137],
 assertEquals("id", mapping[2]); ref {mapping} [138-138]
[m[m07.11.2021 - 16:14:20.543 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.ColumnPositionMappingStrategyTest::getColumnNamesWhenNullArray has 3 assertions: 
 assertEquals(null, strat.getColumnName(0)); ref {strat} [145-145],
 assertEquals(null, strat.getColumnName(1)); ref {strat} [146-146],
 assertArrayEquals(new String[0], strat.getColumnMapping()); ref {strat} [147-147]
[m[m07.11.2021 - 16:14:20.544 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.ColumnPositionMappingStrategyTest::getColumnNamesWhenNullColumnName has 3 assertions: 
 assertEquals(null, strat.getColumnName(0)); ref {strat} [155-155],
 assertEquals(null, strat.getColumnName(1)); ref {strat} [156-156],
 assertArrayEquals(columns, strat.getColumnMapping()); ref {columns, strat} [157-157]
[m[m07.11.2021 - 16:14:20.544 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.ColumnPositionMappingStrategyTest::getColumnNamesWhenEmptyMapping has 2 assertions: 
 assertEquals(null, strat.getColumnName(0)); ref {strat} [164-164],
 assertArrayEquals(new String[0], strat.getColumnMapping()); ref {strat} [165-165]
[m[m07.11.2021 - 16:14:20.544 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.ColumnPositionMappingStrategyTest::throwsIllegalStateExceptionIfTypeNotSet has 1 assertions: 
 assertEquals(IllegalStateException.class, e.getCause().getClass()); ref {e} [178-178]
[m[m07.11.2021 - 16:14:20.544 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:14:20.547 [INFO ] ParsingStrategy.parseTestSuite() - Found 17 test cases
[m[m07.11.2021 - 16:14:20.547 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetColumnNameHelperServiceTest::canPrintColumnNames has 1 assertions: 
 assertArrayEquals(expectedNames, columnNames); ref {expectedNames, columnNames} [35-35]
[m[m07.11.2021 - 16:14:20.547 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetColumnNameHelperServiceTest::setColumnNames has 1 assertions: 
 assertArrayEquals(columnHeaders, rsColumnNames); ref {columnHeaders, rsColumnNames} [54-54]
[m[m07.11.2021 - 16:14:20.547 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetColumnNameHelperServiceTest::getColumnNamesWithSubsetOutOfOrder has 1 assertions: 
 assertArrayEquals(columnHeaders, rsColumnNames); ref {columnHeaders, rsColumnNames} [73-73]
[m[m07.11.2021 - 16:14:20.548 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetColumnNameHelperServiceTest::numberOfColumnsNamesMustMatchNumberOfHeaders has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.548 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetColumnNameHelperServiceTest::cannotHaveNullColumnName has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.548 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetColumnNameHelperServiceTest::cannotHaveEmptyColumnName has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.548 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetColumnNameHelperServiceTest::cannotHaveSpaceColumnName has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.548 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetColumnNameHelperServiceTest::cannotHaveNullHeaderName has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.548 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetColumnNameHelperServiceTest::cannotHaveEmptyHeaderName has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.548 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetColumnNameHelperServiceTest::cannotHaveSpaceHeaderName has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.548 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetColumnNameHelperServiceTest::getColumnNamesThrowsExceptionIfColumnDoesNotExist has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.548 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetColumnNameHelperServiceTest::getBooleanFromResultSet has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [172-172]
[m[m07.11.2021 - 16:14:20.548 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetColumnNameHelperServiceTest::getBooleanSubsetFromResultSet has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [193-193]
[m[m07.11.2021 - 16:14:20.548 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetColumnNameHelperServiceTest::getSubsetWithTrim has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [214-214]
[m[m07.11.2021 - 16:14:20.549 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetColumnNameHelperServiceTest::getCharSetWithNullAndTrim has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [231-231]
[m[m07.11.2021 - 16:14:20.549 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetColumnNameHelperServiceTest::getTimestampFromResultSetWithCustomFormat has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [252-252]
[m[m07.11.2021 - 16:14:20.549 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetColumnNameHelperServiceTest::getSubsetFromResultSetWithCustomFormat has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [278-278]
[m[m07.11.2021 - 16:14:20.549 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:14:20.550 [INFO ] ParsingStrategy.parseTestSuite() - Found 4 test cases
[m[m07.11.2021 - 16:14:20.550 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase integrationTest.SR34.SR34Test::defaultReaderInterpetsNullCorrectly has 7 assertions: 
 assertEquals(6, line.length); ref {line.length, line} [35-35],
 assertEquals("10", line[0]); ref {line} [36-36],
 assertEquals("IBM", line[1]); ref {line} [37-37],
 assertEquals("2015063", line[2]); ref {line} [38-38],
 assertEquals("064230733910", line[3]); ref {line} [39-39],
 assertEquals("\0", line[4]); ref {line} [40-40],
 assertEquals("01 ", line[5]); ref {line} [41-41]
[m[m07.11.2021 - 16:14:20.550 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase integrationTest.SR34.SR34Test::doubleBufferedReaderInterpetsNullCorrectly has 7 assertions: 
 assertEquals(6, line.length); ref {line.length, line} [51-51],
 assertEquals("10", line[0]); ref {line} [52-52],
 assertEquals("IBM", line[1]); ref {line} [53-53],
 assertEquals("2015063", line[2]); ref {line} [54-54],
 assertEquals("064230733910", line[3]); ref {line} [55-55],
 assertEquals("\0", line[4]); ref {line} [56-56],
 assertEquals("01 ", line[5]); ref {line} [57-57]
[m[m07.11.2021 - 16:14:20.550 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase integrationTest.SR34.SR34Test::usingNullAsDelimeterWillFailBecauseYouAreEscapingTheQuote has 0 assertions: 
 
[m[m07.11.2021 - 16:14:20.550 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase integrationTest.SR34.SR34Test::youNeedToEscapeTheNullCharactersIfUsingNullAsEscape has 8 assertions: 
 assertEquals(1, rawTokens1.size()); ref {rawTokens1} [86-86],
 assertEquals(6, line.length); ref {line.length, line} [89-89],
 assertEquals("10", line[0]); ref {line} [90-90],
 assertEquals("IBM", line[1]); ref {line} [91-91],
 assertEquals("2015063", line[2]); ref {line} [92-92],
 assertEquals("064230733910", line[3]); ref {line} [93-93],
 assertEquals("\0", line[4]); ref {line} [94-94],
 assertEquals("01 ", line[5]); ref {line} [95-95]
[m[m07.11.2021 - 16:14:20.551 [INFO ] ParsingStrategy.parseTestSuite() - Found 3 test cases
[m[m07.11.2021 - 16:14:20.551 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.RFC4180ParserBuilderTest::testDefaultBuilder has 9 assertions: 
 assertEquals(ICSVParser.DEFAULT_SEPARATOR, builder.getSeparator()); ref {ICSVParser.DEFAULT_SEPARATOR, builder, ICSVParser} [21-23],
 assertEquals(ICSVParser.DEFAULT_QUOTE_CHARACTER, builder.getQuoteChar()); ref {ICSVParser.DEFAULT_QUOTE_CHARACTER, builder, ICSVParser} [24-26],
 assertEquals(ICSVParser.DEFAULT_ESCAPE_CHARACTER, builder.getEscapeChar()); ref {builder, ICSVParser.DEFAULT_ESCAPE_CHARACTER, ICSVParser} [27-29],
 assertEquals(ICSVParser.DEFAULT_STRICT_QUOTES, builder.isStrictQuotes()); ref {builder, ICSVParser.DEFAULT_STRICT_QUOTES, ICSVParser} [30-32],
 assertEquals(ICSVParser.DEFAULT_IGNORE_LEADING_WHITESPACE, builder.isIgnoreLeadingWhiteSpace()); ref {builder, ICSVParser.DEFAULT_IGNORE_LEADING_WHITESPACE, ICSVParser} [33-35],
 assertEquals(ICSVParser.DEFAULT_IGNORE_QUOTATIONS, builder.isIgnoreQuotations()); ref {builder, ICSVParser.DEFAULT_IGNORE_QUOTATIONS, ICSVParser} [36-38],
 assertEquals(CSVReaderNullFieldIndicator.NEITHER, builder.nullFieldIndicator()); ref {CSVReaderNullFieldIndicator, CSVReaderNullFieldIndicator.NEITHER, builder} [39-39],
 assertEquals(ICSVParser.DEFAULT_SEPARATOR, parser.getSeparator()); ref {ICSVParser.DEFAULT_SEPARATOR, parser, ICSVParser} [42-44],
 assertEquals(ICSVParser.DEFAULT_QUOTE_CHARACTER, parser.getQuotechar()); ref {ICSVParser.DEFAULT_QUOTE_CHARACTER, parser, ICSVParser} [45-47]
[m[m07.11.2021 - 16:14:20.551 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.RFC4180ParserBuilderTest::testWithSeparator has 2 assertions: 
 assertEquals(expected, builder.getSeparator()); ref {expected, builder} [54-54],
 assertEquals(expected, builder.build().getSeparator()); ref {expected, builder} [55-55]
[m[m07.11.2021 - 16:14:20.551 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.RFC4180ParserBuilderTest::testWithQuoteChar has 2 assertions: 
 assertEquals(expected, builder.getQuoteChar()); ref {expected, builder} [62-62],
 assertEquals(expected, builder.build().getQuotechar()); ref {expected, builder} [63-63]
[m[m07.11.2021 - 16:14:20.552 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:14:20.552 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:14:20.552 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:14:20.552 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:14:20.552 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:14:20.552 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:14:20.554 [INFO ] ParsingStrategy.mergePartialSuites() - ====================================================================
[m[m07.11.2021 - 16:14:20.554 [INFO ] ParsingStrategy.mergePartialSuites() - Finished parsing the test suite.
[m[m07.11.2021 - 16:14:20.555 [INFO ] ParsingStrategy.mergePartialSuites() - It contains 286 test cases and 876 assertions.
[m[m07.11.2021 - 16:14:20.557 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 1/286
[m[m07.11.2021 - 16:14:20.557 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanFilterTest#testColumnNameTranslationWithLineFiltering
[m[32m07.11.2021 - 16:14:20.558 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanFilterTest#testColumnNameTranslationWithLineFiltering.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanFilterTest#testColumnNameTranslationWithLineFiltering
[m[m07.11.2021 - 16:14:20.883 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:20.885 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanFilterTest#testColumnNameTranslationWithLineFiltering.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanFilterTest#testColumnNameTranslationWithLineFiltering/report.xml
[m[m07.11.2021 - 16:14:21.186 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanFilterTest#testColumnNameTranslationWithLineFiltering was generated successfully
[m[m07.11.2021 - 16:14:21.186 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 2/286
[m[m07.11.2021 - 16:14:21.186 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase integrationTest.isClosed.isClosedTest#issue115StandardReadFailsAfterALargeNumberOfReads
[m[32m07.11.2021 - 16:14:21.186 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/integrationTest.isClosed.isClosedTest#issue115StandardReadFailsAfterALargeNumberOfReads.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner integrationTest.isClosed.isClosedTest#issue115StandardReadFailsAfterALargeNumberOfReads
[m[m07.11.2021 - 16:14:21.405 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:21.406 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/integrationTest.isClosed.isClosedTest#issue115StandardReadFailsAfterALargeNumberOfReads.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/integrationTest.isClosed.isClosedTest#issue115StandardReadFailsAfterALargeNumberOfReads/report.xml
[m[m07.11.2021 - 16:14:21.638 [INFO ] LineCoverageStrategy.createReport() - Report for integrationTest.isClosed.isClosedTest#issue115StandardReadFailsAfterALargeNumberOfReads was generated successfully
[m[m07.11.2021 - 16:14:21.639 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 3/286
[m[m07.11.2021 - 16:14:21.639 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.IterableCSVToBeanBuilderTest#defaultBuilderMissingInformation
[m[32m07.11.2021 - 16:14:21.639 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.IterableCSVToBeanBuilderTest#defaultBuilderMissingInformation.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.IterableCSVToBeanBuilderTest#defaultBuilderMissingInformation
[m[m07.11.2021 - 16:14:21.922 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:21.923 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.IterableCSVToBeanBuilderTest#defaultBuilderMissingInformation.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.IterableCSVToBeanBuilderTest#defaultBuilderMissingInformation/report.xml
[m[m07.11.2021 - 16:14:22.156 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.IterableCSVToBeanBuilderTest#defaultBuilderMissingInformation was generated successfully
[m[m07.11.2021 - 16:14:22.156 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 4/286
[m[m07.11.2021 - 16:14:22.157 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.IterableCSVToBeanBuilderTest#willThrowExceptionIfMissingReader
[m[32m07.11.2021 - 16:14:22.158 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.IterableCSVToBeanBuilderTest#willThrowExceptionIfMissingReader.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.IterableCSVToBeanBuilderTest#willThrowExceptionIfMissingReader
[m[m07.11.2021 - 16:14:22.474 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:22.474 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.IterableCSVToBeanBuilderTest#willThrowExceptionIfMissingReader.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.IterableCSVToBeanBuilderTest#willThrowExceptionIfMissingReader/report.xml
[m[m07.11.2021 - 16:14:22.722 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.IterableCSVToBeanBuilderTest#willThrowExceptionIfMissingReader was generated successfully
[m[m07.11.2021 - 16:14:22.722 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 5/286
[m[m07.11.2021 - 16:14:22.722 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.IterableCSVToBeanBuilderTest#builderWithoutFilter
[m[32m07.11.2021 - 16:14:22.722 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.IterableCSVToBeanBuilderTest#builderWithoutFilter.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.IterableCSVToBeanBuilderTest#builderWithoutFilter
[m[m07.11.2021 - 16:14:22.978 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:22.978 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.IterableCSVToBeanBuilderTest#builderWithoutFilter.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.IterableCSVToBeanBuilderTest#builderWithoutFilter/report.xml
[m[m07.11.2021 - 16:14:23.256 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.IterableCSVToBeanBuilderTest#builderWithoutFilter was generated successfully
[m[m07.11.2021 - 16:14:23.256 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 6/286
[m[m07.11.2021 - 16:14:23.257 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.IterableCSVToBeanBuilderTest#builderWithFilter
[m[32m07.11.2021 - 16:14:23.257 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.IterableCSVToBeanBuilderTest#builderWithFilter.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.IterableCSVToBeanBuilderTest#builderWithFilter
[m[m07.11.2021 - 16:14:23.511 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:23.512 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.IterableCSVToBeanBuilderTest#builderWithFilter.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.IterableCSVToBeanBuilderTest#builderWithFilter/report.xml
[m[m07.11.2021 - 16:14:23.764 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.IterableCSVToBeanBuilderTest#builderWithFilter was generated successfully
[m[m07.11.2021 - 16:14:23.765 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 7/286
[m[m07.11.2021 - 16:14:23.765 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanDoubleTest#parseBeanWithNoAnnotations
[m[32m07.11.2021 - 16:14:23.765 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanDoubleTest#parseBeanWithNoAnnotations.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanDoubleTest#parseBeanWithNoAnnotations
[m[m07.11.2021 - 16:14:24.033 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:24.033 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanDoubleTest#parseBeanWithNoAnnotations.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanDoubleTest#parseBeanWithNoAnnotations/report.xml
[m[m07.11.2021 - 16:14:24.306 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanDoubleTest#parseBeanWithNoAnnotations was generated successfully
[m[m07.11.2021 - 16:14:24.307 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 8/286
[m[m07.11.2021 - 16:14:24.307 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testParseLine
[m[32m07.11.2021 - 16:14:24.307 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testParseLine.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testParseLine
[m[m07.11.2021 - 16:14:24.508 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:24.508 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testParseLine.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testParseLine/report.xml
[m[m07.11.2021 - 16:14:24.758 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testParseLine was generated successfully
[m[m07.11.2021 - 16:14:24.758 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 9/286
[m[m07.11.2021 - 16:14:24.758 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#parseSimpleString
[m[32m07.11.2021 - 16:14:24.758 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parseSimpleString.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#parseSimpleString
[m[m07.11.2021 - 16:14:24.966 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:24.966 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parseSimpleString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parseSimpleString/report.xml
[m[m07.11.2021 - 16:14:25.212 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#parseSimpleString was generated successfully
[m[m07.11.2021 - 16:14:25.212 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 10/286
[m[m07.11.2021 - 16:14:25.212 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#parseSimpleQuotedString
[m[32m07.11.2021 - 16:14:25.212 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parseSimpleQuotedString.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#parseSimpleQuotedString
[m[m07.11.2021 - 16:14:25.406 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:25.406 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parseSimpleQuotedString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parseSimpleQuotedString/report.xml
[m[m07.11.2021 - 16:14:25.649 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#parseSimpleQuotedString was generated successfully
[m[m07.11.2021 - 16:14:25.649 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 11/286
[m[m07.11.2021 - 16:14:25.649 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#parseSimpleQuotedStringWithSpaces
[m[32m07.11.2021 - 16:14:25.650 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parseSimpleQuotedStringWithSpaces.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#parseSimpleQuotedStringWithSpaces
[m[m07.11.2021 - 16:14:25.853 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:25.853 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parseSimpleQuotedStringWithSpaces.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parseSimpleQuotedStringWithSpaces/report.xml
[m[m07.11.2021 - 16:14:26.100 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#parseSimpleQuotedStringWithSpaces was generated successfully
[m[m07.11.2021 - 16:14:26.100 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 12/286
[m[m07.11.2021 - 16:14:26.100 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testParsedLineWithInternalQuota
[m[32m07.11.2021 - 16:14:26.100 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testParsedLineWithInternalQuota.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testParsedLineWithInternalQuota
[m[m07.11.2021 - 16:14:26.288 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:26.289 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testParsedLineWithInternalQuota.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testParsedLineWithInternalQuota/report.xml
[m[m07.11.2021 - 16:14:26.533 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testParsedLineWithInternalQuota was generated successfully
[m[m07.11.2021 - 16:14:26.533 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 13/286
[m[m07.11.2021 - 16:14:26.533 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#parseQuotedStringWithCommas
[m[32m07.11.2021 - 16:14:26.533 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parseQuotedStringWithCommas.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#parseQuotedStringWithCommas
[m[m07.11.2021 - 16:14:26.769 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:26.770 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parseQuotedStringWithCommas.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parseQuotedStringWithCommas/report.xml
[m[m07.11.2021 - 16:14:27.010 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#parseQuotedStringWithCommas was generated successfully
[m[m07.11.2021 - 16:14:27.010 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 14/286
[m[m07.11.2021 - 16:14:27.010 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#parseQuotedStringWithDefinedSeperator
[m[32m07.11.2021 - 16:14:27.010 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parseQuotedStringWithDefinedSeperator.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#parseQuotedStringWithDefinedSeperator
[m[m07.11.2021 - 16:14:27.212 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:27.212 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parseQuotedStringWithDefinedSeperator.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parseQuotedStringWithDefinedSeperator/report.xml
[m[m07.11.2021 - 16:14:27.459 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#parseQuotedStringWithDefinedSeperator was generated successfully
[m[m07.11.2021 - 16:14:27.460 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 15/286
[m[m07.11.2021 - 16:14:27.460 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#parseQuotedStringWithDefinedSeperatorAndQuote
[m[32m07.11.2021 - 16:14:27.460 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parseQuotedStringWithDefinedSeperatorAndQuote.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#parseQuotedStringWithDefinedSeperatorAndQuote
[m[m07.11.2021 - 16:14:27.663 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:27.663 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parseQuotedStringWithDefinedSeperatorAndQuote.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parseQuotedStringWithDefinedSeperatorAndQuote/report.xml
[m[m07.11.2021 - 16:14:27.944 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#parseQuotedStringWithDefinedSeperatorAndQuote was generated successfully
[m[m07.11.2021 - 16:14:27.944 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 16/286
[m[m07.11.2021 - 16:14:27.944 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#parseEmptyElements
[m[32m07.11.2021 - 16:14:27.944 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parseEmptyElements.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#parseEmptyElements
[m[m07.11.2021 - 16:14:28.192 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:28.192 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parseEmptyElements.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parseEmptyElements/report.xml
[m[m07.11.2021 - 16:14:28.424 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#parseEmptyElements was generated successfully
[m[m07.11.2021 - 16:14:28.424 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 17/286
[m[m07.11.2021 - 16:14:28.425 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#parseMultiLinedQuoted
[m[32m07.11.2021 - 16:14:28.425 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parseMultiLinedQuoted.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#parseMultiLinedQuoted
[m[m07.11.2021 - 16:14:28.610 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:28.610 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parseMultiLinedQuoted.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parseMultiLinedQuoted/report.xml
[m[m07.11.2021 - 16:14:28.848 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#parseMultiLinedQuoted was generated successfully
[m[m07.11.2021 - 16:14:28.848 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 18/286
[m[m07.11.2021 - 16:14:28.848 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#parseMultiLinedQuotedwithCarriageReturns
[m[32m07.11.2021 - 16:14:28.848 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parseMultiLinedQuotedwithCarriageReturns.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#parseMultiLinedQuotedwithCarriageReturns
[m[m07.11.2021 - 16:14:29.073 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:29.073 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parseMultiLinedQuotedwithCarriageReturns.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parseMultiLinedQuotedwithCarriageReturns/report.xml
[m[m07.11.2021 - 16:14:29.334 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#parseMultiLinedQuotedwithCarriageReturns was generated successfully
[m[m07.11.2021 - 16:14:29.334 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 19/286
[m[m07.11.2021 - 16:14:29.335 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testADoubleQuoteAsDataElement
[m[32m07.11.2021 - 16:14:29.335 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testADoubleQuoteAsDataElement.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testADoubleQuoteAsDataElement
[m[m07.11.2021 - 16:14:29.553 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:29.554 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testADoubleQuoteAsDataElement.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testADoubleQuoteAsDataElement/report.xml
[m[m07.11.2021 - 16:14:29.812 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testADoubleQuoteAsDataElement was generated successfully
[m[m07.11.2021 - 16:14:29.812 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 20/286
[m[m07.11.2021 - 16:14:29.812 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testEscapedDoubleQuoteAsDataElement
[m[32m07.11.2021 - 16:14:29.813 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testEscapedDoubleQuoteAsDataElement.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testEscapedDoubleQuoteAsDataElement
[m[m07.11.2021 - 16:14:30.007 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:30.008 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testEscapedDoubleQuoteAsDataElement.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testEscapedDoubleQuoteAsDataElement/report.xml
[m[m07.11.2021 - 16:14:30.272 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testEscapedDoubleQuoteAsDataElement was generated successfully
[m[m07.11.2021 - 16:14:30.272 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 21/286
[m[m07.11.2021 - 16:14:30.272 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#parseQuotedQuoteCharacters
[m[32m07.11.2021 - 16:14:30.272 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parseQuotedQuoteCharacters.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#parseQuotedQuoteCharacters
[m[m07.11.2021 - 16:14:30.505 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:30.505 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parseQuotedQuoteCharacters.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parseQuotedQuoteCharacters/report.xml
[m[m07.11.2021 - 16:14:30.818 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#parseQuotedQuoteCharacters was generated successfully
[m[m07.11.2021 - 16:14:30.818 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 22/286
[m[m07.11.2021 - 16:14:30.818 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#parseMultipleQuotes
[m[32m07.11.2021 - 16:14:30.818 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parseMultipleQuotes.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#parseMultipleQuotes
[m[m07.11.2021 - 16:14:31.031 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:31.032 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parseMultipleQuotes.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parseMultipleQuotes/report.xml
[m[m07.11.2021 - 16:14:31.287 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#parseMultipleQuotes was generated successfully
[m[m07.11.2021 - 16:14:31.287 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 23/286
[m[m07.11.2021 - 16:14:31.287 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#parseTrickyString
[m[32m07.11.2021 - 16:14:31.287 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parseTrickyString.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#parseTrickyString
[m[m07.11.2021 - 16:14:31.519 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:31.519 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parseTrickyString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parseTrickyString/report.xml
[m[m07.11.2021 - 16:14:31.769 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#parseTrickyString was generated successfully
[m[m07.11.2021 - 16:14:31.770 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 24/286
[m[m07.11.2021 - 16:14:31.770 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testAMultiLineInsideQuotes
[m[32m07.11.2021 - 16:14:31.770 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testAMultiLineInsideQuotes.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testAMultiLineInsideQuotes
[m[m07.11.2021 - 16:14:31.955 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:31.956 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testAMultiLineInsideQuotes.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testAMultiLineInsideQuotes/report.xml
[m[m07.11.2021 - 16:14:32.221 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testAMultiLineInsideQuotes was generated successfully
[m[m07.11.2021 - 16:14:32.221 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 25/286
[m[m07.11.2021 - 16:14:32.221 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testStrictQuoteSimple
[m[32m07.11.2021 - 16:14:32.221 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testStrictQuoteSimple.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testStrictQuoteSimple
[m[m07.11.2021 - 16:14:32.433 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:32.433 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testStrictQuoteSimple.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testStrictQuoteSimple/report.xml
[m[m07.11.2021 - 16:14:32.682 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testStrictQuoteSimple was generated successfully
[m[m07.11.2021 - 16:14:32.683 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 26/286
[m[m07.11.2021 - 16:14:32.683 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testNotStrictQuoteSimple
[m[32m07.11.2021 - 16:14:32.683 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testNotStrictQuoteSimple.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testNotStrictQuoteSimple
[m[m07.11.2021 - 16:14:32.876 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:32.877 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testNotStrictQuoteSimple.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testNotStrictQuoteSimple/report.xml
[m[m07.11.2021 - 16:14:33.121 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testNotStrictQuoteSimple was generated successfully
[m[m07.11.2021 - 16:14:33.121 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 27/286
[m[m07.11.2021 - 16:14:33.122 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testStrictQuoteWithSpacesAndTabs
[m[32m07.11.2021 - 16:14:33.122 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testStrictQuoteWithSpacesAndTabs.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testStrictQuoteWithSpacesAndTabs
[m[m07.11.2021 - 16:14:33.335 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:33.336 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testStrictQuoteWithSpacesAndTabs.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testStrictQuoteWithSpacesAndTabs/report.xml
[m[m07.11.2021 - 16:14:33.571 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testStrictQuoteWithSpacesAndTabs was generated successfully
[m[m07.11.2021 - 16:14:33.572 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 28/286
[m[m07.11.2021 - 16:14:33.572 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testNotStrictQuoteWithSpacesAndTabs
[m[32m07.11.2021 - 16:14:33.572 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testNotStrictQuoteWithSpacesAndTabs.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testNotStrictQuoteWithSpacesAndTabs
[m[m07.11.2021 - 16:14:33.773 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:33.773 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testNotStrictQuoteWithSpacesAndTabs.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testNotStrictQuoteWithSpacesAndTabs/report.xml
[m[m07.11.2021 - 16:14:34.056 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testNotStrictQuoteWithSpacesAndTabs was generated successfully
[m[m07.11.2021 - 16:14:34.056 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 29/286
[m[m07.11.2021 - 16:14:34.056 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testStrictQuoteWithGarbage
[m[32m07.11.2021 - 16:14:34.056 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testStrictQuoteWithGarbage.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testStrictQuoteWithGarbage
[m[m07.11.2021 - 16:14:34.289 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:34.289 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testStrictQuoteWithGarbage.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testStrictQuoteWithGarbage/report.xml
[m[m07.11.2021 - 16:14:34.557 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testStrictQuoteWithGarbage was generated successfully
[m[m07.11.2021 - 16:14:34.557 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 30/286
[m[m07.11.2021 - 16:14:34.557 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testCanIgnoreQuotations
[m[32m07.11.2021 - 16:14:34.557 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testCanIgnoreQuotations.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testCanIgnoreQuotations
[m[m07.11.2021 - 16:14:34.839 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:34.840 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testCanIgnoreQuotations.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testCanIgnoreQuotations/report.xml
[m[m07.11.2021 - 16:14:35.108 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testCanIgnoreQuotations was generated successfully
[m[m07.11.2021 - 16:14:35.108 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 31/286
[m[m07.11.2021 - 16:14:35.108 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testFalseIgnoreQuotations
[m[32m07.11.2021 - 16:14:35.108 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testFalseIgnoreQuotations.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testFalseIgnoreQuotations
[m[m07.11.2021 - 16:14:35.312 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:35.312 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testFalseIgnoreQuotations.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testFalseIgnoreQuotations/report.xml
[m[m07.11.2021 - 16:14:35.563 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testFalseIgnoreQuotations was generated successfully
[m[m07.11.2021 - 16:14:35.563 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 32/286
[m[m07.11.2021 - 16:14:35.563 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testIssue3314579
[m[32m07.11.2021 - 16:14:35.563 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testIssue3314579.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testIssue3314579
[m[m07.11.2021 - 16:14:35.778 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:35.778 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testIssue3314579.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testIssue3314579/report.xml
[m[m07.11.2021 - 16:14:36.029 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testIssue3314579 was generated successfully
[m[m07.11.2021 - 16:14:36.029 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 33/286
[m[m07.11.2021 - 16:14:36.029 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testIssue2263439
[m[32m07.11.2021 - 16:14:36.029 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testIssue2263439.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testIssue2263439
[m[m07.11.2021 - 16:14:36.221 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:36.221 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testIssue2263439.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testIssue2263439/report.xml
[m[m07.11.2021 - 16:14:36.479 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testIssue2263439 was generated successfully
[m[m07.11.2021 - 16:14:36.479 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 34/286
[m[m07.11.2021 - 16:14:36.479 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testIssue2859181
[m[32m07.11.2021 - 16:14:36.480 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testIssue2859181.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testIssue2859181
[m[m07.11.2021 - 16:14:36.672 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:36.673 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testIssue2859181.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testIssue2859181/report.xml
[m[m07.11.2021 - 16:14:36.937 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testIssue2859181 was generated successfully
[m[m07.11.2021 - 16:14:36.937 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 35/286
[m[m07.11.2021 - 16:14:36.937 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testIssue2726363
[m[32m07.11.2021 - 16:14:36.937 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testIssue2726363.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testIssue2726363
[m[m07.11.2021 - 16:14:37.143 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:37.144 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testIssue2726363.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testIssue2726363/report.xml
[m[m07.11.2021 - 16:14:37.378 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testIssue2726363 was generated successfully
[m[m07.11.2021 - 16:14:37.378 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 36/286
[m[m07.11.2021 - 16:14:37.378 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#anIOExceptionThrownifStringEndsInsideAQuotedString
[m[32m07.11.2021 - 16:14:37.378 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#anIOExceptionThrownifStringEndsInsideAQuotedString.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#anIOExceptionThrownifStringEndsInsideAQuotedString
[m[m07.11.2021 - 16:14:37.563 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:37.563 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#anIOExceptionThrownifStringEndsInsideAQuotedString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#anIOExceptionThrownifStringEndsInsideAQuotedString/report.xml
[m[m07.11.2021 - 16:14:37.809 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#anIOExceptionThrownifStringEndsInsideAQuotedString was generated successfully
[m[m07.11.2021 - 16:14:37.809 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 37/286
[m[m07.11.2021 - 16:14:37.809 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#parseLineMultiAllowsQuotesAcrossMultipleLines
[m[32m07.11.2021 - 16:14:37.810 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parseLineMultiAllowsQuotesAcrossMultipleLines.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#parseLineMultiAllowsQuotesAcrossMultipleLines
[m[m07.11.2021 - 16:14:38.036 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:38.036 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parseLineMultiAllowsQuotesAcrossMultipleLines.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parseLineMultiAllowsQuotesAcrossMultipleLines/report.xml
[m[m07.11.2021 - 16:14:38.293 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#parseLineMultiAllowsQuotesAcrossMultipleLines was generated successfully
[m[m07.11.2021 - 16:14:38.293 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 38/286
[m[m07.11.2021 - 16:14:38.293 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#pendingIsClearedAfterCallToParseLine
[m[32m07.11.2021 - 16:14:38.293 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#pendingIsClearedAfterCallToParseLine.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#pendingIsClearedAfterCallToParseLine
[m[m07.11.2021 - 16:14:38.504 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:38.504 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#pendingIsClearedAfterCallToParseLine.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#pendingIsClearedAfterCallToParseLine/report.xml
[m[m07.11.2021 - 16:14:38.759 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#pendingIsClearedAfterCallToParseLine was generated successfully
[m[m07.11.2021 - 16:14:38.759 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 39/286
[m[m07.11.2021 - 16:14:38.760 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#returnPendingIfNullIsPassedIntoParseLineMulti
[m[32m07.11.2021 - 16:14:38.760 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#returnPendingIfNullIsPassedIntoParseLineMulti.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#returnPendingIfNullIsPassedIntoParseLineMulti
[m[m07.11.2021 - 16:14:38.994 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:38.994 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#returnPendingIfNullIsPassedIntoParseLineMulti.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#returnPendingIfNullIsPassedIntoParseLineMulti/report.xml
[m[m07.11.2021 - 16:14:39.241 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#returnPendingIfNullIsPassedIntoParseLineMulti was generated successfully
[m[m07.11.2021 - 16:14:39.241 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 40/286
[m[m07.11.2021 - 16:14:39.241 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#spacesAtEndOfQuotedStringDoNotCountIfStrictQuotesIsTrue
[m[32m07.11.2021 - 16:14:39.241 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#spacesAtEndOfQuotedStringDoNotCountIfStrictQuotesIsTrue.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#spacesAtEndOfQuotedStringDoNotCountIfStrictQuotesIsTrue
[m[m07.11.2021 - 16:14:39.437 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:39.437 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#spacesAtEndOfQuotedStringDoNotCountIfStrictQuotesIsTrue.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#spacesAtEndOfQuotedStringDoNotCountIfStrictQuotesIsTrue/report.xml
[m[m07.11.2021 - 16:14:39.671 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#spacesAtEndOfQuotedStringDoNotCountIfStrictQuotesIsTrue was generated successfully
[m[m07.11.2021 - 16:14:39.671 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 41/286
[m[m07.11.2021 - 16:14:39.671 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#returnNullWhenNullPassedIn
[m[32m07.11.2021 - 16:14:39.671 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#returnNullWhenNullPassedIn.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#returnNullWhenNullPassedIn
[m[m07.11.2021 - 16:14:39.875 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:39.875 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#returnNullWhenNullPassedIn.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#returnNullWhenNullPassedIn/report.xml
[m[m07.11.2021 - 16:14:40.105 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#returnNullWhenNullPassedIn was generated successfully
[m[m07.11.2021 - 16:14:40.105 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 42/286
[m[m07.11.2021 - 16:14:40.105 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#validateEscapeStringBeforeRealTest
[m[32m07.11.2021 - 16:14:40.105 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#validateEscapeStringBeforeRealTest.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#validateEscapeStringBeforeRealTest
[m[m07.11.2021 - 16:14:40.312 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:40.313 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#validateEscapeStringBeforeRealTest.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#validateEscapeStringBeforeRealTest/report.xml
[m[m07.11.2021 - 16:14:40.565 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#validateEscapeStringBeforeRealTest was generated successfully
[m[m07.11.2021 - 16:14:40.565 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 43/286
[m[m07.11.2021 - 16:14:40.565 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#whichCharactersAreEscapable
[m[32m07.11.2021 - 16:14:40.565 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#whichCharactersAreEscapable.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#whichCharactersAreEscapable
[m[m07.11.2021 - 16:14:40.769 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:40.769 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#whichCharactersAreEscapable.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#whichCharactersAreEscapable/report.xml
[m[m07.11.2021 - 16:14:41.016 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#whichCharactersAreEscapable was generated successfully
[m[m07.11.2021 - 16:14:41.016 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 44/286
[m[m07.11.2021 - 16:14:41.016 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#whitespaceBeforeEscape
[m[32m07.11.2021 - 16:14:41.016 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#whitespaceBeforeEscape.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#whitespaceBeforeEscape
[m[m07.11.2021 - 16:14:41.226 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:41.226 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#whitespaceBeforeEscape.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#whitespaceBeforeEscape/report.xml
[m[m07.11.2021 - 16:14:41.465 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#whitespaceBeforeEscape was generated successfully
[m[m07.11.2021 - 16:14:41.465 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 45/286
[m[m07.11.2021 - 16:14:41.465 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testIssue2958242WithoutQuotes
[m[32m07.11.2021 - 16:14:41.465 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testIssue2958242WithoutQuotes.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testIssue2958242WithoutQuotes
[m[m07.11.2021 - 16:14:41.675 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:41.675 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testIssue2958242WithoutQuotes.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testIssue2958242WithoutQuotes/report.xml
[m[m07.11.2021 - 16:14:41.926 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testIssue2958242WithoutQuotes was generated successfully
[m[m07.11.2021 - 16:14:41.926 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 46/286
[m[m07.11.2021 - 16:14:41.926 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#quoteAndEscapeCannotBeTheSame
[m[32m07.11.2021 - 16:14:41.926 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#quoteAndEscapeCannotBeTheSame.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#quoteAndEscapeCannotBeTheSame
[m[m07.11.2021 - 16:14:42.132 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:42.132 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#quoteAndEscapeCannotBeTheSame.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#quoteAndEscapeCannotBeTheSame/report.xml
[m[m07.11.2021 - 16:14:42.378 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#quoteAndEscapeCannotBeTheSame was generated successfully
[m[m07.11.2021 - 16:14:42.378 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 47/286
[m[m07.11.2021 - 16:14:42.379 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#quoteAndEscapeCanBeTheSameIfNull
[m[32m07.11.2021 - 16:14:42.379 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#quoteAndEscapeCanBeTheSameIfNull.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#quoteAndEscapeCanBeTheSameIfNull
[m[m07.11.2021 - 16:14:42.579 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:42.580 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#quoteAndEscapeCanBeTheSameIfNull.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#quoteAndEscapeCanBeTheSameIfNull/report.xml
[m[m07.11.2021 - 16:14:42.838 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#quoteAndEscapeCanBeTheSameIfNull was generated successfully
[m[m07.11.2021 - 16:14:42.838 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 48/286
[m[m07.11.2021 - 16:14:42.838 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#separatorCharacterCannotBeNull
[m[32m07.11.2021 - 16:14:42.838 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#separatorCharacterCannotBeNull.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#separatorCharacterCannotBeNull
[m[m07.11.2021 - 16:14:43.043 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:43.044 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#separatorCharacterCannotBeNull.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#separatorCharacterCannotBeNull/report.xml
[m[m07.11.2021 - 16:14:43.295 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#separatorCharacterCannotBeNull was generated successfully
[m[m07.11.2021 - 16:14:43.295 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 49/286
[m[m07.11.2021 - 16:14:43.295 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#separatorAndEscapeCannotBeTheSame
[m[32m07.11.2021 - 16:14:43.295 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#separatorAndEscapeCannotBeTheSame.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#separatorAndEscapeCannotBeTheSame
[m[m07.11.2021 - 16:14:43.516 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:43.516 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#separatorAndEscapeCannotBeTheSame.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#separatorAndEscapeCannotBeTheSame/report.xml
[m[m07.11.2021 - 16:14:43.746 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#separatorAndEscapeCannotBeTheSame was generated successfully
[m[m07.11.2021 - 16:14:43.746 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 50/286
[m[m07.11.2021 - 16:14:43.746 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#separatorAndQuoteCannotBeTheSame
[m[32m07.11.2021 - 16:14:43.746 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#separatorAndQuoteCannotBeTheSame.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#separatorAndQuoteCannotBeTheSame
[m[m07.11.2021 - 16:14:43.936 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:43.936 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#separatorAndQuoteCannotBeTheSame.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#separatorAndQuoteCannotBeTheSame/report.xml
[m[m07.11.2021 - 16:14:44.182 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#separatorAndQuoteCannotBeTheSame was generated successfully
[m[m07.11.2021 - 16:14:44.182 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 51/286
[m[m07.11.2021 - 16:14:44.182 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#parserHandlesNullInString
[m[32m07.11.2021 - 16:14:44.182 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parserHandlesNullInString.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#parserHandlesNullInString
[m[m07.11.2021 - 16:14:44.370 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:44.370 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parserHandlesNullInString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#parserHandlesNullInString/report.xml
[m[m07.11.2021 - 16:14:44.606 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#parserHandlesNullInString was generated successfully
[m[m07.11.2021 - 16:14:44.606 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 52/286
[m[m07.11.2021 - 16:14:44.606 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#featureRequest60ByDefaultEmptyFieldsAreBlank
[m[32m07.11.2021 - 16:14:44.606 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#featureRequest60ByDefaultEmptyFieldsAreBlank.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#featureRequest60ByDefaultEmptyFieldsAreBlank
[m[m07.11.2021 - 16:14:44.816 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:44.817 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#featureRequest60ByDefaultEmptyFieldsAreBlank.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#featureRequest60ByDefaultEmptyFieldsAreBlank/report.xml
[m[m07.11.2021 - 16:14:45.108 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#featureRequest60ByDefaultEmptyFieldsAreBlank was generated successfully
[m[m07.11.2021 - 16:14:45.108 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 53/286
[m[m07.11.2021 - 16:14:45.108 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#featureRequest60TreatEmptyFieldsAsNull
[m[32m07.11.2021 - 16:14:45.108 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#featureRequest60TreatEmptyFieldsAsNull.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#featureRequest60TreatEmptyFieldsAsNull
[m[m07.11.2021 - 16:14:45.308 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:45.308 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#featureRequest60TreatEmptyFieldsAsNull.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#featureRequest60TreatEmptyFieldsAsNull/report.xml
[m[m07.11.2021 - 16:14:45.557 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#featureRequest60TreatEmptyFieldsAsNull was generated successfully
[m[m07.11.2021 - 16:14:45.557 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 54/286
[m[m07.11.2021 - 16:14:45.557 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#featureRequest60TreatEmptyDelimitedFieldsAsNull
[m[32m07.11.2021 - 16:14:45.557 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#featureRequest60TreatEmptyDelimitedFieldsAsNull.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#featureRequest60TreatEmptyDelimitedFieldsAsNull
[m[m07.11.2021 - 16:14:45.765 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:45.765 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#featureRequest60TreatEmptyDelimitedFieldsAsNull.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#featureRequest60TreatEmptyDelimitedFieldsAsNull/report.xml
[m[m07.11.2021 - 16:14:45.999 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#featureRequest60TreatEmptyDelimitedFieldsAsNull was generated successfully
[m[m07.11.2021 - 16:14:45.999 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 55/286
[m[m07.11.2021 - 16:14:46.000 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#featureRequest60TreatEmptyFieldsDelimitedOrNotAsNull
[m[32m07.11.2021 - 16:14:46.000 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#featureRequest60TreatEmptyFieldsDelimitedOrNotAsNull.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#featureRequest60TreatEmptyFieldsDelimitedOrNotAsNull
[m[m07.11.2021 - 16:14:46.207 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:46.207 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#featureRequest60TreatEmptyFieldsDelimitedOrNotAsNull.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#featureRequest60TreatEmptyFieldsDelimitedOrNotAsNull/report.xml
[m[m07.11.2021 - 16:14:46.440 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#featureRequest60TreatEmptyFieldsDelimitedOrNotAsNull was generated successfully
[m[m07.11.2021 - 16:14:46.440 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 56/286
[m[m07.11.2021 - 16:14:46.440 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testStrictQuotesEndsFieldAtQuote
[m[32m07.11.2021 - 16:14:46.440 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testStrictQuotesEndsFieldAtQuote.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testStrictQuotesEndsFieldAtQuote
[m[m07.11.2021 - 16:14:46.645 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:46.645 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testStrictQuotesEndsFieldAtQuote.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testStrictQuotesEndsFieldAtQuote/report.xml
[m[m07.11.2021 - 16:14:46.879 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testStrictQuotesEndsFieldAtQuote was generated successfully
[m[m07.11.2021 - 16:14:46.880 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 57/286
[m[m07.11.2021 - 16:14:46.880 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testStrictQuotesEndsFieldAtQuoteWithEscapedQuoteInMiddle
[m[32m07.11.2021 - 16:14:46.880 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testStrictQuotesEndsFieldAtQuoteWithEscapedQuoteInMiddle.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testStrictQuotesEndsFieldAtQuoteWithEscapedQuoteInMiddle
[m[m07.11.2021 - 16:14:47.087 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:47.087 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testStrictQuotesEndsFieldAtQuoteWithEscapedQuoteInMiddle.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testStrictQuotesEndsFieldAtQuoteWithEscapedQuoteInMiddle/report.xml
[m[m07.11.2021 - 16:14:47.322 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testStrictQuotesEndsFieldAtQuoteWithEscapedQuoteInMiddle was generated successfully
[m[m07.11.2021 - 16:14:47.322 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 58/286
[m[m07.11.2021 - 16:14:47.322 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testNotStrictQuotesAllowsEmbeddedEscapedQuote
[m[32m07.11.2021 - 16:14:47.322 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testNotStrictQuotesAllowsEmbeddedEscapedQuote.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testNotStrictQuotesAllowsEmbeddedEscapedQuote
[m[m07.11.2021 - 16:14:47.531 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:47.531 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testNotStrictQuotesAllowsEmbeddedEscapedQuote.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testNotStrictQuotesAllowsEmbeddedEscapedQuote/report.xml
[m[m07.11.2021 - 16:14:47.767 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testNotStrictQuotesAllowsEmbeddedEscapedQuote was generated successfully
[m[m07.11.2021 - 16:14:47.767 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 59/286
[m[m07.11.2021 - 16:14:47.767 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testNotStrictQuotesAllowsEmbeddedQuote
[m[32m07.11.2021 - 16:14:47.767 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testNotStrictQuotesAllowsEmbeddedQuote.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testNotStrictQuotesAllowsEmbeddedQuote
[m[m07.11.2021 - 16:14:47.979 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:47.979 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testNotStrictQuotesAllowsEmbeddedQuote.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#testNotStrictQuotesAllowsEmbeddedQuote/report.xml
[m[m07.11.2021 - 16:14:48.324 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testNotStrictQuotesAllowsEmbeddedQuote was generated successfully
[m[m07.11.2021 - 16:14:48.324 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 60/286
[m[m07.11.2021 - 16:14:48.324 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#issue93ParsingEmptyDoubleQuoteField
[m[32m07.11.2021 - 16:14:48.324 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#issue93ParsingEmptyDoubleQuoteField.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#issue93ParsingEmptyDoubleQuoteField
[m[m07.11.2021 - 16:14:48.548 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:48.548 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#issue93ParsingEmptyDoubleQuoteField.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserTest#issue93ParsingEmptyDoubleQuoteField/report.xml
[m[m07.11.2021 - 16:14:48.795 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#issue93ParsingEmptyDoubleQuoteField was generated successfully
[m[m07.11.2021 - 16:14:48.796 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 61/286
[m[m07.11.2021 - 16:14:48.796 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.BeanToCsvTest#throwRuntimeExceptionWhenExceptionIsThrown
[m[32m07.11.2021 - 16:14:48.796 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.BeanToCsvTest#throwRuntimeExceptionWhenExceptionIsThrown.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.BeanToCsvTest#throwRuntimeExceptionWhenExceptionIsThrown
[m[m07.11.2021 - 16:14:49.003 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:49.004 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.BeanToCsvTest#throwRuntimeExceptionWhenExceptionIsThrown.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.BeanToCsvTest#throwRuntimeExceptionWhenExceptionIsThrown/report.xml
[m[m07.11.2021 - 16:14:49.256 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.BeanToCsvTest#throwRuntimeExceptionWhenExceptionIsThrown was generated successfully
[m[m07.11.2021 - 16:14:49.256 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 62/286
[m[m07.11.2021 - 16:14:49.256 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.BeanToCsvTest#beanReturnsFalseOnEmptyList
[m[32m07.11.2021 - 16:14:49.256 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.BeanToCsvTest#beanReturnsFalseOnEmptyList.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.BeanToCsvTest#beanReturnsFalseOnEmptyList
[m[m07.11.2021 - 16:14:49.487 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:49.487 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.BeanToCsvTest#beanReturnsFalseOnEmptyList.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.BeanToCsvTest#beanReturnsFalseOnEmptyList/report.xml
[m[m07.11.2021 - 16:14:49.753 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.BeanToCsvTest#beanReturnsFalseOnEmptyList was generated successfully
[m[m07.11.2021 - 16:14:49.753 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 63/286
[m[m07.11.2021 - 16:14:49.753 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.BeanToCsvTest#beanReturnsFalseOnNull
[m[32m07.11.2021 - 16:14:49.754 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.BeanToCsvTest#beanReturnsFalseOnNull.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.BeanToCsvTest#beanReturnsFalseOnNull
[m[m07.11.2021 - 16:14:49.970 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:49.970 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.BeanToCsvTest#beanReturnsFalseOnNull.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.BeanToCsvTest#beanReturnsFalseOnNull/report.xml
[m[m07.11.2021 - 16:14:50.205 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.BeanToCsvTest#beanReturnsFalseOnNull was generated successfully
[m[m07.11.2021 - 16:14:50.205 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 64/286
[m[m07.11.2021 - 16:14:50.205 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.BeanToCsvTest#testWriteQuotes
[m[32m07.11.2021 - 16:14:50.205 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.BeanToCsvTest#testWriteQuotes.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.BeanToCsvTest#testWriteQuotes
[m[m07.11.2021 - 16:14:50.458 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:50.459 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.BeanToCsvTest#testWriteQuotes.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.BeanToCsvTest#testWriteQuotes/report.xml
[m[m07.11.2021 - 16:14:50.752 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.BeanToCsvTest#testWriteQuotes was generated successfully
[m[m07.11.2021 - 16:14:50.752 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 65/286
[m[m07.11.2021 - 16:14:50.752 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.BeanToCsvTest#writeBeansOneAtATime
[m[32m07.11.2021 - 16:14:50.753 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.BeanToCsvTest#writeBeansOneAtATime.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.BeanToCsvTest#writeBeansOneAtATime
[m[m07.11.2021 - 16:14:51.000 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:51.001 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.BeanToCsvTest#writeBeansOneAtATime.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.BeanToCsvTest#writeBeansOneAtATime/report.xml
[m[m07.11.2021 - 16:14:51.241 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.BeanToCsvTest#writeBeansOneAtATime was generated successfully
[m[m07.11.2021 - 16:14:51.241 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 66/286
[m[m07.11.2021 - 16:14:51.241 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.BeanToCsvTest#writeSingleBeanMethodReturnsFalseIfNullPassedIn
[m[32m07.11.2021 - 16:14:51.241 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.BeanToCsvTest#writeSingleBeanMethodReturnsFalseIfNullPassedIn.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.BeanToCsvTest#writeSingleBeanMethodReturnsFalseIfNullPassedIn
[m[m07.11.2021 - 16:14:51.472 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:51.473 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.BeanToCsvTest#writeSingleBeanMethodReturnsFalseIfNullPassedIn.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.BeanToCsvTest#writeSingleBeanMethodReturnsFalseIfNullPassedIn/report.xml
[m[m07.11.2021 - 16:14:51.723 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.BeanToCsvTest#writeSingleBeanMethodReturnsFalseIfNullPassedIn was generated successfully
[m[m07.11.2021 - 16:14:51.723 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 67/286
[m[m07.11.2021 - 16:14:51.723 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.BeanToCsvTest#handleException
[m[32m07.11.2021 - 16:14:51.723 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.BeanToCsvTest#handleException.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.BeanToCsvTest#handleException
[m[m07.11.2021 - 16:14:51.919 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:51.920 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.BeanToCsvTest#handleException.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.BeanToCsvTest#handleException/report.xml
[m[m07.11.2021 - 16:14:52.212 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.BeanToCsvTest#handleException was generated successfully
[m[m07.11.2021 - 16:14:52.212 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 68/286
[m[m07.11.2021 - 16:14:52.212 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.BeanToCsvTest#testWriteQuotesWithAnnotatedBean
[m[32m07.11.2021 - 16:14:52.213 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.BeanToCsvTest#testWriteQuotesWithAnnotatedBean.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.BeanToCsvTest#testWriteQuotesWithAnnotatedBean
[m[m07.11.2021 - 16:14:52.452 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:52.453 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.BeanToCsvTest#testWriteQuotesWithAnnotatedBean.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.BeanToCsvTest#testWriteQuotesWithAnnotatedBean/report.xml
[m[m07.11.2021 - 16:14:52.747 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.BeanToCsvTest#testWriteQuotesWithAnnotatedBean was generated successfully
[m[m07.11.2021 - 16:14:52.748 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 69/286
[m[m07.11.2021 - 16:14:52.748 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.BeanToCsvTest#testWriteNulls
[m[32m07.11.2021 - 16:14:52.748 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.BeanToCsvTest#testWriteNulls.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.BeanToCsvTest#testWriteNulls
[m[m07.11.2021 - 16:14:52.976 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:52.977 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.BeanToCsvTest#testWriteNulls.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.BeanToCsvTest#testWriteNulls/report.xml
[m[m07.11.2021 - 16:14:53.321 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.BeanToCsvTest#testWriteNulls was generated successfully
[m[m07.11.2021 - 16:14:53.321 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 70/286
[m[m07.11.2021 - 16:14:53.321 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.BeanToCsvTest#testWriteNullsWithAnnotatedBean
[m[32m07.11.2021 - 16:14:53.321 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.BeanToCsvTest#testWriteNullsWithAnnotatedBean.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.BeanToCsvTest#testWriteNullsWithAnnotatedBean
[m[m07.11.2021 - 16:14:53.548 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:53.549 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.BeanToCsvTest#testWriteNullsWithAnnotatedBean.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.BeanToCsvTest#testWriteNullsWithAnnotatedBean/report.xml
[m[m07.11.2021 - 16:14:53.801 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.BeanToCsvTest#testWriteNullsWithAnnotatedBean was generated successfully
[m[m07.11.2021 - 16:14:53.801 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 71/286
[m[m07.11.2021 - 16:14:53.801 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase integrationTest.issue3402853.HeaderColumnNameMappingStrategyUserTest#testParse
[m[32m07.11.2021 - 16:14:53.802 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/integrationTest.issue3402853.HeaderColumnNameMappingStrategyUserTest#testParse.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner integrationTest.issue3402853.HeaderColumnNameMappingStrategyUserTest#testParse
[m[m07.11.2021 - 16:14:54.053 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:54.053 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/integrationTest.issue3402853.HeaderColumnNameMappingStrategyUserTest#testParse.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/integrationTest.issue3402853.HeaderColumnNameMappingStrategyUserTest#testParse/report.xml
[m[m07.11.2021 - 16:14:54.302 [INFO ] LineCoverageStrategy.createReport() - Report for integrationTest.issue3402853.HeaderColumnNameMappingStrategyUserTest#testParse was generated successfully
[m[m07.11.2021 - 16:14:54.302 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 72/286
[m[m07.11.2021 - 16:14:54.302 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.HeaderColumnNameMappingStrategyTest#getColumnIndexWithoutHeaderThrowsException
[m[32m07.11.2021 - 16:14:54.302 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#getColumnIndexWithoutHeaderThrowsException.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.HeaderColumnNameMappingStrategyTest#getColumnIndexWithoutHeaderThrowsException
[m[m07.11.2021 - 16:14:54.503 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:54.503 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#getColumnIndexWithoutHeaderThrowsException.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#getColumnIndexWithoutHeaderThrowsException/report.xml
[m[m07.11.2021 - 16:14:54.777 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.HeaderColumnNameMappingStrategyTest#getColumnIndexWithoutHeaderThrowsException was generated successfully
[m[m07.11.2021 - 16:14:54.777 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 73/286
[m[m07.11.2021 - 16:14:54.777 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.HeaderColumnNameMappingStrategyTest#getColumnIndexAfterParse
[m[32m07.11.2021 - 16:14:54.777 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#getColumnIndexAfterParse.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.HeaderColumnNameMappingStrategyTest#getColumnIndexAfterParse
[m[m07.11.2021 - 16:14:55.050 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:55.051 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#getColumnIndexAfterParse.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#getColumnIndexAfterParse/report.xml
[m[m07.11.2021 - 16:14:55.287 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.HeaderColumnNameMappingStrategyTest#getColumnIndexAfterParse was generated successfully
[m[m07.11.2021 - 16:14:55.287 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 74/286
[m[m07.11.2021 - 16:14:55.287 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testParse
[m[32m07.11.2021 - 16:14:55.287 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testParse.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testParse
[m[m07.11.2021 - 16:14:55.532 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:55.533 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testParse.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testParse/report.xml
[m[m07.11.2021 - 16:14:55.776 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testParse was generated successfully
[m[m07.11.2021 - 16:14:55.776 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 75/286
[m[m07.11.2021 - 16:14:55.776 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testQuotedString
[m[32m07.11.2021 - 16:14:55.776 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testQuotedString.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testQuotedString
[m[m07.11.2021 - 16:14:56.028 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:56.028 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testQuotedString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testQuotedString/report.xml
[m[m07.11.2021 - 16:14:56.259 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testQuotedString was generated successfully
[m[m07.11.2021 - 16:14:56.259 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 76/286
[m[m07.11.2021 - 16:14:56.259 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testParseWithSpacesInHeader
[m[32m07.11.2021 - 16:14:56.259 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testParseWithSpacesInHeader.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testParseWithSpacesInHeader
[m[m07.11.2021 - 16:14:56.519 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:56.519 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testParseWithSpacesInHeader.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testParseWithSpacesInHeader/report.xml
[m[m07.11.2021 - 16:14:56.848 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testParseWithSpacesInHeader was generated successfully
[m[m07.11.2021 - 16:14:56.849 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 77/286
[m[m07.11.2021 - 16:14:56.849 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.HeaderColumnNameMappingStrategyTest#verifyColumnNames
[m[32m07.11.2021 - 16:14:56.849 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#verifyColumnNames.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.HeaderColumnNameMappingStrategyTest#verifyColumnNames
[m[m07.11.2021 - 16:14:57.160 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:57.161 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#verifyColumnNames.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#verifyColumnNames/report.xml
[m[m07.11.2021 - 16:14:57.442 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.HeaderColumnNameMappingStrategyTest#verifyColumnNames was generated successfully
[m[m07.11.2021 - 16:14:57.442 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 78/286
[m[m07.11.2021 - 16:14:57.442 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.HeaderColumnNameMappingStrategyTest#throwsIllegalStateExceptionIfTypeNotSet
[m[32m07.11.2021 - 16:14:57.442 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#throwsIllegalStateExceptionIfTypeNotSet.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.HeaderColumnNameMappingStrategyTest#throwsIllegalStateExceptionIfTypeNotSet
[m[m07.11.2021 - 16:14:57.671 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:57.671 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#throwsIllegalStateExceptionIfTypeNotSet.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#throwsIllegalStateExceptionIfTypeNotSet/report.xml
[m[m07.11.2021 - 16:14:57.922 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.HeaderColumnNameMappingStrategyTest#throwsIllegalStateExceptionIfTypeNotSet was generated successfully
[m[m07.11.2021 - 16:14:57.923 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 79/286
[m[m07.11.2021 - 16:14:57.923 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.TestUtilitiesTest#displayStringArray
[m[32m07.11.2021 - 16:14:57.923 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.TestUtilitiesTest#displayStringArray.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.TestUtilitiesTest#displayStringArray
[m[m07.11.2021 - 16:14:58.098 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:58.098 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.TestUtilitiesTest#displayStringArray.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.TestUtilitiesTest#displayStringArray/report.xml
[m[m07.11.2021 - 16:14:58.353 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.TestUtilitiesTest#displayStringArray was generated successfully
[m[m07.11.2021 - 16:14:58.354 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 80/286
[m[m07.11.2021 - 16:14:58.354 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.StatefulBeanToCsvTest#writeBadData
[m[32m07.11.2021 - 16:14:58.354 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.StatefulBeanToCsvTest#writeBadData.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.StatefulBeanToCsvTest#writeBadData
[m[m07.11.2021 - 16:14:58.788 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:58.788 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.StatefulBeanToCsvTest#writeBadData.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.StatefulBeanToCsvTest#writeBadData/report.xml
[m[m07.11.2021 - 16:14:59.030 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.StatefulBeanToCsvTest#writeBadData was generated successfully
[m[m07.11.2021 - 16:14:59.030 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 81/286
[m[m07.11.2021 - 16:14:59.030 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.StatefulBeanToCsvTest#writeGoodDataCustom
[m[32m07.11.2021 - 16:14:59.030 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.StatefulBeanToCsvTest#writeGoodDataCustom.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.StatefulBeanToCsvTest#writeGoodDataCustom
[m[m07.11.2021 - 16:14:59.343 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:59.343 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.StatefulBeanToCsvTest#writeGoodDataCustom.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.StatefulBeanToCsvTest#writeGoodDataCustom/report.xml
[m[m07.11.2021 - 16:14:59.590 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.StatefulBeanToCsvTest#writeGoodDataCustom was generated successfully
[m[m07.11.2021 - 16:14:59.591 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 82/286
[m[m07.11.2021 - 16:14:59.591 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.StatefulBeanToCsvTest#writeBadDataCustom
[m[32m07.11.2021 - 16:14:59.591 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.StatefulBeanToCsvTest#writeBadDataCustom.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.StatefulBeanToCsvTest#writeBadDataCustom
[m[m07.11.2021 - 16:14:59.910 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:14:59.910 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.StatefulBeanToCsvTest#writeBadDataCustom.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.StatefulBeanToCsvTest#writeBadDataCustom/report.xml
[m[m07.11.2021 - 16:15:00.171 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.StatefulBeanToCsvTest#writeBadDataCustom was generated successfully
[m[m07.11.2021 - 16:15:00.171 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 83/286
[m[m07.11.2021 - 16:15:00.171 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVIteratorTest#readerExceptionCausesRunTimeException
[m[32m07.11.2021 - 16:15:00.171 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVIteratorTest#readerExceptionCausesRunTimeException.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVIteratorTest#readerExceptionCausesRunTimeException
[m[m07.11.2021 - 16:15:00.447 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:00.448 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVIteratorTest#readerExceptionCausesRunTimeException.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVIteratorTest#readerExceptionCausesRunTimeException/report.xml
[m[m07.11.2021 - 16:15:00.705 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVIteratorTest#readerExceptionCausesRunTimeException was generated successfully
[m[m07.11.2021 - 16:15:00.705 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 84/286
[m[m07.11.2021 - 16:15:00.705 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVIteratorTest#removethrowsUnsupportedOperationException
[m[32m07.11.2021 - 16:15:00.705 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVIteratorTest#removethrowsUnsupportedOperationException.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVIteratorTest#removethrowsUnsupportedOperationException
[m[m07.11.2021 - 16:15:00.964 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:00.964 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVIteratorTest#removethrowsUnsupportedOperationException.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVIteratorTest#removethrowsUnsupportedOperationException/report.xml
[m[m07.11.2021 - 16:15:01.222 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVIteratorTest#removethrowsUnsupportedOperationException was generated successfully
[m[m07.11.2021 - 16:15:01.222 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 85/286
[m[m07.11.2021 - 16:15:01.222 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVIteratorTest#initialReadReturnsStrings
[m[32m07.11.2021 - 16:15:01.222 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVIteratorTest#initialReadReturnsStrings.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVIteratorTest#initialReadReturnsStrings
[m[m07.11.2021 - 16:15:01.494 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:01.495 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVIteratorTest#initialReadReturnsStrings.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVIteratorTest#initialReadReturnsStrings/report.xml
[m[m07.11.2021 - 16:15:01.754 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVIteratorTest#initialReadReturnsStrings was generated successfully
[m[m07.11.2021 - 16:15:01.754 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 86/286
[m[m07.11.2021 - 16:15:01.755 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVIteratorTest#hasNextWorks
[m[32m07.11.2021 - 16:15:01.755 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVIteratorTest#hasNextWorks.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVIteratorTest#hasNextWorks
[m[m07.11.2021 - 16:15:02.014 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:02.014 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVIteratorTest#hasNextWorks.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVIteratorTest#hasNextWorks/report.xml
[m[m07.11.2021 - 16:15:02.266 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVIteratorTest#hasNextWorks was generated successfully
[m[m07.11.2021 - 16:15:02.266 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 87/286
[m[m07.11.2021 - 16:15:02.266 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderBuilderTest#testDefaultBuilder
[m[32m07.11.2021 - 16:15:02.266 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderBuilderTest#testDefaultBuilder.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderBuilderTest#testDefaultBuilder
[m[m07.11.2021 - 16:15:02.526 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:02.526 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderBuilderTest#testDefaultBuilder.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderBuilderTest#testDefaultBuilder/report.xml
[m[m07.11.2021 - 16:15:02.777 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderBuilderTest#testDefaultBuilder was generated successfully
[m[m07.11.2021 - 16:15:02.777 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 88/286
[m[m07.11.2021 - 16:15:02.778 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderBuilderTest#testNullReader
[m[32m07.11.2021 - 16:15:02.778 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderBuilderTest#testNullReader.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderBuilderTest#testNullReader
[m[m07.11.2021 - 16:15:03.023 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:03.023 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderBuilderTest#testNullReader.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderBuilderTest#testNullReader/report.xml
[m[m07.11.2021 - 16:15:03.352 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderBuilderTest#testNullReader was generated successfully
[m[m07.11.2021 - 16:15:03.352 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 89/286
[m[m07.11.2021 - 16:15:03.352 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderBuilderTest#testWithCSVParserNull
[m[32m07.11.2021 - 16:15:03.352 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderBuilderTest#testWithCSVParserNull.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderBuilderTest#testWithCSVParserNull
[m[m07.11.2021 - 16:15:03.609 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:03.610 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderBuilderTest#testWithCSVParserNull.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderBuilderTest#testWithCSVParserNull/report.xml
[m[m07.11.2021 - 16:15:03.910 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderBuilderTest#testWithCSVParserNull was generated successfully
[m[m07.11.2021 - 16:15:03.910 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 90/286
[m[m07.11.2021 - 16:15:03.910 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderBuilderTest#testWithCSVParser
[m[32m07.11.2021 - 16:15:03.910 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderBuilderTest#testWithCSVParser.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderBuilderTest#testWithCSVParser
[m[m07.11.2021 - 16:15:04.204 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:04.204 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderBuilderTest#testWithCSVParser.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderBuilderTest#testWithCSVParser/report.xml
[m[m07.11.2021 - 16:15:04.445 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderBuilderTest#testWithCSVParser was generated successfully
[m[m07.11.2021 - 16:15:04.445 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 91/286
[m[m07.11.2021 - 16:15:04.445 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderBuilderTest#testWithSkipLines
[m[32m07.11.2021 - 16:15:04.445 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderBuilderTest#testWithSkipLines.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderBuilderTest#testWithSkipLines
[m[m07.11.2021 - 16:15:04.722 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:04.723 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderBuilderTest#testWithSkipLines.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderBuilderTest#testWithSkipLines/report.xml
[m[m07.11.2021 - 16:15:04.976 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderBuilderTest#testWithSkipLines was generated successfully
[m[m07.11.2021 - 16:15:04.976 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 92/286
[m[m07.11.2021 - 16:15:04.977 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderBuilderTest#testWithKeepCR
[m[32m07.11.2021 - 16:15:04.977 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderBuilderTest#testWithKeepCR.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderBuilderTest#testWithKeepCR
[m[m07.11.2021 - 16:15:05.217 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:05.217 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderBuilderTest#testWithKeepCR.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderBuilderTest#testWithKeepCR/report.xml
[m[m07.11.2021 - 16:15:05.482 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderBuilderTest#testWithKeepCR was generated successfully
[m[m07.11.2021 - 16:15:05.482 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 93/286
[m[m07.11.2021 - 16:15:05.482 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderBuilderTest#testWithSkipLinesZero
[m[32m07.11.2021 - 16:15:05.482 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderBuilderTest#testWithSkipLinesZero.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderBuilderTest#testWithSkipLinesZero
[m[m07.11.2021 - 16:15:05.738 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:05.738 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderBuilderTest#testWithSkipLinesZero.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderBuilderTest#testWithSkipLinesZero/report.xml
[m[m07.11.2021 - 16:15:05.991 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderBuilderTest#testWithSkipLinesZero was generated successfully
[m[m07.11.2021 - 16:15:05.991 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 94/286
[m[m07.11.2021 - 16:15:05.992 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderBuilderTest#testWithSkipLinesNegative
[m[32m07.11.2021 - 16:15:05.992 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderBuilderTest#testWithSkipLinesNegative.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderBuilderTest#testWithSkipLinesNegative
[m[m07.11.2021 - 16:15:06.257 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:06.258 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderBuilderTest#testWithSkipLinesNegative.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderBuilderTest#testWithSkipLinesNegative/report.xml
[m[m07.11.2021 - 16:15:06.508 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderBuilderTest#testWithSkipLinesNegative was generated successfully
[m[m07.11.2021 - 16:15:06.508 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 95/286
[m[m07.11.2021 - 16:15:06.508 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderBuilderTest#testWithVerifyReader
[m[32m07.11.2021 - 16:15:06.508 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderBuilderTest#testWithVerifyReader.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderBuilderTest#testWithVerifyReader
[m[m07.11.2021 - 16:15:06.771 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:06.771 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderBuilderTest#testWithVerifyReader.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderBuilderTest#testWithVerifyReader/report.xml
[m[m07.11.2021 - 16:15:07.023 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderBuilderTest#testWithVerifyReader was generated successfully
[m[m07.11.2021 - 16:15:07.023 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 96/286
[m[m07.11.2021 - 16:15:07.023 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderBuilderTest#builderWithNullFieldIndicator
[m[32m07.11.2021 - 16:15:07.024 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderBuilderTest#builderWithNullFieldIndicator.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderBuilderTest#builderWithNullFieldIndicator
[m[m07.11.2021 - 16:15:07.313 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:07.314 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderBuilderTest#builderWithNullFieldIndicator.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderBuilderTest#builderWithNullFieldIndicator/report.xml
[m[m07.11.2021 - 16:15:07.569 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderBuilderTest#builderWithNullFieldIndicator was generated successfully
[m[m07.11.2021 - 16:15:07.569 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 97/286
[m[m07.11.2021 - 16:15:07.569 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#testParseLine
[m[32m07.11.2021 - 16:15:07.569 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testParseLine.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#testParseLine
[m[m07.11.2021 - 16:15:07.783 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:07.783 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testParseLine.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testParseLine/report.xml
[m[m07.11.2021 - 16:15:08.038 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#testParseLine was generated successfully
[m[m07.11.2021 - 16:15:08.038 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 98/286
[m[m07.11.2021 - 16:15:08.038 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#readerCanHandleNullInString
[m[32m07.11.2021 - 16:15:08.038 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#readerCanHandleNullInString.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#readerCanHandleNullInString
[m[m07.11.2021 - 16:15:08.241 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:08.241 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#readerCanHandleNullInString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#readerCanHandleNullInString/report.xml
[m[m07.11.2021 - 16:15:08.508 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#readerCanHandleNullInString was generated successfully
[m[m07.11.2021 - 16:15:08.508 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 99/286
[m[m07.11.2021 - 16:15:08.508 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#testParseLineStrictQuote
[m[32m07.11.2021 - 16:15:08.509 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testParseLineStrictQuote.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#testParseLineStrictQuote
[m[m07.11.2021 - 16:15:08.756 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:08.756 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testParseLineStrictQuote.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testParseLineStrictQuote/report.xml
[m[m07.11.2021 - 16:15:08.991 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#testParseLineStrictQuote was generated successfully
[m[m07.11.2021 - 16:15:08.991 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 100/286
[m[m07.11.2021 - 16:15:08.991 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#testParseAll
[m[32m07.11.2021 - 16:15:08.991 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testParseAll.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#testParseAll
[m[m07.11.2021 - 16:15:09.211 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:09.212 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testParseAll.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testParseAll/report.xml
[m[m07.11.2021 - 16:15:09.454 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#testParseAll was generated successfully
[m[m07.11.2021 - 16:15:09.454 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 101/286
[m[m07.11.2021 - 16:15:09.454 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#testOptionalConstructors
[m[32m07.11.2021 - 16:15:09.454 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testOptionalConstructors.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#testOptionalConstructors
[m[m07.11.2021 - 16:15:09.647 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:09.648 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testOptionalConstructors.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testOptionalConstructors/report.xml
[m[m07.11.2021 - 16:15:09.912 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#testOptionalConstructors was generated successfully
[m[m07.11.2021 - 16:15:09.912 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 102/286
[m[m07.11.2021 - 16:15:09.912 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#parseQuotedStringWithDefinedSeperator
[m[32m07.11.2021 - 16:15:09.913 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#parseQuotedStringWithDefinedSeperator.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#parseQuotedStringWithDefinedSeperator
[m[m07.11.2021 - 16:15:10.121 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:10.122 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#parseQuotedStringWithDefinedSeperator.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#parseQuotedStringWithDefinedSeperator/report.xml
[m[m07.11.2021 - 16:15:10.392 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#parseQuotedStringWithDefinedSeperator was generated successfully
[m[m07.11.2021 - 16:15:10.392 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 103/286
[m[m07.11.2021 - 16:15:10.392 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#testSkippingLines
[m[32m07.11.2021 - 16:15:10.392 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testSkippingLines.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#testSkippingLines
[m[m07.11.2021 - 16:15:10.610 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:10.611 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testSkippingLines.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testSkippingLines/report.xml
[m[m07.11.2021 - 16:15:10.845 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#testSkippingLines was generated successfully
[m[m07.11.2021 - 16:15:10.845 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 104/286
[m[m07.11.2021 - 16:15:10.845 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#linesAndRecordsRead
[m[32m07.11.2021 - 16:15:10.845 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#linesAndRecordsRead.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#linesAndRecordsRead
[m[m07.11.2021 - 16:15:11.128 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:11.129 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#linesAndRecordsRead.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#linesAndRecordsRead/report.xml
[m[m07.11.2021 - 16:15:11.422 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#linesAndRecordsRead was generated successfully
[m[m07.11.2021 - 16:15:11.422 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 105/286
[m[m07.11.2021 - 16:15:11.422 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#testSkippingLinesWithDifferentEscape
[m[32m07.11.2021 - 16:15:11.422 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testSkippingLinesWithDifferentEscape.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#testSkippingLinesWithDifferentEscape
[m[m07.11.2021 - 16:15:11.627 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:11.627 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testSkippingLinesWithDifferentEscape.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testSkippingLinesWithDifferentEscape/report.xml
[m[m07.11.2021 - 16:15:11.892 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#testSkippingLinesWithDifferentEscape was generated successfully
[m[m07.11.2021 - 16:15:11.892 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 106/286
[m[m07.11.2021 - 16:15:11.892 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#testNormalParsedLine
[m[32m07.11.2021 - 16:15:11.892 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testNormalParsedLine.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#testNormalParsedLine
[m[m07.11.2021 - 16:15:12.115 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:12.115 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testNormalParsedLine.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testNormalParsedLine/report.xml
[m[m07.11.2021 - 16:15:12.371 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#testNormalParsedLine was generated successfully
[m[m07.11.2021 - 16:15:12.372 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 107/286
[m[m07.11.2021 - 16:15:12.372 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#testASingleQuoteAsDataElement
[m[32m07.11.2021 - 16:15:12.372 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testASingleQuoteAsDataElement.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#testASingleQuoteAsDataElement
[m[m07.11.2021 - 16:15:12.592 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:12.592 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testASingleQuoteAsDataElement.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testASingleQuoteAsDataElement/report.xml
[m[m07.11.2021 - 16:15:12.849 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#testASingleQuoteAsDataElement was generated successfully
[m[m07.11.2021 - 16:15:12.850 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 108/286
[m[m07.11.2021 - 16:15:12.850 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#testASingleQuoteAsDataElementWithEmptyField
[m[32m07.11.2021 - 16:15:12.850 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testASingleQuoteAsDataElementWithEmptyField.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#testASingleQuoteAsDataElementWithEmptyField
[m[m07.11.2021 - 16:15:13.066 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:13.067 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testASingleQuoteAsDataElementWithEmptyField.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testASingleQuoteAsDataElementWithEmptyField/report.xml
[m[m07.11.2021 - 16:15:13.358 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#testASingleQuoteAsDataElementWithEmptyField was generated successfully
[m[m07.11.2021 - 16:15:13.358 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 109/286
[m[m07.11.2021 - 16:15:13.358 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#testSpacesAtEndOfString
[m[32m07.11.2021 - 16:15:13.358 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testSpacesAtEndOfString.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#testSpacesAtEndOfString
[m[m07.11.2021 - 16:15:13.566 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:13.566 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testSpacesAtEndOfString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testSpacesAtEndOfString/report.xml
[m[m07.11.2021 - 16:15:13.819 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#testSpacesAtEndOfString was generated successfully
[m[m07.11.2021 - 16:15:13.820 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 110/286
[m[m07.11.2021 - 16:15:13.820 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#testEscapedQuote
[m[32m07.11.2021 - 16:15:13.820 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testEscapedQuote.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#testEscapedQuote
[m[m07.11.2021 - 16:15:14.025 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:14.025 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testEscapedQuote.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testEscapedQuote/report.xml
[m[m07.11.2021 - 16:15:14.278 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#testEscapedQuote was generated successfully
[m[m07.11.2021 - 16:15:14.278 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 111/286
[m[m07.11.2021 - 16:15:14.278 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#testEscapedEscape
[m[32m07.11.2021 - 16:15:14.278 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testEscapedEscape.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#testEscapedEscape
[m[m07.11.2021 - 16:15:14.511 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:14.512 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testEscapedEscape.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testEscapedEscape/report.xml
[m[m07.11.2021 - 16:15:14.799 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#testEscapedEscape was generated successfully
[m[m07.11.2021 - 16:15:14.799 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 112/286
[m[m07.11.2021 - 16:15:14.799 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#testSingleQuoteWhenDoubleQuoteIsQuoteChar
[m[32m07.11.2021 - 16:15:14.800 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testSingleQuoteWhenDoubleQuoteIsQuoteChar.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#testSingleQuoteWhenDoubleQuoteIsQuoteChar
[m[m07.11.2021 - 16:15:15.027 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:15.028 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testSingleQuoteWhenDoubleQuoteIsQuoteChar.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testSingleQuoteWhenDoubleQuoteIsQuoteChar/report.xml
[m[m07.11.2021 - 16:15:15.281 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#testSingleQuoteWhenDoubleQuoteIsQuoteChar was generated successfully
[m[m07.11.2021 - 16:15:15.281 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 113/286
[m[m07.11.2021 - 16:15:15.281 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#testQuotedParsedLine
[m[32m07.11.2021 - 16:15:15.281 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testQuotedParsedLine.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#testQuotedParsedLine
[m[m07.11.2021 - 16:15:15.487 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:15.487 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testQuotedParsedLine.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testQuotedParsedLine/report.xml
[m[m07.11.2021 - 16:15:15.747 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#testQuotedParsedLine was generated successfully
[m[m07.11.2021 - 16:15:15.747 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 114/286
[m[m07.11.2021 - 16:15:15.747 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#bug106ParseLineWithCarriageReturnNewLineStrictQuotes
[m[32m07.11.2021 - 16:15:15.747 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#bug106ParseLineWithCarriageReturnNewLineStrictQuotes.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#bug106ParseLineWithCarriageReturnNewLineStrictQuotes
[m[m07.11.2021 - 16:15:15.953 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:15.953 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#bug106ParseLineWithCarriageReturnNewLineStrictQuotes.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#bug106ParseLineWithCarriageReturnNewLineStrictQuotes/report.xml
[m[m07.11.2021 - 16:15:16.223 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#bug106ParseLineWithCarriageReturnNewLineStrictQuotes was generated successfully
[m[m07.11.2021 - 16:15:16.223 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 115/286
[m[m07.11.2021 - 16:15:16.223 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#testIssue2992134OutOfPlaceQuotes
[m[32m07.11.2021 - 16:15:16.223 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testIssue2992134OutOfPlaceQuotes.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#testIssue2992134OutOfPlaceQuotes
[m[m07.11.2021 - 16:15:16.432 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:16.432 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testIssue2992134OutOfPlaceQuotes.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testIssue2992134OutOfPlaceQuotes/report.xml
[m[m07.11.2021 - 16:15:16.699 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#testIssue2992134OutOfPlaceQuotes was generated successfully
[m[m07.11.2021 - 16:15:16.699 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 116/286
[m[m07.11.2021 - 16:15:16.699 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#quoteAndEscapeMustBeDifferent
[m[32m07.11.2021 - 16:15:16.700 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#quoteAndEscapeMustBeDifferent.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#quoteAndEscapeMustBeDifferent
[m[m07.11.2021 - 16:15:16.908 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:16.908 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#quoteAndEscapeMustBeDifferent.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#quoteAndEscapeMustBeDifferent/report.xml
[m[m07.11.2021 - 16:15:17.152 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#quoteAndEscapeMustBeDifferent was generated successfully
[m[m07.11.2021 - 16:15:17.153 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 117/286
[m[m07.11.2021 - 16:15:17.153 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#separatorAndEscapeMustBeDifferent
[m[32m07.11.2021 - 16:15:17.153 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#separatorAndEscapeMustBeDifferent.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#separatorAndEscapeMustBeDifferent
[m[m07.11.2021 - 16:15:17.344 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:17.345 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#separatorAndEscapeMustBeDifferent.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#separatorAndEscapeMustBeDifferent/report.xml
[m[m07.11.2021 - 16:15:17.595 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#separatorAndEscapeMustBeDifferent was generated successfully
[m[m07.11.2021 - 16:15:17.595 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 118/286
[m[m07.11.2021 - 16:15:17.595 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#separatorAndQuoteMustBeDifferent
[m[32m07.11.2021 - 16:15:17.595 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#separatorAndQuoteMustBeDifferent.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#separatorAndQuoteMustBeDifferent
[m[m07.11.2021 - 16:15:17.794 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:17.794 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#separatorAndQuoteMustBeDifferent.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#separatorAndQuoteMustBeDifferent/report.xml
[m[m07.11.2021 - 16:15:18.078 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#separatorAndQuoteMustBeDifferent was generated successfully
[m[m07.11.2021 - 16:15:18.079 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 119/286
[m[m07.11.2021 - 16:15:18.079 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#testIteratorFunctionality
[m[32m07.11.2021 - 16:15:18.079 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testIteratorFunctionality.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#testIteratorFunctionality
[m[m07.11.2021 - 16:15:18.369 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:18.370 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testIteratorFunctionality.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testIteratorFunctionality/report.xml
[m[m07.11.2021 - 16:15:18.622 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#testIteratorFunctionality was generated successfully
[m[m07.11.2021 - 16:15:18.622 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 120/286
[m[m07.11.2021 - 16:15:18.622 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#canCloseReader
[m[32m07.11.2021 - 16:15:18.622 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#canCloseReader.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#canCloseReader
[m[m07.11.2021 - 16:15:18.886 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:18.887 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#canCloseReader.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#canCloseReader/report.xml
[m[m07.11.2021 - 16:15:19.161 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#canCloseReader was generated successfully
[m[m07.11.2021 - 16:15:19.161 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 121/286
[m[m07.11.2021 - 16:15:19.161 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#canCreateIteratorFromReader
[m[32m07.11.2021 - 16:15:19.161 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#canCreateIteratorFromReader.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#canCreateIteratorFromReader
[m[m07.11.2021 - 16:15:19.447 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:19.448 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#canCreateIteratorFromReader.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#canCreateIteratorFromReader/report.xml
[m[m07.11.2021 - 16:15:19.718 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#canCreateIteratorFromReader was generated successfully
[m[m07.11.2021 - 16:15:19.719 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 122/286
[m[m07.11.2021 - 16:15:19.719 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#attemptToReadCloseStreamReturnsNull
[m[32m07.11.2021 - 16:15:19.719 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#attemptToReadCloseStreamReturnsNull.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#attemptToReadCloseStreamReturnsNull
[m[m07.11.2021 - 16:15:19.991 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:19.991 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#attemptToReadCloseStreamReturnsNull.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#attemptToReadCloseStreamReturnsNull/report.xml
[m[m07.11.2021 - 16:15:20.314 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#attemptToReadCloseStreamReturnsNull was generated successfully
[m[m07.11.2021 - 16:15:20.314 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 123/286
[m[m07.11.2021 - 16:15:20.315 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#testIssue102
[m[32m07.11.2021 - 16:15:20.315 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testIssue102.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#testIssue102
[m[m07.11.2021 - 16:15:20.588 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:20.588 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testIssue102.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#testIssue102/report.xml
[m[m07.11.2021 - 16:15:20.866 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#testIssue102 was generated successfully
[m[m07.11.2021 - 16:15:20.866 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 124/286
[m[m07.11.2021 - 16:15:20.866 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#issue108ReaderPlaysWellWithChannels
[m[32m07.11.2021 - 16:15:20.866 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#issue108ReaderPlaysWellWithChannels.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#issue108ReaderPlaysWellWithChannels
[m[m07.11.2021 - 16:15:21.205 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:21.205 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#issue108ReaderPlaysWellWithChannels.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#issue108ReaderPlaysWellWithChannels/report.xml
[m[m07.11.2021 - 16:15:21.496 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#issue108ReaderPlaysWellWithChannels was generated successfully
[m[m07.11.2021 - 16:15:21.496 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 125/286
[m[m07.11.2021 - 16:15:21.496 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#featureRequest60ByDefaultEmptyFieldsAreBlank
[m[32m07.11.2021 - 16:15:21.496 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#featureRequest60ByDefaultEmptyFieldsAreBlank.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#featureRequest60ByDefaultEmptyFieldsAreBlank
[m[m07.11.2021 - 16:15:21.754 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:21.755 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#featureRequest60ByDefaultEmptyFieldsAreBlank.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#featureRequest60ByDefaultEmptyFieldsAreBlank/report.xml
[m[m07.11.2021 - 16:15:22.010 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#featureRequest60ByDefaultEmptyFieldsAreBlank was generated successfully
[m[m07.11.2021 - 16:15:22.010 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 126/286
[m[m07.11.2021 - 16:15:22.010 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#featureRequest60TreatEmptyFieldsAsNull
[m[32m07.11.2021 - 16:15:22.011 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#featureRequest60TreatEmptyFieldsAsNull.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#featureRequest60TreatEmptyFieldsAsNull
[m[m07.11.2021 - 16:15:22.224 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:22.224 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#featureRequest60TreatEmptyFieldsAsNull.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#featureRequest60TreatEmptyFieldsAsNull/report.xml
[m[m07.11.2021 - 16:15:22.493 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#featureRequest60TreatEmptyFieldsAsNull was generated successfully
[m[m07.11.2021 - 16:15:22.493 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 127/286
[m[m07.11.2021 - 16:15:22.493 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#featureRequest60TreatEmptyDelimitedFieldsAsNull
[m[32m07.11.2021 - 16:15:22.493 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#featureRequest60TreatEmptyDelimitedFieldsAsNull.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#featureRequest60TreatEmptyDelimitedFieldsAsNull
[m[m07.11.2021 - 16:15:22.724 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:22.725 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#featureRequest60TreatEmptyDelimitedFieldsAsNull.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#featureRequest60TreatEmptyDelimitedFieldsAsNull/report.xml
[m[m07.11.2021 - 16:15:23.038 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#featureRequest60TreatEmptyDelimitedFieldsAsNull was generated successfully
[m[m07.11.2021 - 16:15:23.038 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 128/286
[m[m07.11.2021 - 16:15:23.038 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#featureRequest60TreatEmptyFieldsDelimitedOrNotAsNull
[m[32m07.11.2021 - 16:15:23.038 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#featureRequest60TreatEmptyFieldsDelimitedOrNotAsNull.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#featureRequest60TreatEmptyFieldsDelimitedOrNotAsNull
[m[m07.11.2021 - 16:15:23.260 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:23.261 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#featureRequest60TreatEmptyFieldsDelimitedOrNotAsNull.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVReaderTest#featureRequest60TreatEmptyFieldsDelimitedOrNotAsNull/report.xml
[m[m07.11.2021 - 16:15:23.517 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#featureRequest60TreatEmptyFieldsDelimitedOrNotAsNull was generated successfully
[m[m07.11.2021 - 16:15:23.518 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 129/286
[m[m07.11.2021 - 16:15:23.518 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.stream.reader.LineReaderTest#lineReaderWillKeepCR
[m[32m07.11.2021 - 16:15:23.518 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.stream.reader.LineReaderTest#lineReaderWillKeepCR.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.stream.reader.LineReaderTest#lineReaderWillKeepCR
[m[m07.11.2021 - 16:15:23.714 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:23.714 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.stream.reader.LineReaderTest#lineReaderWillKeepCR.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.stream.reader.LineReaderTest#lineReaderWillKeepCR/report.xml
[m[m07.11.2021 - 16:15:23.969 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.stream.reader.LineReaderTest#lineReaderWillKeepCR was generated successfully
[m[m07.11.2021 - 16:15:23.970 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 130/286
[m[m07.11.2021 - 16:15:23.970 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.stream.reader.LineReaderTest#lineReaderWillRemoveCR
[m[32m07.11.2021 - 16:15:23.970 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.stream.reader.LineReaderTest#lineReaderWillRemoveCR.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.stream.reader.LineReaderTest#lineReaderWillRemoveCR
[m[m07.11.2021 - 16:15:24.156 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:24.156 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.stream.reader.LineReaderTest#lineReaderWillRemoveCR.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.stream.reader.LineReaderTest#lineReaderWillRemoveCR/report.xml
[m[m07.11.2021 - 16:15:24.510 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.stream.reader.LineReaderTest#lineReaderWillRemoveCR was generated successfully
[m[m07.11.2021 - 16:15:24.510 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 131/286
[m[m07.11.2021 - 16:15:24.510 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.stream.reader.LineReaderTest#lineReaderKeepingCRWillHandleStringWithNoLinefeed
[m[32m07.11.2021 - 16:15:24.510 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.stream.reader.LineReaderTest#lineReaderKeepingCRWillHandleStringWithNoLinefeed.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.stream.reader.LineReaderTest#lineReaderKeepingCRWillHandleStringWithNoLinefeed
[m[m07.11.2021 - 16:15:24.695 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:24.696 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.stream.reader.LineReaderTest#lineReaderKeepingCRWillHandleStringWithNoLinefeed.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.stream.reader.LineReaderTest#lineReaderKeepingCRWillHandleStringWithNoLinefeed/report.xml
[m[m07.11.2021 - 16:15:24.959 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.stream.reader.LineReaderTest#lineReaderKeepingCRWillHandleStringWithNoLinefeed was generated successfully
[m[m07.11.2021 - 16:15:24.959 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 132/286
[m[m07.11.2021 - 16:15:24.959 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.stream.reader.LineReaderTest#lineReaderNoCRWillHandleStringWithNoLinefeed
[m[32m07.11.2021 - 16:15:24.959 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.stream.reader.LineReaderTest#lineReaderNoCRWillHandleStringWithNoLinefeed.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.stream.reader.LineReaderTest#lineReaderNoCRWillHandleStringWithNoLinefeed
[m[m07.11.2021 - 16:15:25.139 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:25.139 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.stream.reader.LineReaderTest#lineReaderNoCRWillHandleStringWithNoLinefeed.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.stream.reader.LineReaderTest#lineReaderNoCRWillHandleStringWithNoLinefeed/report.xml
[m[m07.11.2021 - 16:15:25.387 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.stream.reader.LineReaderTest#lineReaderNoCRWillHandleStringWithNoLinefeed was generated successfully
[m[m07.11.2021 - 16:15:25.387 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 133/286
[m[m07.11.2021 - 16:15:25.388 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.stream.reader.LineReaderTest#lineReaderKeepingCRWillHandleEmptyString
[m[32m07.11.2021 - 16:15:25.388 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.stream.reader.LineReaderTest#lineReaderKeepingCRWillHandleEmptyString.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.stream.reader.LineReaderTest#lineReaderKeepingCRWillHandleEmptyString
[m[m07.11.2021 - 16:15:25.564 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:25.565 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.stream.reader.LineReaderTest#lineReaderKeepingCRWillHandleEmptyString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.stream.reader.LineReaderTest#lineReaderKeepingCRWillHandleEmptyString/report.xml
[m[m07.11.2021 - 16:15:25.835 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.stream.reader.LineReaderTest#lineReaderKeepingCRWillHandleEmptyString was generated successfully
[m[m07.11.2021 - 16:15:25.836 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 134/286
[m[m07.11.2021 - 16:15:25.836 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.stream.reader.LineReaderTest#lineReaderNoCRWillHandleEmptyString
[m[32m07.11.2021 - 16:15:25.836 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.stream.reader.LineReaderTest#lineReaderNoCRWillHandleEmptyString.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.stream.reader.LineReaderTest#lineReaderNoCRWillHandleEmptyString
[m[m07.11.2021 - 16:15:26.015 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:26.016 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.stream.reader.LineReaderTest#lineReaderNoCRWillHandleEmptyString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.stream.reader.LineReaderTest#lineReaderNoCRWillHandleEmptyString/report.xml
[m[m07.11.2021 - 16:15:26.294 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.stream.reader.LineReaderTest#lineReaderNoCRWillHandleEmptyString was generated successfully
[m[m07.11.2021 - 16:15:26.294 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 135/286
[m[m07.11.2021 - 16:15:26.294 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.AnnotationTest#testGoodDataByName
[m[32m07.11.2021 - 16:15:26.294 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testGoodDataByName.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.AnnotationTest#testGoodDataByName
[m[m07.11.2021 - 16:15:26.675 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:26.675 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testGoodDataByName.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testGoodDataByName/report.xml
[m[m07.11.2021 - 16:15:26.918 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.AnnotationTest#testGoodDataByName was generated successfully
[m[m07.11.2021 - 16:15:26.918 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 136/286
[m[m07.11.2021 - 16:15:26.918 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.AnnotationTest#testGoodDataByPosition
[m[32m07.11.2021 - 16:15:26.919 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testGoodDataByPosition.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.AnnotationTest#testGoodDataByPosition
[m[m07.11.2021 - 16:15:27.285 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:27.285 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testGoodDataByPosition.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testGoodDataByPosition/report.xml
[m[m07.11.2021 - 16:15:27.545 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.AnnotationTest#testGoodDataByPosition was generated successfully
[m[m07.11.2021 - 16:15:27.545 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 137/286
[m[m07.11.2021 - 16:15:27.545 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.AnnotationTest#testGoodDataCustomByName
[m[32m07.11.2021 - 16:15:27.545 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testGoodDataCustomByName.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.AnnotationTest#testGoodDataCustomByName
[m[m07.11.2021 - 16:15:27.836 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:27.836 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testGoodDataCustomByName.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testGoodDataCustomByName/report.xml
[m[m07.11.2021 - 16:15:28.081 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.AnnotationTest#testGoodDataCustomByName was generated successfully
[m[m07.11.2021 - 16:15:28.081 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 138/286
[m[m07.11.2021 - 16:15:28.081 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.AnnotationTest#testGoodDataCustomByPosition
[m[32m07.11.2021 - 16:15:28.081 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testGoodDataCustomByPosition.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.AnnotationTest#testGoodDataCustomByPosition
[m[m07.11.2021 - 16:15:28.358 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:28.359 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testGoodDataCustomByPosition.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testGoodDataCustomByPosition/report.xml
[m[m07.11.2021 - 16:15:28.610 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.AnnotationTest#testGoodDataCustomByPosition was generated successfully
[m[m07.11.2021 - 16:15:28.610 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 139/286
[m[m07.11.2021 - 16:15:28.610 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.AnnotationTest#testCase7
[m[32m07.11.2021 - 16:15:28.610 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testCase7.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.AnnotationTest#testCase7
[m[m07.11.2021 - 16:15:28.905 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:28.905 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testCase7.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testCase7/report.xml
[m[m07.11.2021 - 16:15:29.179 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.AnnotationTest#testCase7 was generated successfully
[m[m07.11.2021 - 16:15:29.179 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 140/286
[m[m07.11.2021 - 16:15:29.179 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.AnnotationTest#testCase51
[m[32m07.11.2021 - 16:15:29.179 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testCase51.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.AnnotationTest#testCase51
[m[m07.11.2021 - 16:15:29.468 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:29.468 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testCase51.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testCase51/report.xml
[m[m07.11.2021 - 16:15:29.730 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.AnnotationTest#testCase51 was generated successfully
[m[m07.11.2021 - 16:15:29.730 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 141/286
[m[m07.11.2021 - 16:15:29.730 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.AnnotationTest#testCase11
[m[32m07.11.2021 - 16:15:29.730 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testCase11.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.AnnotationTest#testCase11
[m[m07.11.2021 - 16:15:30.018 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:30.019 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testCase11.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testCase11/report.xml
[m[m07.11.2021 - 16:15:30.298 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.AnnotationTest#testCase11 was generated successfully
[m[m07.11.2021 - 16:15:30.298 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 142/286
[m[m07.11.2021 - 16:15:30.298 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.AnnotationTest#testCase55
[m[32m07.11.2021 - 16:15:30.299 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testCase55.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.AnnotationTest#testCase55
[m[m07.11.2021 - 16:15:30.578 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:30.579 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testCase55.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testCase55/report.xml
[m[m07.11.2021 - 16:15:30.829 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.AnnotationTest#testCase55 was generated successfully
[m[m07.11.2021 - 16:15:30.829 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 143/286
[m[m07.11.2021 - 16:15:30.829 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.AnnotationTest#testCase21
[m[32m07.11.2021 - 16:15:30.829 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testCase21.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.AnnotationTest#testCase21
[m[m07.11.2021 - 16:15:31.105 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:31.105 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testCase21.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testCase21/report.xml
[m[m07.11.2021 - 16:15:31.361 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.AnnotationTest#testCase21 was generated successfully
[m[m07.11.2021 - 16:15:31.361 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 144/286
[m[m07.11.2021 - 16:15:31.361 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.AnnotationTest#testCase63
[m[32m07.11.2021 - 16:15:31.361 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testCase63.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.AnnotationTest#testCase63
[m[m07.11.2021 - 16:15:31.653 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:31.653 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testCase63.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testCase63/report.xml
[m[m07.11.2021 - 16:15:31.907 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.AnnotationTest#testCase63 was generated successfully
[m[m07.11.2021 - 16:15:31.907 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 145/286
[m[m07.11.2021 - 16:15:31.907 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.AnnotationTest#testBadDataByName
[m[32m07.11.2021 - 16:15:31.907 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testBadDataByName.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.AnnotationTest#testBadDataByName
[m[m07.11.2021 - 16:15:32.310 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:32.311 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testBadDataByName.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testBadDataByName/report.xml
[m[m07.11.2021 - 16:15:32.576 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.AnnotationTest#testBadDataByName was generated successfully
[m[m07.11.2021 - 16:15:32.576 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 146/286
[m[m07.11.2021 - 16:15:32.576 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.AnnotationTest#testCase16
[m[32m07.11.2021 - 16:15:32.576 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testCase16.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.AnnotationTest#testCase16
[m[m07.11.2021 - 16:15:32.845 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:32.845 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testCase16.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testCase16/report.xml
[m[m07.11.2021 - 16:15:33.098 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.AnnotationTest#testCase16 was generated successfully
[m[m07.11.2021 - 16:15:33.098 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 147/286
[m[m07.11.2021 - 16:15:33.098 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.AnnotationTest#testCase60
[m[32m07.11.2021 - 16:15:33.098 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testCase60.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.AnnotationTest#testCase60
[m[m07.11.2021 - 16:15:33.384 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:33.384 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testCase60.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testCase60/report.xml
[m[m07.11.2021 - 16:15:33.621 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.AnnotationTest#testCase60 was generated successfully
[m[m07.11.2021 - 16:15:33.621 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 148/286
[m[m07.11.2021 - 16:15:33.621 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.AnnotationTest#testBadDataCustomByName
[m[32m07.11.2021 - 16:15:33.621 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testBadDataCustomByName.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.AnnotationTest#testBadDataCustomByName
[m[m07.11.2021 - 16:15:33.903 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:33.903 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testBadDataCustomByName.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testBadDataCustomByName/report.xml
[m[m07.11.2021 - 16:15:34.162 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.AnnotationTest#testBadDataCustomByName was generated successfully
[m[m07.11.2021 - 16:15:34.162 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 149/286
[m[m07.11.2021 - 16:15:34.162 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.AnnotationTest#testBadConverter
[m[32m07.11.2021 - 16:15:34.162 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testBadConverter.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.AnnotationTest#testBadConverter
[m[m07.11.2021 - 16:15:34.393 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:34.394 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testBadConverter.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#testBadConverter/report.xml
[m[m07.11.2021 - 16:15:34.691 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.AnnotationTest#testBadConverter was generated successfully
[m[m07.11.2021 - 16:15:34.691 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 150/286
[m[m07.11.2021 - 16:15:34.691 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.AnnotationTest#codeCoverageExceptions
[m[32m07.11.2021 - 16:15:34.691 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#codeCoverageExceptions.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.AnnotationTest#codeCoverageExceptions
[m[m07.11.2021 - 16:15:34.916 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:34.916 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#codeCoverageExceptions.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.AnnotationTest#codeCoverageExceptions/report.xml
[m[m07.11.2021 - 16:15:35.188 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.AnnotationTest#codeCoverageExceptions was generated successfully
[m[m07.11.2021 - 16:15:35.188 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 151/286
[m[m07.11.2021 - 16:15:35.188 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.IterableCSVToBeanTest#nextLine
[m[32m07.11.2021 - 16:15:35.188 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.IterableCSVToBeanTest#nextLine.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.IterableCSVToBeanTest#nextLine
[m[m07.11.2021 - 16:15:35.440 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:35.440 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.IterableCSVToBeanTest#nextLine.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.IterableCSVToBeanTest#nextLine/report.xml
[m[m07.11.2021 - 16:15:35.686 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.IterableCSVToBeanTest#nextLine was generated successfully
[m[m07.11.2021 - 16:15:35.686 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 152/286
[m[m07.11.2021 - 16:15:35.686 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.IterableCSVToBeanTest#nextLineWithFilter
[m[32m07.11.2021 - 16:15:35.686 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.IterableCSVToBeanTest#nextLineWithFilter.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.IterableCSVToBeanTest#nextLineWithFilter
[m[m07.11.2021 - 16:15:35.941 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:35.941 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.IterableCSVToBeanTest#nextLineWithFilter.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.IterableCSVToBeanTest#nextLineWithFilter/report.xml
[m[m07.11.2021 - 16:15:36.198 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.IterableCSVToBeanTest#nextLineWithFilter was generated successfully
[m[m07.11.2021 - 16:15:36.198 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 153/286
[m[m07.11.2021 - 16:15:36.198 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.IterableCSVToBeanTest#readWithIterator
[m[32m07.11.2021 - 16:15:36.198 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.IterableCSVToBeanTest#readWithIterator.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.IterableCSVToBeanTest#readWithIterator
[m[m07.11.2021 - 16:15:36.462 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:36.462 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.IterableCSVToBeanTest#readWithIterator.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.IterableCSVToBeanTest#readWithIterator/report.xml
[m[m07.11.2021 - 16:15:36.693 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.IterableCSVToBeanTest#readWithIterator was generated successfully
[m[m07.11.2021 - 16:15:36.693 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 154/286
[m[m07.11.2021 - 16:15:36.694 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.IterableCSVToBeanTest#readWithIteratorAndFilter
[m[32m07.11.2021 - 16:15:36.694 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.IterableCSVToBeanTest#readWithIteratorAndFilter.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.IterableCSVToBeanTest#readWithIteratorAndFilter
[m[m07.11.2021 - 16:15:36.955 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:36.955 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.IterableCSVToBeanTest#readWithIteratorAndFilter.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.IterableCSVToBeanTest#readWithIteratorAndFilter/report.xml
[m[m07.11.2021 - 16:15:37.213 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.IterableCSVToBeanTest#readWithIteratorAndFilter was generated successfully
[m[m07.11.2021 - 16:15:37.213 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 155/286
[m[m07.11.2021 - 16:15:37.213 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.OpencsvTest#testWriteRead
[m[32m07.11.2021 - 16:15:37.213 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.OpencsvTest#testWriteRead.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.OpencsvTest#testWriteRead
[m[m07.11.2021 - 16:15:37.407 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:37.407 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.OpencsvTest#testWriteRead.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.OpencsvTest#testWriteRead/report.xml
[m[m07.11.2021 - 16:15:37.662 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.OpencsvTest#testWriteRead was generated successfully
[m[m07.11.2021 - 16:15:37.662 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 156/286
[m[m07.11.2021 - 16:15:37.662 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#testParse
[m[32m07.11.2021 - 16:15:37.663 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#testParse.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#testParse
[m[m07.11.2021 - 16:15:37.901 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:37.932 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#testParse.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#testParse/report.xml
[m[m07.11.2021 - 16:15:38.217 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#testParse was generated successfully
[m[m07.11.2021 - 16:15:38.217 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 157/286
[m[m07.11.2021 - 16:15:38.217 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#getColumnNameReturnsNullIfColumnNumberIsTooLarge
[m[32m07.11.2021 - 16:15:38.217 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#getColumnNameReturnsNullIfColumnNumberIsTooLarge.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#getColumnNameReturnsNullIfColumnNumberIsTooLarge
[m[m07.11.2021 - 16:15:38.499 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:38.499 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#getColumnNameReturnsNullIfColumnNumberIsTooLarge.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#getColumnNameReturnsNullIfColumnNumberIsTooLarge/report.xml
[m[m07.11.2021 - 16:15:38.762 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#getColumnNameReturnsNullIfColumnNumberIsTooLarge was generated successfully
[m[m07.11.2021 - 16:15:38.762 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 158/286
[m[m07.11.2021 - 16:15:38.763 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#columnNameMappingShouldBeCaseInsensitive
[m[32m07.11.2021 - 16:15:38.763 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#columnNameMappingShouldBeCaseInsensitive.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#columnNameMappingShouldBeCaseInsensitive
[m[m07.11.2021 - 16:15:39.016 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:39.017 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#columnNameMappingShouldBeCaseInsensitive.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#columnNameMappingShouldBeCaseInsensitive/report.xml
[m[m07.11.2021 - 16:15:39.263 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#columnNameMappingShouldBeCaseInsensitive was generated successfully
[m[m07.11.2021 - 16:15:39.264 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 159/286
[m[m07.11.2021 - 16:15:39.264 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#correctlyParseNullString
[m[32m07.11.2021 - 16:15:39.264 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#correctlyParseNullString.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#correctlyParseNullString
[m[m07.11.2021 - 16:15:39.453 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:39.454 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#correctlyParseNullString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#correctlyParseNullString/report.xml
[m[m07.11.2021 - 16:15:39.690 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#correctlyParseNullString was generated successfully
[m[m07.11.2021 - 16:15:39.690 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 160/286
[m[m07.11.2021 - 16:15:39.690 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#correctlyParserNullObject
[m[32m07.11.2021 - 16:15:39.691 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#correctlyParserNullObject.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#correctlyParserNullObject
[m[m07.11.2021 - 16:15:39.915 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:39.915 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#correctlyParserNullObject.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#correctlyParserNullObject/report.xml
[m[m07.11.2021 - 16:15:40.163 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#correctlyParserNullObject was generated successfully
[m[m07.11.2021 - 16:15:40.164 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 161/286
[m[m07.11.2021 - 16:15:40.164 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testParseLine
[m[32m07.11.2021 - 16:15:40.164 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testParseLine.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testParseLine
[m[m07.11.2021 - 16:15:40.372 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:40.373 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testParseLine.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testParseLine/report.xml
[m[m07.11.2021 - 16:15:40.640 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testParseLine was generated successfully
[m[m07.11.2021 - 16:15:40.640 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 162/286
[m[m07.11.2021 - 16:15:40.641 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testSpecialCharacters
[m[32m07.11.2021 - 16:15:40.641 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testSpecialCharacters.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testSpecialCharacters
[m[m07.11.2021 - 16:15:40.842 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:40.842 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testSpecialCharacters.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testSpecialCharacters/report.xml
[m[m07.11.2021 - 16:15:41.139 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testSpecialCharacters was generated successfully
[m[m07.11.2021 - 16:15:41.139 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 163/286
[m[m07.11.2021 - 16:15:41.139 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#parseLineWithBothEscapeAndQuoteChar
[m[32m07.11.2021 - 16:15:41.139 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#parseLineWithBothEscapeAndQuoteChar.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#parseLineWithBothEscapeAndQuoteChar
[m[m07.11.2021 - 16:15:41.350 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:41.350 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#parseLineWithBothEscapeAndQuoteChar.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#parseLineWithBothEscapeAndQuoteChar/report.xml
[m[m07.11.2021 - 16:15:41.598 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#parseLineWithBothEscapeAndQuoteChar was generated successfully
[m[m07.11.2021 - 16:15:41.598 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 164/286
[m[m07.11.2021 - 16:15:41.598 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testParseLineWithNoEscapeChar
[m[32m07.11.2021 - 16:15:41.598 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testParseLineWithNoEscapeChar.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testParseLineWithNoEscapeChar
[m[m07.11.2021 - 16:15:41.811 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:41.811 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testParseLineWithNoEscapeChar.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testParseLineWithNoEscapeChar/report.xml
[m[m07.11.2021 - 16:15:42.072 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testParseLineWithNoEscapeChar was generated successfully
[m[m07.11.2021 - 16:15:42.072 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 165/286
[m[m07.11.2021 - 16:15:42.072 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#parseLineWithNoEscapeCharAndQuotes
[m[32m07.11.2021 - 16:15:42.073 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#parseLineWithNoEscapeCharAndQuotes.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#parseLineWithNoEscapeCharAndQuotes
[m[m07.11.2021 - 16:15:42.289 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:42.289 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#parseLineWithNoEscapeCharAndQuotes.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#parseLineWithNoEscapeCharAndQuotes/report.xml
[m[m07.11.2021 - 16:15:42.552 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#parseLineWithNoEscapeCharAndQuotes was generated successfully
[m[m07.11.2021 - 16:15:42.552 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 166/286
[m[m07.11.2021 - 16:15:42.552 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testWriteAllAsList
[m[32m07.11.2021 - 16:15:42.553 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testWriteAllAsList.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testWriteAllAsList
[m[m07.11.2021 - 16:15:42.766 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:42.766 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testWriteAllAsList.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testWriteAllAsList/report.xml
[m[m07.11.2021 - 16:15:43.024 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testWriteAllAsList was generated successfully
[m[m07.11.2021 - 16:15:43.024 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 167/286
[m[m07.11.2021 - 16:15:43.024 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testWriteAllAsIterable
[m[32m07.11.2021 - 16:15:43.024 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testWriteAllAsIterable.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testWriteAllAsIterable
[m[m07.11.2021 - 16:15:43.290 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:43.291 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testWriteAllAsIterable.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testWriteAllAsIterable/report.xml
[m[m07.11.2021 - 16:15:43.547 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testWriteAllAsIterable was generated successfully
[m[m07.11.2021 - 16:15:43.547 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 168/286
[m[m07.11.2021 - 16:15:43.547 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testWriteAllObjects
[m[32m07.11.2021 - 16:15:43.547 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testWriteAllObjects.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testWriteAllObjects
[m[m07.11.2021 - 16:15:43.749 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:43.749 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testWriteAllObjects.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testWriteAllObjects/report.xml
[m[m07.11.2021 - 16:15:44.115 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testWriteAllObjects was generated successfully
[m[m07.11.2021 - 16:15:44.115 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 169/286
[m[m07.11.2021 - 16:15:44.115 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testNoQuoteChars
[m[32m07.11.2021 - 16:15:44.115 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testNoQuoteChars.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testNoQuoteChars
[m[m07.11.2021 - 16:15:44.320 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:44.320 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testNoQuoteChars.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testNoQuoteChars/report.xml
[m[m07.11.2021 - 16:15:44.576 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testNoQuoteChars was generated successfully
[m[m07.11.2021 - 16:15:44.576 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 170/286
[m[m07.11.2021 - 16:15:44.576 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testNoQuoteCharsAndNoEscapeChars
[m[32m07.11.2021 - 16:15:44.576 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testNoQuoteCharsAndNoEscapeChars.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testNoQuoteCharsAndNoEscapeChars
[m[m07.11.2021 - 16:15:44.791 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:44.791 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testNoQuoteCharsAndNoEscapeChars.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testNoQuoteCharsAndNoEscapeChars/report.xml
[m[m07.11.2021 - 16:15:45.033 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testNoQuoteCharsAndNoEscapeChars was generated successfully
[m[m07.11.2021 - 16:15:45.033 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 171/286
[m[m07.11.2021 - 16:15:45.033 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testIntelligentQuotes
[m[32m07.11.2021 - 16:15:45.033 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testIntelligentQuotes.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testIntelligentQuotes
[m[m07.11.2021 - 16:15:45.286 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:45.286 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testIntelligentQuotes.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testIntelligentQuotes/report.xml
[m[m07.11.2021 - 16:15:45.540 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testIntelligentQuotes was generated successfully
[m[m07.11.2021 - 16:15:45.540 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 172/286
[m[m07.11.2021 - 16:15:45.540 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testNullValues
[m[32m07.11.2021 - 16:15:45.540 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testNullValues.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testNullValues
[m[m07.11.2021 - 16:15:45.736 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:45.736 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testNullValues.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testNullValues/report.xml
[m[m07.11.2021 - 16:15:45.985 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testNullValues was generated successfully
[m[m07.11.2021 - 16:15:45.985 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 173/286
[m[m07.11.2021 - 16:15:45.985 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testStreamFlushing
[m[32m07.11.2021 - 16:15:45.985 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testStreamFlushing.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testStreamFlushing
[m[m07.11.2021 - 16:15:46.191 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:46.191 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testStreamFlushing.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testStreamFlushing/report.xml
[m[m07.11.2021 - 16:15:46.443 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testStreamFlushing was generated successfully
[m[m07.11.2021 - 16:15:46.444 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 174/286
[m[m07.11.2021 - 16:15:46.444 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#flushWillThrowIOException
[m[32m07.11.2021 - 16:15:46.444 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#flushWillThrowIOException.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#flushWillThrowIOException
[m[m07.11.2021 - 16:15:46.649 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:46.650 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#flushWillThrowIOException.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#flushWillThrowIOException/report.xml
[m[m07.11.2021 - 16:15:46.930 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#flushWillThrowIOException was generated successfully
[m[m07.11.2021 - 16:15:46.930 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 175/286
[m[m07.11.2021 - 16:15:46.930 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#flushQuietlyWillNotThrowException
[m[32m07.11.2021 - 16:15:46.930 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#flushQuietlyWillNotThrowException.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#flushQuietlyWillNotThrowException
[m[m07.11.2021 - 16:15:47.154 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:47.154 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#flushQuietlyWillNotThrowException.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#flushQuietlyWillNotThrowException/report.xml
[m[m07.11.2021 - 16:15:47.393 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#flushQuietlyWillNotThrowException was generated successfully
[m[m07.11.2021 - 16:15:47.393 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 176/286
[m[m07.11.2021 - 16:15:47.393 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testAlternateEscapeChar
[m[32m07.11.2021 - 16:15:47.393 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testAlternateEscapeChar.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testAlternateEscapeChar
[m[m07.11.2021 - 16:15:47.604 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:47.605 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testAlternateEscapeChar.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testAlternateEscapeChar/report.xml
[m[m07.11.2021 - 16:15:47.870 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testAlternateEscapeChar was generated successfully
[m[m07.11.2021 - 16:15:47.870 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 177/286
[m[m07.11.2021 - 16:15:47.870 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#embeddedQuoteInString
[m[32m07.11.2021 - 16:15:47.870 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#embeddedQuoteInString.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#embeddedQuoteInString
[m[m07.11.2021 - 16:15:48.096 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:48.096 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#embeddedQuoteInString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#embeddedQuoteInString/report.xml
[m[m07.11.2021 - 16:15:48.355 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#embeddedQuoteInString was generated successfully
[m[m07.11.2021 - 16:15:48.355 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 178/286
[m[m07.11.2021 - 16:15:48.355 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testNoQuotingNoEscaping
[m[32m07.11.2021 - 16:15:48.356 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testNoQuotingNoEscaping.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testNoQuotingNoEscaping
[m[m07.11.2021 - 16:15:48.595 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:48.595 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testNoQuotingNoEscaping.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testNoQuotingNoEscaping/report.xml
[m[m07.11.2021 - 16:15:48.888 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testNoQuotingNoEscaping was generated successfully
[m[m07.11.2021 - 16:15:48.888 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 179/286
[m[m07.11.2021 - 16:15:48.888 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testNestedQuotes
[m[32m07.11.2021 - 16:15:48.888 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testNestedQuotes.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testNestedQuotes
[m[m07.11.2021 - 16:15:49.168 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:49.168 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testNestedQuotes.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testNestedQuotes/report.xml
[m[m07.11.2021 - 16:15:49.467 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testNestedQuotes was generated successfully
[m[m07.11.2021 - 16:15:49.467 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 180/286
[m[m07.11.2021 - 16:15:49.467 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testAlternateLineFeeds
[m[32m07.11.2021 - 16:15:49.467 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testAlternateLineFeeds.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testAlternateLineFeeds
[m[m07.11.2021 - 16:15:49.665 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:49.665 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testAlternateLineFeeds.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testAlternateLineFeeds/report.xml
[m[m07.11.2021 - 16:15:49.918 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testAlternateLineFeeds was generated successfully
[m[m07.11.2021 - 16:15:49.918 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 181/286
[m[m07.11.2021 - 16:15:49.918 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testResultSetWithHeaders
[m[32m07.11.2021 - 16:15:49.918 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testResultSetWithHeaders.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testResultSetWithHeaders
[m[m07.11.2021 - 16:15:50.244 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:50.245 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testResultSetWithHeaders.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testResultSetWithHeaders/report.xml
[m[m07.11.2021 - 16:15:50.500 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testResultSetWithHeaders was generated successfully
[m[m07.11.2021 - 16:15:50.500 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 182/286
[m[m07.11.2021 - 16:15:50.500 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testMultiLineResultSetWithHeaders
[m[32m07.11.2021 - 16:15:50.500 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testMultiLineResultSetWithHeaders.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testMultiLineResultSetWithHeaders
[m[m07.11.2021 - 16:15:50.811 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:50.811 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testMultiLineResultSetWithHeaders.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testMultiLineResultSetWithHeaders/report.xml
[m[m07.11.2021 - 16:15:51.065 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testMultiLineResultSetWithHeaders was generated successfully
[m[m07.11.2021 - 16:15:51.066 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 183/286
[m[m07.11.2021 - 16:15:51.066 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testResultSetWithoutHeaders
[m[32m07.11.2021 - 16:15:51.066 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testResultSetWithoutHeaders.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testResultSetWithoutHeaders
[m[m07.11.2021 - 16:15:51.393 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:51.393 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testResultSetWithoutHeaders.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testResultSetWithoutHeaders/report.xml
[m[m07.11.2021 - 16:15:51.650 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testResultSetWithoutHeaders was generated successfully
[m[m07.11.2021 - 16:15:51.650 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 184/286
[m[m07.11.2021 - 16:15:51.650 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testMultiLineResultSetWithoutHeaders
[m[32m07.11.2021 - 16:15:51.650 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testMultiLineResultSetWithoutHeaders.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testMultiLineResultSetWithoutHeaders
[m[m07.11.2021 - 16:15:51.950 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:51.950 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testMultiLineResultSetWithoutHeaders.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testMultiLineResultSetWithoutHeaders/report.xml
[m[m07.11.2021 - 16:15:52.240 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testMultiLineResultSetWithoutHeaders was generated successfully
[m[m07.11.2021 - 16:15:52.240 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 185/286
[m[m07.11.2021 - 16:15:52.240 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testResultSetTrim
[m[32m07.11.2021 - 16:15:52.240 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testResultSetTrim.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testResultSetTrim
[m[m07.11.2021 - 16:15:52.554 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:52.554 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testResultSetTrim.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testResultSetTrim/report.xml
[m[m07.11.2021 - 16:15:52.809 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testResultSetTrim was generated successfully
[m[m07.11.2021 - 16:15:52.809 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 186/286
[m[m07.11.2021 - 16:15:52.809 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#needToSetBothQuoteAndEscapeCharIfYouWantThemToBeTheSame
[m[32m07.11.2021 - 16:15:52.809 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#needToSetBothQuoteAndEscapeCharIfYouWantThemToBeTheSame.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#needToSetBothQuoteAndEscapeCharIfYouWantThemToBeTheSame
[m[m07.11.2021 - 16:15:53.145 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:53.145 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#needToSetBothQuoteAndEscapeCharIfYouWantThemToBeTheSame.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#needToSetBothQuoteAndEscapeCharIfYouWantThemToBeTheSame/report.xml
[m[m07.11.2021 - 16:15:53.421 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#needToSetBothQuoteAndEscapeCharIfYouWantThemToBeTheSame was generated successfully
[m[m07.11.2021 - 16:15:53.422 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 187/286
[m[m07.11.2021 - 16:15:53.422 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#issue123SeparatorEscapedWhenQuoteIsNoQuoteChar
[m[32m07.11.2021 - 16:15:53.422 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#issue123SeparatorEscapedWhenQuoteIsNoQuoteChar.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#issue123SeparatorEscapedWhenQuoteIsNoQuoteChar
[m[m07.11.2021 - 16:15:53.609 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:53.610 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#issue123SeparatorEscapedWhenQuoteIsNoQuoteChar.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#issue123SeparatorEscapedWhenQuoteIsNoQuoteChar/report.xml
[m[m07.11.2021 - 16:15:53.892 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#issue123SeparatorEscapedWhenQuoteIsNoQuoteChar was generated successfully
[m[m07.11.2021 - 16:15:53.892 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 188/286
[m[m07.11.2021 - 16:15:53.892 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#issue123SeparatorEscapedWhenQuoteIsNoQuoteCharSpecifingNoneDefaultEscapeChar
[m[32m07.11.2021 - 16:15:53.893 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#issue123SeparatorEscapedWhenQuoteIsNoQuoteCharSpecifingNoneDefaultEscapeChar.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#issue123SeparatorEscapedWhenQuoteIsNoQuoteCharSpecifingNoneDefaultEscapeChar
[m[m07.11.2021 - 16:15:54.093 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:54.093 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#issue123SeparatorEscapedWhenQuoteIsNoQuoteCharSpecifingNoneDefaultEscapeChar.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#issue123SeparatorEscapedWhenQuoteIsNoQuoteCharSpecifingNoneDefaultEscapeChar/report.xml
[m[m07.11.2021 - 16:15:54.343 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#issue123SeparatorEscapedWhenQuoteIsNoQuoteCharSpecifingNoneDefaultEscapeChar was generated successfully
[m[m07.11.2021 - 16:15:54.343 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 189/286
[m[m07.11.2021 - 16:15:54.343 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testIOException
[m[32m07.11.2021 - 16:15:54.343 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testIOException.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testIOException
[m[m07.11.2021 - 16:15:54.606 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:54.606 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testIOException.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#testIOException/report.xml
[m[m07.11.2021 - 16:15:54.856 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testIOException was generated successfully
[m[m07.11.2021 - 16:15:54.856 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 190/286
[m[m07.11.2021 - 16:15:54.856 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#checkErrorReturnsTrueWhenPassedInPrintWriter
[m[32m07.11.2021 - 16:15:54.856 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#checkErrorReturnsTrueWhenPassedInPrintWriter.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#checkErrorReturnsTrueWhenPassedInPrintWriter
[m[m07.11.2021 - 16:15:55.121 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:55.121 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#checkErrorReturnsTrueWhenPassedInPrintWriter.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVWriterTest#checkErrorReturnsTrueWhenPassedInPrintWriter/report.xml
[m[m07.11.2021 - 16:15:55.405 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#checkErrorReturnsTrueWhenPassedInPrintWriter was generated successfully
[m[m07.11.2021 - 16:15:55.405 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 191/286
[m[m07.11.2021 - 16:15:55.405 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenExceptionIsThrown
[m[32m07.11.2021 - 16:15:55.405 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenExceptionIsThrown.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenExceptionIsThrown
[m[m07.11.2021 - 16:15:55.628 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:55.628 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenExceptionIsThrown.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenExceptionIsThrown/report.xml
[m[m07.11.2021 - 16:15:55.888 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenExceptionIsThrown was generated successfully
[m[m07.11.2021 - 16:15:55.889 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 192/286
[m[m07.11.2021 - 16:15:55.889 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionLineWhenExceptionIsThrown
[m[32m07.11.2021 - 16:15:55.889 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionLineWhenExceptionIsThrown.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionLineWhenExceptionIsThrown
[m[m07.11.2021 - 16:15:56.108 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:56.109 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionLineWhenExceptionIsThrown.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionLineWhenExceptionIsThrown/report.xml
[m[m07.11.2021 - 16:15:56.365 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionLineWhenExceptionIsThrown was generated successfully
[m[m07.11.2021 - 16:15:56.365 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 193/286
[m[m07.11.2021 - 16:15:56.365 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanTest#parseBeanWithNoAnnotations
[m[32m07.11.2021 - 16:15:56.365 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#parseBeanWithNoAnnotations.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanTest#parseBeanWithNoAnnotations
[m[m07.11.2021 - 16:15:56.644 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:56.644 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#parseBeanWithNoAnnotations.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#parseBeanWithNoAnnotations/report.xml
[m[m07.11.2021 - 16:15:56.912 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanTest#parseBeanWithNoAnnotations was generated successfully
[m[m07.11.2021 - 16:15:56.912 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 194/286
[m[m07.11.2021 - 16:15:56.912 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanTest#parseBeanWithAnnotations
[m[32m07.11.2021 - 16:15:56.912 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#parseBeanWithAnnotations.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanTest#parseBeanWithAnnotations
[m[m07.11.2021 - 16:15:57.206 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:57.206 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#parseBeanWithAnnotations.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#parseBeanWithAnnotations/report.xml
[m[m07.11.2021 - 16:15:57.465 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanTest#parseBeanWithAnnotations was generated successfully
[m[m07.11.2021 - 16:15:57.465 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 195/286
[m[m07.11.2021 - 16:15:57.465 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanTest#parseBeanWithSomeAnnotations
[m[32m07.11.2021 - 16:15:57.466 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#parseBeanWithSomeAnnotations.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanTest#parseBeanWithSomeAnnotations
[m[m07.11.2021 - 16:15:57.741 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:57.742 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#parseBeanWithSomeAnnotations.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#parseBeanWithSomeAnnotations/report.xml
[m[m07.11.2021 - 16:15:58.044 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanTest#parseBeanWithSomeAnnotations was generated successfully
[m[m07.11.2021 - 16:15:58.044 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 196/286
[m[m07.11.2021 - 16:15:58.044 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithAllValidDataTypes
[m[32m07.11.2021 - 16:15:58.044 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithAllValidDataTypes.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithAllValidDataTypes
[m[m07.11.2021 - 16:15:58.340 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:58.340 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithAllValidDataTypes.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithAllValidDataTypes/report.xml
[m[m07.11.2021 - 16:15:58.585 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithAllValidDataTypes was generated successfully
[m[m07.11.2021 - 16:15:58.585 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 197/286
[m[m07.11.2021 - 16:15:58.585 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithPrivateField
[m[32m07.11.2021 - 16:15:58.585 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithPrivateField.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithPrivateField
[m[m07.11.2021 - 16:15:58.868 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:58.868 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithPrivateField.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithPrivateField/report.xml
[m[m07.11.2021 - 16:15:59.168 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithPrivateField was generated successfully
[m[m07.11.2021 - 16:15:59.169 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 198/286
[m[m07.11.2021 - 16:15:59.169 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithFieldsOfAllAccessModifierTypes
[m[32m07.11.2021 - 16:15:59.169 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithFieldsOfAllAccessModifierTypes.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithFieldsOfAllAccessModifierTypes
[m[m07.11.2021 - 16:15:59.457 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:15:59.457 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithFieldsOfAllAccessModifierTypes.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithFieldsOfAllAccessModifierTypes/report.xml
[m[m07.11.2021 - 16:15:59.743 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithFieldsOfAllAccessModifierTypes was generated successfully
[m[m07.11.2021 - 16:15:59.743 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 199/286
[m[m07.11.2021 - 16:15:59.743 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanTest#bug133ShouldNotThrowNullPointerExceptionWhenProcessingEmptyWithNoAnnotations
[m[32m07.11.2021 - 16:15:59.743 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#bug133ShouldNotThrowNullPointerExceptionWhenProcessingEmptyWithNoAnnotations.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanTest#bug133ShouldNotThrowNullPointerExceptionWhenProcessingEmptyWithNoAnnotations
[m[m07.11.2021 - 16:16:00.006 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:00.007 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#bug133ShouldNotThrowNullPointerExceptionWhenProcessingEmptyWithNoAnnotations.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#bug133ShouldNotThrowNullPointerExceptionWhenProcessingEmptyWithNoAnnotations/report.xml
[m[m07.11.2021 - 16:16:00.286 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanTest#bug133ShouldNotThrowNullPointerExceptionWhenProcessingEmptyWithNoAnnotations was generated successfully
[m[m07.11.2021 - 16:16:00.286 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 200/286
[m[m07.11.2021 - 16:16:00.287 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenUnsupportedDataTypeUsedInAnnotatedBean
[m[32m07.11.2021 - 16:16:00.287 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenUnsupportedDataTypeUsedInAnnotatedBean.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenUnsupportedDataTypeUsedInAnnotatedBean
[m[m07.11.2021 - 16:16:00.537 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:00.538 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenUnsupportedDataTypeUsedInAnnotatedBean.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenUnsupportedDataTypeUsedInAnnotatedBean/report.xml
[m[m07.11.2021 - 16:16:00.796 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenUnsupportedDataTypeUsedInAnnotatedBean was generated successfully
[m[m07.11.2021 - 16:16:00.796 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 201/286
[m[m07.11.2021 - 16:16:00.796 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenRequiredFieldNotProvidedInAnnotatedBean
[m[32m07.11.2021 - 16:16:00.796 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenRequiredFieldNotProvidedInAnnotatedBean.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenRequiredFieldNotProvidedInAnnotatedBean
[m[m07.11.2021 - 16:16:01.088 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:01.089 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenRequiredFieldNotProvidedInAnnotatedBean.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenRequiredFieldNotProvidedInAnnotatedBean/report.xml
[m[m07.11.2021 - 16:16:01.362 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenRequiredFieldNotProvidedInAnnotatedBean was generated successfully
[m[m07.11.2021 - 16:16:01.362 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 202/286
[m[m07.11.2021 - 16:16:01.362 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenParseWithoutArgumentsIsCalled
[m[32m07.11.2021 - 16:16:01.362 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenParseWithoutArgumentsIsCalled.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenParseWithoutArgumentsIsCalled
[m[m07.11.2021 - 16:16:01.570 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:01.570 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenParseWithoutArgumentsIsCalled.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenParseWithoutArgumentsIsCalled/report.xml
[m[m07.11.2021 - 16:16:01.818 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenParseWithoutArgumentsIsCalled was generated successfully
[m[m07.11.2021 - 16:16:01.818 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 203/286
[m[m07.11.2021 - 16:16:01.818 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenOnlyReaderIsSpecifiedToParseWithoutArguments
[m[32m07.11.2021 - 16:16:01.818 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenOnlyReaderIsSpecifiedToParseWithoutArguments.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenOnlyReaderIsSpecifiedToParseWithoutArguments
[m[m07.11.2021 - 16:16:02.035 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:02.035 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenOnlyReaderIsSpecifiedToParseWithoutArguments.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenOnlyReaderIsSpecifiedToParseWithoutArguments/report.xml
[m[m07.11.2021 - 16:16:02.288 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenOnlyReaderIsSpecifiedToParseWithoutArguments was generated successfully
[m[m07.11.2021 - 16:16:02.288 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 204/286
[m[m07.11.2021 - 16:16:02.288 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenOnlyMapperIsSpecifiedToParseWithoutArguments
[m[32m07.11.2021 - 16:16:02.288 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenOnlyMapperIsSpecifiedToParseWithoutArguments.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenOnlyMapperIsSpecifiedToParseWithoutArguments
[m[m07.11.2021 - 16:16:02.513 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:02.513 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenOnlyMapperIsSpecifiedToParseWithoutArguments.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenOnlyMapperIsSpecifiedToParseWithoutArguments/report.xml
[m[m07.11.2021 - 16:16:02.770 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenOnlyMapperIsSpecifiedToParseWithoutArguments was generated successfully
[m[m07.11.2021 - 16:16:02.770 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 205/286
[m[m07.11.2021 - 16:16:02.770 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenReaderNotProvidedInBuilder
[m[32m07.11.2021 - 16:16:02.770 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenReaderNotProvidedInBuilder.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenReaderNotProvidedInBuilder
[m[m07.11.2021 - 16:16:02.969 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:02.969 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenReaderNotProvidedInBuilder.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenReaderNotProvidedInBuilder/report.xml
[m[m07.11.2021 - 16:16:03.230 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenReaderNotProvidedInBuilder was generated successfully
[m[m07.11.2021 - 16:16:03.230 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 206/286
[m[m07.11.2021 - 16:16:03.230 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenTypeAndMapperNotProvidedInBuilder
[m[32m07.11.2021 - 16:16:03.231 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenTypeAndMapperNotProvidedInBuilder.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenTypeAndMapperNotProvidedInBuilder
[m[m07.11.2021 - 16:16:03.439 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:03.440 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenTypeAndMapperNotProvidedInBuilder.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenTypeAndMapperNotProvidedInBuilder/report.xml
[m[m07.11.2021 - 16:16:03.684 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenTypeAndMapperNotProvidedInBuilder was generated successfully
[m[m07.11.2021 - 16:16:03.684 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 207/286
[m[m07.11.2021 - 16:16:03.684 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanTest#testMinimumBuilder
[m[32m07.11.2021 - 16:16:03.685 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#testMinimumBuilder.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanTest#testMinimumBuilder
[m[m07.11.2021 - 16:16:03.966 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:03.966 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#testMinimumBuilder.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#testMinimumBuilder/report.xml
[m[m07.11.2021 - 16:16:04.217 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanTest#testMinimumBuilder was generated successfully
[m[m07.11.2021 - 16:16:04.217 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 208/286
[m[m07.11.2021 - 16:16:04.218 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanTest#testMaximumBuilder
[m[32m07.11.2021 - 16:16:04.218 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#testMaximumBuilder.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanTest#testMaximumBuilder
[m[m07.11.2021 - 16:16:04.564 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:04.565 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#testMaximumBuilder.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#testMaximumBuilder/report.xml
[m[m07.11.2021 - 16:16:04.821 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanTest#testMaximumBuilder was generated successfully
[m[m07.11.2021 - 16:16:04.822 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 209/286
[m[m07.11.2021 - 16:16:04.822 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanTest#testColumnMappingStrategyWithBuilder
[m[32m07.11.2021 - 16:16:04.822 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#testColumnMappingStrategyWithBuilder.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanTest#testColumnMappingStrategyWithBuilder
[m[m07.11.2021 - 16:16:05.261 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:05.261 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#testColumnMappingStrategyWithBuilder.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#testColumnMappingStrategyWithBuilder/report.xml
[m[m07.11.2021 - 16:16:05.543 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanTest#testColumnMappingStrategyWithBuilder was generated successfully
[m[m07.11.2021 - 16:16:05.543 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 210/286
[m[m07.11.2021 - 16:16:05.543 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanTest#testMappingWithoutAnnotationsWithBuilder
[m[32m07.11.2021 - 16:16:05.543 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#testMappingWithoutAnnotationsWithBuilder.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanTest#testMappingWithoutAnnotationsWithBuilder
[m[m07.11.2021 - 16:16:05.820 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:05.821 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#testMappingWithoutAnnotationsWithBuilder.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.CsvToBeanTest#testMappingWithoutAnnotationsWithBuilder/report.xml
[m[m07.11.2021 - 16:16:06.105 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanTest#testMappingWithoutAnnotationsWithBuilder was generated successfully
[m[m07.11.2021 - 16:16:06.105 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 211/286
[m[m07.11.2021 - 16:16:06.105 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#canPrintColumnNames
[m[32m07.11.2021 - 16:16:06.105 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#canPrintColumnNames.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#canPrintColumnNames
[m[m07.11.2021 - 16:16:06.416 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:06.417 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#canPrintColumnNames.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#canPrintColumnNames/report.xml
[m[m07.11.2021 - 16:16:06.672 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#canPrintColumnNames was generated successfully
[m[m07.11.2021 - 16:16:06.672 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 212/286
[m[m07.11.2021 - 16:16:06.672 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#getObjectFromResultSet
[m[32m07.11.2021 - 16:16:06.672 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getObjectFromResultSet.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#getObjectFromResultSet
[m[m07.11.2021 - 16:16:06.979 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:06.980 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getObjectFromResultSet.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getObjectFromResultSet/report.xml
[m[m07.11.2021 - 16:16:07.242 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#getObjectFromResultSet was generated successfully
[m[m07.11.2021 - 16:16:07.243 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 213/286
[m[m07.11.2021 - 16:16:07.243 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#getBitFromResultSet
[m[32m07.11.2021 - 16:16:07.243 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getBitFromResultSet.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#getBitFromResultSet
[m[m07.11.2021 - 16:16:07.532 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:07.532 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getBitFromResultSet.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getBitFromResultSet/report.xml
[m[m07.11.2021 - 16:16:07.785 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#getBitFromResultSet was generated successfully
[m[m07.11.2021 - 16:16:07.785 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 214/286
[m[m07.11.2021 - 16:16:07.785 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#getBooleanFromResultSet
[m[32m07.11.2021 - 16:16:07.785 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getBooleanFromResultSet.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#getBooleanFromResultSet
[m[m07.11.2021 - 16:16:08.157 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:08.157 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getBooleanFromResultSet.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getBooleanFromResultSet/report.xml
[m[m07.11.2021 - 16:16:08.456 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#getBooleanFromResultSet was generated successfully
[m[m07.11.2021 - 16:16:08.456 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 215/286
[m[m07.11.2021 - 16:16:08.456 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#getBigIntFromResultSet
[m[32m07.11.2021 - 16:16:08.456 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getBigIntFromResultSet.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#getBigIntFromResultSet
[m[m07.11.2021 - 16:16:08.768 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:08.768 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getBigIntFromResultSet.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getBigIntFromResultSet/report.xml
[m[m07.11.2021 - 16:16:09.037 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#getBigIntFromResultSet was generated successfully
[m[m07.11.2021 - 16:16:09.037 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 216/286
[m[m07.11.2021 - 16:16:09.037 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#getBigDecimalFromResultSet
[m[32m07.11.2021 - 16:16:09.037 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getBigDecimalFromResultSet.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#getBigDecimalFromResultSet
[m[m07.11.2021 - 16:16:09.338 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:09.338 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getBigDecimalFromResultSet.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getBigDecimalFromResultSet/report.xml
[m[m07.11.2021 - 16:16:09.605 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#getBigDecimalFromResultSet was generated successfully
[m[m07.11.2021 - 16:16:09.606 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 217/286
[m[m07.11.2021 - 16:16:09.606 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#issue121ConvertingNaNForDoubleOrFloat
[m[32m07.11.2021 - 16:16:09.606 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#issue121ConvertingNaNForDoubleOrFloat.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#issue121ConvertingNaNForDoubleOrFloat
[m[m07.11.2021 - 16:16:09.941 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:09.941 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#issue121ConvertingNaNForDoubleOrFloat.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#issue121ConvertingNaNForDoubleOrFloat/report.xml
[m[m07.11.2021 - 16:16:10.184 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#issue121ConvertingNaNForDoubleOrFloat was generated successfully
[m[m07.11.2021 - 16:16:10.185 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 218/286
[m[m07.11.2021 - 16:16:10.185 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#issue121ConvertingPositiveInfinityForDoubleOrFloat
[m[32m07.11.2021 - 16:16:10.185 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#issue121ConvertingPositiveInfinityForDoubleOrFloat.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#issue121ConvertingPositiveInfinityForDoubleOrFloat
[m[m07.11.2021 - 16:16:10.511 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:10.511 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#issue121ConvertingPositiveInfinityForDoubleOrFloat.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#issue121ConvertingPositiveInfinityForDoubleOrFloat/report.xml
[m[m07.11.2021 - 16:16:10.774 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#issue121ConvertingPositiveInfinityForDoubleOrFloat was generated successfully
[m[m07.11.2021 - 16:16:10.774 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 219/286
[m[m07.11.2021 - 16:16:10.774 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#issue121ConvertingNegativeInfinityForDoubleOrFloat
[m[32m07.11.2021 - 16:16:10.774 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#issue121ConvertingNegativeInfinityForDoubleOrFloat.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#issue121ConvertingNegativeInfinityForDoubleOrFloat
[m[m07.11.2021 - 16:16:11.096 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:11.096 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#issue121ConvertingNegativeInfinityForDoubleOrFloat.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#issue121ConvertingNegativeInfinityForDoubleOrFloat/report.xml
[m[m07.11.2021 - 16:16:11.388 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#issue121ConvertingNegativeInfinityForDoubleOrFloat was generated successfully
[m[m07.11.2021 - 16:16:11.388 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 220/286
[m[m07.11.2021 - 16:16:11.389 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#getIntegerFromResultSet
[m[32m07.11.2021 - 16:16:11.389 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getIntegerFromResultSet.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#getIntegerFromResultSet
[m[m07.11.2021 - 16:16:11.700 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:11.700 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getIntegerFromResultSet.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getIntegerFromResultSet/report.xml
[m[m07.11.2021 - 16:16:11.962 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#getIntegerFromResultSet was generated successfully
[m[m07.11.2021 - 16:16:11.962 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 221/286
[m[m07.11.2021 - 16:16:11.963 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#getCharFromResultSet
[m[32m07.11.2021 - 16:16:11.963 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getCharFromResultSet.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#getCharFromResultSet
[m[m07.11.2021 - 16:16:12.251 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:12.251 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getCharFromResultSet.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getCharFromResultSet/report.xml
[m[m07.11.2021 - 16:16:12.521 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#getCharFromResultSet was generated successfully
[m[m07.11.2021 - 16:16:12.522 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 222/286
[m[m07.11.2021 - 16:16:12.522 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#getCharHandlesNulls
[m[32m07.11.2021 - 16:16:12.522 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getCharHandlesNulls.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#getCharHandlesNulls
[m[m07.11.2021 - 16:16:12.842 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:12.842 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getCharHandlesNulls.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getCharHandlesNulls/report.xml
[m[m07.11.2021 - 16:16:13.226 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#getCharHandlesNulls was generated successfully
[m[m07.11.2021 - 16:16:13.226 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 223/286
[m[m07.11.2021 - 16:16:13.227 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#getUnsupportedFromResultSet
[m[32m07.11.2021 - 16:16:13.227 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getUnsupportedFromResultSet.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#getUnsupportedFromResultSet
[m[m07.11.2021 - 16:16:13.582 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:13.582 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getUnsupportedFromResultSet.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getUnsupportedFromResultSet/report.xml
[m[m07.11.2021 - 16:16:13.864 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#getUnsupportedFromResultSet was generated successfully
[m[m07.11.2021 - 16:16:13.864 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 224/286
[m[m07.11.2021 - 16:16:13.864 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#getDateFromResultSet
[m[32m07.11.2021 - 16:16:13.864 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getDateFromResultSet.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#getDateFromResultSet
[m[m07.11.2021 - 16:16:14.189 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:14.189 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getDateFromResultSet.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getDateFromResultSet/report.xml
[m[m07.11.2021 - 16:16:14.475 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#getDateFromResultSet was generated successfully
[m[m07.11.2021 - 16:16:14.475 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 225/286
[m[m07.11.2021 - 16:16:14.475 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#getDateFromResultSetUsingCustomFormat
[m[32m07.11.2021 - 16:16:14.475 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getDateFromResultSetUsingCustomFormat.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#getDateFromResultSetUsingCustomFormat
[m[m07.11.2021 - 16:16:14.796 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:14.797 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getDateFromResultSetUsingCustomFormat.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getDateFromResultSetUsingCustomFormat/report.xml
[m[m07.11.2021 - 16:16:15.048 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#getDateFromResultSetUsingCustomFormat was generated successfully
[m[m07.11.2021 - 16:16:15.048 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 226/286
[m[m07.11.2021 - 16:16:15.048 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#setDateFormat
[m[32m07.11.2021 - 16:16:15.048 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#setDateFormat.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#setDateFormat
[m[m07.11.2021 - 16:16:15.390 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:15.390 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#setDateFormat.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#setDateFormat/report.xml
[m[m07.11.2021 - 16:16:15.665 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#setDateFormat was generated successfully
[m[m07.11.2021 - 16:16:15.665 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 227/286
[m[m07.11.2021 - 16:16:15.665 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#getTimeFromResultSet
[m[32m07.11.2021 - 16:16:15.666 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getTimeFromResultSet.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#getTimeFromResultSet
[m[m07.11.2021 - 16:16:15.984 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:15.984 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getTimeFromResultSet.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getTimeFromResultSet/report.xml
[m[m07.11.2021 - 16:16:16.292 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#getTimeFromResultSet was generated successfully
[m[m07.11.2021 - 16:16:16.292 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 228/286
[m[m07.11.2021 - 16:16:16.292 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#getTimestampFromResultSet
[m[32m07.11.2021 - 16:16:16.292 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getTimestampFromResultSet.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#getTimestampFromResultSet
[m[m07.11.2021 - 16:16:16.669 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:16.670 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getTimestampFromResultSet.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getTimestampFromResultSet/report.xml
[m[m07.11.2021 - 16:16:16.967 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#getTimestampFromResultSet was generated successfully
[m[m07.11.2021 - 16:16:16.968 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 229/286
[m[m07.11.2021 - 16:16:16.968 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#getTimestampFromResultSetWithCustomFormat
[m[32m07.11.2021 - 16:16:16.968 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getTimestampFromResultSetWithCustomFormat.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#getTimestampFromResultSetWithCustomFormat
[m[m07.11.2021 - 16:16:17.333 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:17.333 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getTimestampFromResultSetWithCustomFormat.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getTimestampFromResultSetWithCustomFormat/report.xml
[m[m07.11.2021 - 16:16:17.592 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#getTimestampFromResultSetWithCustomFormat was generated successfully
[m[m07.11.2021 - 16:16:17.592 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 230/286
[m[m07.11.2021 - 16:16:17.592 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#setDateTimeFormat
[m[32m07.11.2021 - 16:16:17.592 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#setDateTimeFormat.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#setDateTimeFormat
[m[m07.11.2021 - 16:16:17.923 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:17.923 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#setDateTimeFormat.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#setDateTimeFormat/report.xml
[m[m07.11.2021 - 16:16:18.256 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#setDateTimeFormat was generated successfully
[m[m07.11.2021 - 16:16:18.256 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 231/286
[m[m07.11.2021 - 16:16:18.256 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#getClobFromResultSet
[m[32m07.11.2021 - 16:16:18.256 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getClobFromResultSet.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#getClobFromResultSet
[m[m07.11.2021 - 16:16:18.601 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:18.601 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getClobFromResultSet.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getClobFromResultSet/report.xml
[m[m07.11.2021 - 16:16:18.865 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#getClobFromResultSet was generated successfully
[m[m07.11.2021 - 16:16:18.865 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 232/286
[m[m07.11.2021 - 16:16:18.865 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#getEmptyClobFromResultSet
[m[32m07.11.2021 - 16:16:18.865 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getEmptyClobFromResultSet.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#getEmptyClobFromResultSet
[m[m07.11.2021 - 16:16:19.171 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:19.171 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getEmptyClobFromResultSet.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getEmptyClobFromResultSet/report.xml
[m[m07.11.2021 - 16:16:19.446 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#getEmptyClobFromResultSet was generated successfully
[m[m07.11.2021 - 16:16:19.446 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 233/286
[m[m07.11.2021 - 16:16:19.446 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#getLargeClobFromResultSet
[m[32m07.11.2021 - 16:16:19.446 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getLargeClobFromResultSet.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#getLargeClobFromResultSet
[m[m07.11.2021 - 16:16:19.769 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:19.769 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getLargeClobFromResultSet.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetHelperServiceTest#getLargeClobFromResultSet/report.xml
[m[m07.11.2021 - 16:16:20.009 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#getLargeClobFromResultSet was generated successfully
[m[m07.11.2021 - 16:16:20.009 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 234/286
[m[m07.11.2021 - 16:16:20.009 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.UniCodeTest#canParseUnicode
[m[32m07.11.2021 - 16:16:20.009 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.UniCodeTest#canParseUnicode.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.UniCodeTest#canParseUnicode
[m[m07.11.2021 - 16:16:20.215 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:20.216 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.UniCodeTest#canParseUnicode.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.UniCodeTest#canParseUnicode/report.xml
[m[m07.11.2021 - 16:16:20.511 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.UniCodeTest#canParseUnicode was generated successfully
[m[m07.11.2021 - 16:16:20.511 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 235/286
[m[m07.11.2021 - 16:16:20.511 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.UniCodeTest#readerTest
[m[32m07.11.2021 - 16:16:20.512 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.UniCodeTest#readerTest.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.UniCodeTest#readerTest
[m[m07.11.2021 - 16:16:20.745 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:20.745 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.UniCodeTest#readerTest.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.UniCodeTest#readerTest/report.xml
[m[m07.11.2021 - 16:16:20.993 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.UniCodeTest#readerTest was generated successfully
[m[m07.11.2021 - 16:16:20.993 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 236/286
[m[m07.11.2021 - 16:16:20.993 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.UniCodeTest#writerTest
[m[32m07.11.2021 - 16:16:20.993 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.UniCodeTest#writerTest.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.UniCodeTest#writerTest
[m[m07.11.2021 - 16:16:21.171 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:21.171 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.UniCodeTest#writerTest.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.UniCodeTest#writerTest/report.xml
[m[m07.11.2021 - 16:16:21.430 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.UniCodeTest#writerTest was generated successfully
[m[m07.11.2021 - 16:16:21.431 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 237/286
[m[m07.11.2021 - 16:16:21.431 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.UniCodeTest#runUniCodeThroughCSVReader
[m[32m07.11.2021 - 16:16:21.431 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.UniCodeTest#runUniCodeThroughCSVReader.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.UniCodeTest#runUniCodeThroughCSVReader
[m[m07.11.2021 - 16:16:21.659 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:21.659 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.UniCodeTest#runUniCodeThroughCSVReader.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.UniCodeTest#runUniCodeThroughCSVReader/report.xml
[m[m07.11.2021 - 16:16:21.896 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.UniCodeTest#runUniCodeThroughCSVReader was generated successfully
[m[m07.11.2021 - 16:16:21.896 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 238/286
[m[m07.11.2021 - 16:16:21.896 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.UniCodeTest#runUniCodeThroughCSVWriter
[m[32m07.11.2021 - 16:16:21.896 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.UniCodeTest#runUniCodeThroughCSVWriter.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.UniCodeTest#runUniCodeThroughCSVWriter
[m[m07.11.2021 - 16:16:22.094 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:22.094 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.UniCodeTest#runUniCodeThroughCSVWriter.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.UniCodeTest#runUniCodeThroughCSVWriter/report.xml
[m[m07.11.2021 - 16:16:22.357 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.UniCodeTest#runUniCodeThroughCSVWriter was generated successfully
[m[m07.11.2021 - 16:16:22.357 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 239/286
[m[m07.11.2021 - 16:16:22.357 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.UniCodeTest#runASCIIThroughCSVWriter
[m[32m07.11.2021 - 16:16:22.357 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.UniCodeTest#runASCIIThroughCSVWriter.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.UniCodeTest#runASCIIThroughCSVWriter
[m[m07.11.2021 - 16:16:22.540 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:22.540 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.UniCodeTest#runASCIIThroughCSVWriter.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.UniCodeTest#runASCIIThroughCSVWriter/report.xml
[m[m07.11.2021 - 16:16:22.803 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.UniCodeTest#runASCIIThroughCSVWriter was generated successfully
[m[m07.11.2021 - 16:16:22.803 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 240/286
[m[m07.11.2021 - 16:16:22.803 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.UniCodeTest#writeThenReadAscii
[m[32m07.11.2021 - 16:16:22.803 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.UniCodeTest#writeThenReadAscii.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.UniCodeTest#writeThenReadAscii
[m[m07.11.2021 - 16:16:23.005 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:23.006 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.UniCodeTest#writeThenReadAscii.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.UniCodeTest#writeThenReadAscii/report.xml
[m[m07.11.2021 - 16:16:23.329 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.UniCodeTest#writeThenReadAscii was generated successfully
[m[m07.11.2021 - 16:16:23.329 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 241/286
[m[m07.11.2021 - 16:16:23.329 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.UniCodeTest#writeThenReadTwiceAscii
[m[32m07.11.2021 - 16:16:23.329 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.UniCodeTest#writeThenReadTwiceAscii.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.UniCodeTest#writeThenReadTwiceAscii
[m[m07.11.2021 - 16:16:23.547 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:23.547 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.UniCodeTest#writeThenReadTwiceAscii.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.UniCodeTest#writeThenReadTwiceAscii/report.xml
[m[m07.11.2021 - 16:16:23.800 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.UniCodeTest#writeThenReadTwiceAscii was generated successfully
[m[m07.11.2021 - 16:16:23.800 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 242/286
[m[m07.11.2021 - 16:16:23.800 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.UniCodeTest#writeThenReadTwiceUnicode
[m[32m07.11.2021 - 16:16:23.800 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.UniCodeTest#writeThenReadTwiceUnicode.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.UniCodeTest#writeThenReadTwiceUnicode
[m[m07.11.2021 - 16:16:23.995 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:23.996 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.UniCodeTest#writeThenReadTwiceUnicode.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.UniCodeTest#writeThenReadTwiceUnicode/report.xml
[m[m07.11.2021 - 16:16:24.250 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.UniCodeTest#writeThenReadTwiceUnicode was generated successfully
[m[m07.11.2021 - 16:16:24.251 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 243/286
[m[m07.11.2021 - 16:16:24.251 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.UniCodeTest#writeThenReadTwiceMixedUnicode
[m[32m07.11.2021 - 16:16:24.251 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.UniCodeTest#writeThenReadTwiceMixedUnicode.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.UniCodeTest#writeThenReadTwiceMixedUnicode
[m[m07.11.2021 - 16:16:24.457 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:24.457 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.UniCodeTest#writeThenReadTwiceMixedUnicode.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.UniCodeTest#writeThenReadTwiceMixedUnicode/report.xml
[m[m07.11.2021 - 16:16:24.777 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.UniCodeTest#writeThenReadTwiceMixedUnicode was generated successfully
[m[m07.11.2021 - 16:16:24.778 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 244/286
[m[m07.11.2021 - 16:16:24.778 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserBuilderTest#testDefaultBuilder
[m[32m07.11.2021 - 16:16:24.778 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserBuilderTest#testDefaultBuilder.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserBuilderTest#testDefaultBuilder
[m[m07.11.2021 - 16:16:25.011 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:25.011 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserBuilderTest#testDefaultBuilder.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserBuilderTest#testDefaultBuilder/report.xml
[m[m07.11.2021 - 16:16:25.249 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserBuilderTest#testDefaultBuilder was generated successfully
[m[m07.11.2021 - 16:16:25.249 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 245/286
[m[m07.11.2021 - 16:16:25.250 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserBuilderTest#testWithSeparator
[m[32m07.11.2021 - 16:16:25.250 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserBuilderTest#testWithSeparator.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserBuilderTest#testWithSeparator
[m[m07.11.2021 - 16:16:25.448 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:25.448 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserBuilderTest#testWithSeparator.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserBuilderTest#testWithSeparator/report.xml
[m[m07.11.2021 - 16:16:25.708 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserBuilderTest#testWithSeparator was generated successfully
[m[m07.11.2021 - 16:16:25.708 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 246/286
[m[m07.11.2021 - 16:16:25.709 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserBuilderTest#testWithQuoteChar
[m[32m07.11.2021 - 16:16:25.709 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserBuilderTest#testWithQuoteChar.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserBuilderTest#testWithQuoteChar
[m[m07.11.2021 - 16:16:25.926 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:25.926 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserBuilderTest#testWithQuoteChar.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserBuilderTest#testWithQuoteChar/report.xml
[m[m07.11.2021 - 16:16:26.161 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserBuilderTest#testWithQuoteChar was generated successfully
[m[m07.11.2021 - 16:16:26.161 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 247/286
[m[m07.11.2021 - 16:16:26.161 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserBuilderTest#testWithEscapeChar
[m[32m07.11.2021 - 16:16:26.161 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserBuilderTest#testWithEscapeChar.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserBuilderTest#testWithEscapeChar
[m[m07.11.2021 - 16:16:26.363 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:26.364 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserBuilderTest#testWithEscapeChar.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserBuilderTest#testWithEscapeChar/report.xml
[m[m07.11.2021 - 16:16:26.690 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserBuilderTest#testWithEscapeChar was generated successfully
[m[m07.11.2021 - 16:16:26.691 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 248/286
[m[m07.11.2021 - 16:16:26.691 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserBuilderTest#testWithStrictQuotes
[m[32m07.11.2021 - 16:16:26.691 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserBuilderTest#testWithStrictQuotes.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserBuilderTest#testWithStrictQuotes
[m[m07.11.2021 - 16:16:26.917 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:26.918 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserBuilderTest#testWithStrictQuotes.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserBuilderTest#testWithStrictQuotes/report.xml
[m[m07.11.2021 - 16:16:27.195 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserBuilderTest#testWithStrictQuotes was generated successfully
[m[m07.11.2021 - 16:16:27.195 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 249/286
[m[m07.11.2021 - 16:16:27.195 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserBuilderTest#testWithIgnoreLeadingWhiteSpace
[m[32m07.11.2021 - 16:16:27.195 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserBuilderTest#testWithIgnoreLeadingWhiteSpace.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserBuilderTest#testWithIgnoreLeadingWhiteSpace
[m[m07.11.2021 - 16:16:27.404 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:27.405 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserBuilderTest#testWithIgnoreLeadingWhiteSpace.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserBuilderTest#testWithIgnoreLeadingWhiteSpace/report.xml
[m[m07.11.2021 - 16:16:27.639 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserBuilderTest#testWithIgnoreLeadingWhiteSpace was generated successfully
[m[m07.11.2021 - 16:16:27.639 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 250/286
[m[m07.11.2021 - 16:16:27.639 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserBuilderTest#testWithIgnoreQuotations
[m[32m07.11.2021 - 16:16:27.639 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserBuilderTest#testWithIgnoreQuotations.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserBuilderTest#testWithIgnoreQuotations
[m[m07.11.2021 - 16:16:27.839 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:27.839 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserBuilderTest#testWithIgnoreQuotations.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.CSVParserBuilderTest#testWithIgnoreQuotations/report.xml
[m[m07.11.2021 - 16:16:28.101 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.CSVParserBuilderTest#testWithIgnoreQuotations was generated successfully
[m[m07.11.2021 - 16:16:28.101 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 251/286
[m[m07.11.2021 - 16:16:28.101 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndexBeforeMappingSetReturnsNull
[m[32m07.11.2021 - 16:16:28.101 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndexBeforeMappingSetReturnsNull.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndexBeforeMappingSetReturnsNull
[m[m07.11.2021 - 16:16:28.281 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:28.281 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndexBeforeMappingSetReturnsNull.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndexBeforeMappingSetReturnsNull/report.xml
[m[m07.11.2021 - 16:16:28.538 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndexBeforeMappingSetReturnsNull was generated successfully
[m[m07.11.2021 - 16:16:28.538 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 252/286
[m[m07.11.2021 - 16:16:28.538 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndexEmptyMappingReturnsNull
[m[32m07.11.2021 - 16:16:28.538 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndexEmptyMappingReturnsNull.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndexEmptyMappingReturnsNull
[m[m07.11.2021 - 16:16:28.747 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:28.747 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndexEmptyMappingReturnsNull.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndexEmptyMappingReturnsNull/report.xml
[m[m07.11.2021 - 16:16:29.009 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndexEmptyMappingReturnsNull was generated successfully
[m[m07.11.2021 - 16:16:29.009 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 253/286
[m[m07.11.2021 - 16:16:29.009 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndex
[m[32m07.11.2021 - 16:16:29.009 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndex.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndex
[m[m07.11.2021 - 16:16:29.226 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:29.226 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndex.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndex/report.xml
[m[m07.11.2021 - 16:16:29.464 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndex was generated successfully
[m[m07.11.2021 - 16:16:29.464 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 254/286
[m[m07.11.2021 - 16:16:29.464 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.ColumnPositionMappingStrategyTest#testParse
[m[32m07.11.2021 - 16:16:29.464 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#testParse.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.ColumnPositionMappingStrategyTest#testParse
[m[m07.11.2021 - 16:16:29.731 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:29.731 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#testParse.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#testParse/report.xml
[m[m07.11.2021 - 16:16:29.993 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.ColumnPositionMappingStrategyTest#testParse was generated successfully
[m[m07.11.2021 - 16:16:29.993 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 255/286
[m[m07.11.2021 - 16:16:29.993 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.ColumnPositionMappingStrategyTest#testParseWithTrailingSpaces
[m[32m07.11.2021 - 16:16:29.993 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#testParseWithTrailingSpaces.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.ColumnPositionMappingStrategyTest#testParseWithTrailingSpaces
[m[m07.11.2021 - 16:16:30.246 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:30.246 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#testParseWithTrailingSpaces.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#testParseWithTrailingSpaces/report.xml
[m[m07.11.2021 - 16:16:30.494 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.ColumnPositionMappingStrategyTest#testParseWithTrailingSpaces was generated successfully
[m[m07.11.2021 - 16:16:30.494 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 256/286
[m[m07.11.2021 - 16:16:30.494 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnMapping
[m[32m07.11.2021 - 16:16:30.495 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnMapping.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnMapping
[m[m07.11.2021 - 16:16:30.698 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:30.698 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnMapping.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnMapping/report.xml
[m[m07.11.2021 - 16:16:30.963 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnMapping was generated successfully
[m[m07.11.2021 - 16:16:30.963 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 257/286
[m[m07.11.2021 - 16:16:30.963 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnNames
[m[32m07.11.2021 - 16:16:30.964 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnNames.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnNames
[m[m07.11.2021 - 16:16:31.145 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:31.146 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnNames.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnNames/report.xml
[m[m07.11.2021 - 16:16:31.494 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnNames was generated successfully
[m[m07.11.2021 - 16:16:31.494 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 258/286
[m[m07.11.2021 - 16:16:31.495 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnNamesArray
[m[32m07.11.2021 - 16:16:31.495 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnNamesArray.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnNamesArray
[m[m07.11.2021 - 16:16:31.710 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:31.710 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnNamesArray.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnNamesArray/report.xml
[m[m07.11.2021 - 16:16:31.993 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnNamesArray was generated successfully
[m[m07.11.2021 - 16:16:31.993 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 259/286
[m[m07.11.2021 - 16:16:31.993 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenNullArray
[m[32m07.11.2021 - 16:16:31.993 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenNullArray.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenNullArray
[m[m07.11.2021 - 16:16:32.199 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:32.199 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenNullArray.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenNullArray/report.xml
[m[m07.11.2021 - 16:16:32.438 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenNullArray was generated successfully
[m[m07.11.2021 - 16:16:32.438 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 260/286
[m[m07.11.2021 - 16:16:32.438 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenNullColumnName
[m[32m07.11.2021 - 16:16:32.438 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenNullColumnName.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenNullColumnName
[m[m07.11.2021 - 16:16:32.648 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:32.648 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenNullColumnName.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenNullColumnName/report.xml
[m[m07.11.2021 - 16:16:32.904 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenNullColumnName was generated successfully
[m[m07.11.2021 - 16:16:32.904 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 261/286
[m[m07.11.2021 - 16:16:32.904 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenEmptyMapping
[m[32m07.11.2021 - 16:16:32.904 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenEmptyMapping.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenEmptyMapping
[m[m07.11.2021 - 16:16:33.116 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:33.116 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenEmptyMapping.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenEmptyMapping/report.xml
[m[m07.11.2021 - 16:16:33.348 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenEmptyMapping was generated successfully
[m[m07.11.2021 - 16:16:33.349 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 262/286
[m[m07.11.2021 - 16:16:33.349 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.ColumnPositionMappingStrategyTest#throwsIllegalStateExceptionIfTypeNotSet
[m[32m07.11.2021 - 16:16:33.349 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#throwsIllegalStateExceptionIfTypeNotSet.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.ColumnPositionMappingStrategyTest#throwsIllegalStateExceptionIfTypeNotSet
[m[m07.11.2021 - 16:16:33.553 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:33.553 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#throwsIllegalStateExceptionIfTypeNotSet.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#throwsIllegalStateExceptionIfTypeNotSet/report.xml
[m[m07.11.2021 - 16:16:33.807 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.bean.ColumnPositionMappingStrategyTest#throwsIllegalStateExceptionIfTypeNotSet was generated successfully
[m[m07.11.2021 - 16:16:33.807 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 263/286
[m[m07.11.2021 - 16:16:33.807 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetColumnNameHelperServiceTest#canPrintColumnNames
[m[32m07.11.2021 - 16:16:33.807 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#canPrintColumnNames.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetColumnNameHelperServiceTest#canPrintColumnNames
[m[m07.11.2021 - 16:16:34.118 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:34.118 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#canPrintColumnNames.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#canPrintColumnNames/report.xml
[m[m07.11.2021 - 16:16:34.382 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.ResultSetColumnNameHelperServiceTest#canPrintColumnNames was generated successfully
[m[m07.11.2021 - 16:16:34.382 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 264/286
[m[m07.11.2021 - 16:16:34.382 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetColumnNameHelperServiceTest#setColumnNames
[m[32m07.11.2021 - 16:16:34.382 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#setColumnNames.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetColumnNameHelperServiceTest#setColumnNames
[m[m07.11.2021 - 16:16:34.693 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:34.693 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#setColumnNames.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#setColumnNames/report.xml
[m[m07.11.2021 - 16:16:34.946 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.ResultSetColumnNameHelperServiceTest#setColumnNames was generated successfully
[m[m07.11.2021 - 16:16:34.946 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 265/286
[m[m07.11.2021 - 16:16:34.946 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetColumnNameHelperServiceTest#getColumnNamesWithSubsetOutOfOrder
[m[32m07.11.2021 - 16:16:34.947 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getColumnNamesWithSubsetOutOfOrder.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetColumnNameHelperServiceTest#getColumnNamesWithSubsetOutOfOrder
[m[m07.11.2021 - 16:16:35.290 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:35.290 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getColumnNamesWithSubsetOutOfOrder.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getColumnNamesWithSubsetOutOfOrder/report.xml
[m[m07.11.2021 - 16:16:35.528 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.ResultSetColumnNameHelperServiceTest#getColumnNamesWithSubsetOutOfOrder was generated successfully
[m[m07.11.2021 - 16:16:35.529 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 266/286
[m[m07.11.2021 - 16:16:35.529 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetColumnNameHelperServiceTest#numberOfColumnsNamesMustMatchNumberOfHeaders
[m[32m07.11.2021 - 16:16:35.529 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#numberOfColumnsNamesMustMatchNumberOfHeaders.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetColumnNameHelperServiceTest#numberOfColumnsNamesMustMatchNumberOfHeaders
[m[m07.11.2021 - 16:16:35.749 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:35.750 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#numberOfColumnsNamesMustMatchNumberOfHeaders.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#numberOfColumnsNamesMustMatchNumberOfHeaders/report.xml
[m[m07.11.2021 - 16:16:35.997 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.ResultSetColumnNameHelperServiceTest#numberOfColumnsNamesMustMatchNumberOfHeaders was generated successfully
[m[m07.11.2021 - 16:16:35.997 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 267/286
[m[m07.11.2021 - 16:16:35.997 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveNullColumnName
[m[32m07.11.2021 - 16:16:35.997 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveNullColumnName.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveNullColumnName
[m[m07.11.2021 - 16:16:36.218 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:36.218 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveNullColumnName.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveNullColumnName/report.xml
[m[m07.11.2021 - 16:16:36.461 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveNullColumnName was generated successfully
[m[m07.11.2021 - 16:16:36.461 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 268/286
[m[m07.11.2021 - 16:16:36.461 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveEmptyColumnName
[m[32m07.11.2021 - 16:16:36.461 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveEmptyColumnName.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveEmptyColumnName
[m[m07.11.2021 - 16:16:36.658 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:36.658 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveEmptyColumnName.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveEmptyColumnName/report.xml
[m[m07.11.2021 - 16:16:36.917 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveEmptyColumnName was generated successfully
[m[m07.11.2021 - 16:16:36.917 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 269/286
[m[m07.11.2021 - 16:16:36.917 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveSpaceColumnName
[m[32m07.11.2021 - 16:16:36.917 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveSpaceColumnName.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveSpaceColumnName
[m[m07.11.2021 - 16:16:37.125 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:37.126 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveSpaceColumnName.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveSpaceColumnName/report.xml
[m[m07.11.2021 - 16:16:37.429 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveSpaceColumnName was generated successfully
[m[m07.11.2021 - 16:16:37.429 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 270/286
[m[m07.11.2021 - 16:16:37.429 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveNullHeaderName
[m[32m07.11.2021 - 16:16:37.429 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveNullHeaderName.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveNullHeaderName
[m[m07.11.2021 - 16:16:37.623 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:37.623 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveNullHeaderName.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveNullHeaderName/report.xml
[m[m07.11.2021 - 16:16:37.890 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveNullHeaderName was generated successfully
[m[m07.11.2021 - 16:16:37.890 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 271/286
[m[m07.11.2021 - 16:16:37.890 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveEmptyHeaderName
[m[32m07.11.2021 - 16:16:37.890 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveEmptyHeaderName.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveEmptyHeaderName
[m[m07.11.2021 - 16:16:38.086 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:38.087 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveEmptyHeaderName.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveEmptyHeaderName/report.xml
[m[m07.11.2021 - 16:16:38.325 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveEmptyHeaderName was generated successfully
[m[m07.11.2021 - 16:16:38.325 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 272/286
[m[m07.11.2021 - 16:16:38.325 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveSpaceHeaderName
[m[32m07.11.2021 - 16:16:38.325 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveSpaceHeaderName.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveSpaceHeaderName
[m[m07.11.2021 - 16:16:38.503 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:38.503 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveSpaceHeaderName.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveSpaceHeaderName/report.xml
[m[m07.11.2021 - 16:16:38.754 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveSpaceHeaderName was generated successfully
[m[m07.11.2021 - 16:16:38.754 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 273/286
[m[m07.11.2021 - 16:16:38.754 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetColumnNameHelperServiceTest#getColumnNamesThrowsExceptionIfColumnDoesNotExist
[m[32m07.11.2021 - 16:16:38.754 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getColumnNamesThrowsExceptionIfColumnDoesNotExist.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetColumnNameHelperServiceTest#getColumnNamesThrowsExceptionIfColumnDoesNotExist
[m[m07.11.2021 - 16:16:39.066 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:39.066 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getColumnNamesThrowsExceptionIfColumnDoesNotExist.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getColumnNamesThrowsExceptionIfColumnDoesNotExist/report.xml
[m[m07.11.2021 - 16:16:39.316 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.ResultSetColumnNameHelperServiceTest#getColumnNamesThrowsExceptionIfColumnDoesNotExist was generated successfully
[m[m07.11.2021 - 16:16:39.316 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 274/286
[m[m07.11.2021 - 16:16:39.316 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetColumnNameHelperServiceTest#getBooleanFromResultSet
[m[32m07.11.2021 - 16:16:39.316 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getBooleanFromResultSet.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetColumnNameHelperServiceTest#getBooleanFromResultSet
[m[m07.11.2021 - 16:16:39.640 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:39.640 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getBooleanFromResultSet.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getBooleanFromResultSet/report.xml
[m[m07.11.2021 - 16:16:39.880 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.ResultSetColumnNameHelperServiceTest#getBooleanFromResultSet was generated successfully
[m[m07.11.2021 - 16:16:39.881 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 275/286
[m[m07.11.2021 - 16:16:39.881 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetColumnNameHelperServiceTest#getBooleanSubsetFromResultSet
[m[32m07.11.2021 - 16:16:39.881 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getBooleanSubsetFromResultSet.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetColumnNameHelperServiceTest#getBooleanSubsetFromResultSet
[m[m07.11.2021 - 16:16:40.190 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:40.190 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getBooleanSubsetFromResultSet.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getBooleanSubsetFromResultSet/report.xml
[m[m07.11.2021 - 16:16:40.445 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.ResultSetColumnNameHelperServiceTest#getBooleanSubsetFromResultSet was generated successfully
[m[m07.11.2021 - 16:16:40.445 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 276/286
[m[m07.11.2021 - 16:16:40.445 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetColumnNameHelperServiceTest#getSubsetWithTrim
[m[32m07.11.2021 - 16:16:40.445 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getSubsetWithTrim.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetColumnNameHelperServiceTest#getSubsetWithTrim
[m[m07.11.2021 - 16:16:40.771 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:40.772 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getSubsetWithTrim.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getSubsetWithTrim/report.xml
[m[m07.11.2021 - 16:16:41.025 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.ResultSetColumnNameHelperServiceTest#getSubsetWithTrim was generated successfully
[m[m07.11.2021 - 16:16:41.025 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 277/286
[m[m07.11.2021 - 16:16:41.025 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetColumnNameHelperServiceTest#getCharSetWithNullAndTrim
[m[32m07.11.2021 - 16:16:41.025 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getCharSetWithNullAndTrim.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetColumnNameHelperServiceTest#getCharSetWithNullAndTrim
[m[m07.11.2021 - 16:16:41.338 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:41.404 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getCharSetWithNullAndTrim.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getCharSetWithNullAndTrim/report.xml
[m[m07.11.2021 - 16:16:41.684 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.ResultSetColumnNameHelperServiceTest#getCharSetWithNullAndTrim was generated successfully
[m[m07.11.2021 - 16:16:41.684 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 278/286
[m[m07.11.2021 - 16:16:41.684 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetColumnNameHelperServiceTest#getTimestampFromResultSetWithCustomFormat
[m[32m07.11.2021 - 16:16:41.684 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getTimestampFromResultSetWithCustomFormat.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetColumnNameHelperServiceTest#getTimestampFromResultSetWithCustomFormat
[m[m07.11.2021 - 16:16:42.022 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:42.022 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getTimestampFromResultSetWithCustomFormat.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getTimestampFromResultSetWithCustomFormat/report.xml
[m[m07.11.2021 - 16:16:42.283 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.ResultSetColumnNameHelperServiceTest#getTimestampFromResultSetWithCustomFormat was generated successfully
[m[m07.11.2021 - 16:16:42.283 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 279/286
[m[m07.11.2021 - 16:16:42.283 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetColumnNameHelperServiceTest#getSubsetFromResultSetWithCustomFormat
[m[32m07.11.2021 - 16:16:42.283 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getSubsetFromResultSetWithCustomFormat.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetColumnNameHelperServiceTest#getSubsetFromResultSetWithCustomFormat
[m[m07.11.2021 - 16:16:42.603 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:42.604 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getSubsetFromResultSetWithCustomFormat.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getSubsetFromResultSetWithCustomFormat/report.xml
[m[m07.11.2021 - 16:16:42.857 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.ResultSetColumnNameHelperServiceTest#getSubsetFromResultSetWithCustomFormat was generated successfully
[m[m07.11.2021 - 16:16:42.857 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 280/286
[m[m07.11.2021 - 16:16:42.857 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase integrationTest.SR34.SR34Test#defaultReaderInterpetsNullCorrectly
[m[32m07.11.2021 - 16:16:42.858 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/integrationTest.SR34.SR34Test#defaultReaderInterpetsNullCorrectly.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner integrationTest.SR34.SR34Test#defaultReaderInterpetsNullCorrectly
[m[m07.11.2021 - 16:16:43.081 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:43.081 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/integrationTest.SR34.SR34Test#defaultReaderInterpetsNullCorrectly.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/integrationTest.SR34.SR34Test#defaultReaderInterpetsNullCorrectly/report.xml
[m[m07.11.2021 - 16:16:43.342 [INFO ] LineCoverageStrategy.createReport() - Report for integrationTest.SR34.SR34Test#defaultReaderInterpetsNullCorrectly was generated successfully
[m[m07.11.2021 - 16:16:43.342 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 281/286
[m[m07.11.2021 - 16:16:43.342 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase integrationTest.SR34.SR34Test#doubleBufferedReaderInterpetsNullCorrectly
[m[32m07.11.2021 - 16:16:43.342 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/integrationTest.SR34.SR34Test#doubleBufferedReaderInterpetsNullCorrectly.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner integrationTest.SR34.SR34Test#doubleBufferedReaderInterpetsNullCorrectly
[m[m07.11.2021 - 16:16:43.526 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:43.526 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/integrationTest.SR34.SR34Test#doubleBufferedReaderInterpetsNullCorrectly.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/integrationTest.SR34.SR34Test#doubleBufferedReaderInterpetsNullCorrectly/report.xml
[m[m07.11.2021 - 16:16:43.813 [INFO ] LineCoverageStrategy.createReport() - Report for integrationTest.SR34.SR34Test#doubleBufferedReaderInterpetsNullCorrectly was generated successfully
[m[m07.11.2021 - 16:16:43.813 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 282/286
[m[m07.11.2021 - 16:16:43.813 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase integrationTest.SR34.SR34Test#usingNullAsDelimeterWillFailBecauseYouAreEscapingTheQuote
[m[32m07.11.2021 - 16:16:43.814 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/integrationTest.SR34.SR34Test#usingNullAsDelimeterWillFailBecauseYouAreEscapingTheQuote.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner integrationTest.SR34.SR34Test#usingNullAsDelimeterWillFailBecauseYouAreEscapingTheQuote
[m[m07.11.2021 - 16:16:44.001 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:44.002 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/integrationTest.SR34.SR34Test#usingNullAsDelimeterWillFailBecauseYouAreEscapingTheQuote.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/integrationTest.SR34.SR34Test#usingNullAsDelimeterWillFailBecauseYouAreEscapingTheQuote/report.xml
[m[m07.11.2021 - 16:16:44.299 [INFO ] LineCoverageStrategy.createReport() - Report for integrationTest.SR34.SR34Test#usingNullAsDelimeterWillFailBecauseYouAreEscapingTheQuote was generated successfully
[m[m07.11.2021 - 16:16:44.299 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 283/286
[m[m07.11.2021 - 16:16:44.299 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase integrationTest.SR34.SR34Test#youNeedToEscapeTheNullCharactersIfUsingNullAsEscape
[m[32m07.11.2021 - 16:16:44.299 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/integrationTest.SR34.SR34Test#youNeedToEscapeTheNullCharactersIfUsingNullAsEscape.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner integrationTest.SR34.SR34Test#youNeedToEscapeTheNullCharactersIfUsingNullAsEscape
[m[m07.11.2021 - 16:16:44.497 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:44.498 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/integrationTest.SR34.SR34Test#youNeedToEscapeTheNullCharactersIfUsingNullAsEscape.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/integrationTest.SR34.SR34Test#youNeedToEscapeTheNullCharactersIfUsingNullAsEscape/report.xml
[m[m07.11.2021 - 16:16:44.755 [INFO ] LineCoverageStrategy.createReport() - Report for integrationTest.SR34.SR34Test#youNeedToEscapeTheNullCharactersIfUsingNullAsEscape was generated successfully
[m[m07.11.2021 - 16:16:44.755 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 284/286
[m[m07.11.2021 - 16:16:44.755 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.RFC4180ParserBuilderTest#testDefaultBuilder
[m[32m07.11.2021 - 16:16:44.755 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.RFC4180ParserBuilderTest#testDefaultBuilder.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.RFC4180ParserBuilderTest#testDefaultBuilder
[m[m07.11.2021 - 16:16:44.934 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:44.935 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.RFC4180ParserBuilderTest#testDefaultBuilder.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.RFC4180ParserBuilderTest#testDefaultBuilder/report.xml
[m[m07.11.2021 - 16:16:45.196 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.RFC4180ParserBuilderTest#testDefaultBuilder was generated successfully
[m[m07.11.2021 - 16:16:45.196 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 285/286
[m[m07.11.2021 - 16:16:45.196 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.RFC4180ParserBuilderTest#testWithSeparator
[m[32m07.11.2021 - 16:16:45.196 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.RFC4180ParserBuilderTest#testWithSeparator.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.RFC4180ParserBuilderTest#testWithSeparator
[m[m07.11.2021 - 16:16:45.382 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:45.383 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.RFC4180ParserBuilderTest#testWithSeparator.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.RFC4180ParserBuilderTest#testWithSeparator/report.xml
[m[m07.11.2021 - 16:16:45.624 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.RFC4180ParserBuilderTest#testWithSeparator was generated successfully
[m[m07.11.2021 - 16:16:45.624 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 286/286
[m[m07.11.2021 - 16:16:45.624 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.RFC4180ParserBuilderTest#testWithQuoteChar
[m[32m07.11.2021 - 16:16:45.624 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.RFC4180ParserBuilderTest#testWithQuoteChar.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.RFC4180ParserBuilderTest#testWithQuoteChar
[m[m07.11.2021 - 16:16:45.807 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:45.807 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.RFC4180ParserBuilderTest#testWithQuoteChar.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/com.opencsv.RFC4180ParserBuilderTest#testWithQuoteChar/report.xml
[m[m07.11.2021 - 16:16:46.064 [INFO ] LineCoverageStrategy.createReport() - Report for com.opencsv.RFC4180ParserBuilderTest#testWithQuoteChar was generated successfully
[m[m07.11.2021 - 16:16:46.064 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanFilterTest#testColumnNameTranslationWithLineFiltering
[m[m07.11.2021 - 16:16:46.133 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of integrationTest.isClosed.isClosedTest#issue115StandardReadFailsAfterALargeNumberOfReads
[m[m07.11.2021 - 16:16:46.168 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.IterableCSVToBeanBuilderTest#defaultBuilderMissingInformation
[m[m07.11.2021 - 16:16:46.189 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.IterableCSVToBeanBuilderTest#willThrowExceptionIfMissingReader
[m[m07.11.2021 - 16:16:46.208 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.IterableCSVToBeanBuilderTest#builderWithoutFilter
[m[m07.11.2021 - 16:16:46.228 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.IterableCSVToBeanBuilderTest#builderWithFilter
[m[m07.11.2021 - 16:16:46.245 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanDoubleTest#parseBeanWithNoAnnotations
[m[m07.11.2021 - 16:16:46.261 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testParseLine
[m[m07.11.2021 - 16:16:46.277 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#parseSimpleString
[m[m07.11.2021 - 16:16:46.291 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#parseSimpleQuotedString
[m[m07.11.2021 - 16:16:46.307 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#parseSimpleQuotedStringWithSpaces
[m[m07.11.2021 - 16:16:46.319 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testParsedLineWithInternalQuota
[m[m07.11.2021 - 16:16:46.331 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#parseQuotedStringWithCommas
[m[m07.11.2021 - 16:16:46.343 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#parseQuotedStringWithDefinedSeperator
[m[m07.11.2021 - 16:16:46.355 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#parseQuotedStringWithDefinedSeperatorAndQuote
[m[m07.11.2021 - 16:16:46.416 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#parseEmptyElements
[m[m07.11.2021 - 16:16:46.428 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#parseMultiLinedQuoted
[m[m07.11.2021 - 16:16:46.438 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#parseMultiLinedQuotedwithCarriageReturns
[m[m07.11.2021 - 16:16:46.449 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testADoubleQuoteAsDataElement
[m[m07.11.2021 - 16:16:46.459 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testEscapedDoubleQuoteAsDataElement
[m[m07.11.2021 - 16:16:46.470 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#parseQuotedQuoteCharacters
[m[m07.11.2021 - 16:16:46.479 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#parseMultipleQuotes
[m[m07.11.2021 - 16:16:46.489 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#parseTrickyString
[m[m07.11.2021 - 16:16:46.498 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testAMultiLineInsideQuotes
[m[m07.11.2021 - 16:16:46.508 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testStrictQuoteSimple
[m[m07.11.2021 - 16:16:46.517 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testNotStrictQuoteSimple
[m[m07.11.2021 - 16:16:46.527 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testStrictQuoteWithSpacesAndTabs
[m[m07.11.2021 - 16:16:46.536 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testNotStrictQuoteWithSpacesAndTabs
[m[m07.11.2021 - 16:16:46.546 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testStrictQuoteWithGarbage
[m[m07.11.2021 - 16:16:46.555 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testCanIgnoreQuotations
[m[m07.11.2021 - 16:16:46.565 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testFalseIgnoreQuotations
[m[m07.11.2021 - 16:16:46.575 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testIssue3314579
[m[m07.11.2021 - 16:16:46.584 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testIssue2263439
[m[m07.11.2021 - 16:16:46.594 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testIssue2859181
[m[m07.11.2021 - 16:16:46.603 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testIssue2726363
[m[m07.11.2021 - 16:16:46.614 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#anIOExceptionThrownifStringEndsInsideAQuotedString
[m[m07.11.2021 - 16:16:46.623 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#parseLineMultiAllowsQuotesAcrossMultipleLines
[m[m07.11.2021 - 16:16:46.633 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#pendingIsClearedAfterCallToParseLine
[m[m07.11.2021 - 16:16:46.642 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#returnPendingIfNullIsPassedIntoParseLineMulti
[m[m07.11.2021 - 16:16:46.652 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#spacesAtEndOfQuotedStringDoNotCountIfStrictQuotesIsTrue
[m[m07.11.2021 - 16:16:46.661 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#returnNullWhenNullPassedIn
[m[m07.11.2021 - 16:16:46.670 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#validateEscapeStringBeforeRealTest
[m[m07.11.2021 - 16:16:46.680 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#whichCharactersAreEscapable
[m[m07.11.2021 - 16:16:46.689 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#whitespaceBeforeEscape
[m[m07.11.2021 - 16:16:46.698 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testIssue2958242WithoutQuotes
[m[m07.11.2021 - 16:16:46.708 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#quoteAndEscapeCannotBeTheSame
[m[m07.11.2021 - 16:16:46.717 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#quoteAndEscapeCanBeTheSameIfNull
[m[m07.11.2021 - 16:16:46.726 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#separatorCharacterCannotBeNull
[m[m07.11.2021 - 16:16:46.735 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#separatorAndEscapeCannotBeTheSame
[m[m07.11.2021 - 16:16:46.744 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#separatorAndQuoteCannotBeTheSame
[m[m07.11.2021 - 16:16:46.753 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#parserHandlesNullInString
[m[m07.11.2021 - 16:16:46.762 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#featureRequest60ByDefaultEmptyFieldsAreBlank
[m[m07.11.2021 - 16:16:46.771 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#featureRequest60TreatEmptyFieldsAsNull
[m[m07.11.2021 - 16:16:46.779 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#featureRequest60TreatEmptyDelimitedFieldsAsNull
[m[m07.11.2021 - 16:16:46.788 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#featureRequest60TreatEmptyFieldsDelimitedOrNotAsNull
[m[m07.11.2021 - 16:16:46.797 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testStrictQuotesEndsFieldAtQuote
[m[m07.11.2021 - 16:16:46.805 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testStrictQuotesEndsFieldAtQuoteWithEscapedQuoteInMiddle
[m[m07.11.2021 - 16:16:46.814 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testNotStrictQuotesAllowsEmbeddedEscapedQuote
[m[m07.11.2021 - 16:16:46.823 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testNotStrictQuotesAllowsEmbeddedQuote
[m[m07.11.2021 - 16:16:46.831 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#issue93ParsingEmptyDoubleQuoteField
[m[m07.11.2021 - 16:16:46.840 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.BeanToCsvTest#throwRuntimeExceptionWhenExceptionIsThrown
[m[m07.11.2021 - 16:16:46.849 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.BeanToCsvTest#beanReturnsFalseOnEmptyList
[m[m07.11.2021 - 16:16:46.857 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.BeanToCsvTest#beanReturnsFalseOnNull
[m[m07.11.2021 - 16:16:46.866 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.BeanToCsvTest#testWriteQuotes
[m[m07.11.2021 - 16:16:46.875 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.BeanToCsvTest#writeBeansOneAtATime
[m[m07.11.2021 - 16:16:46.883 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.BeanToCsvTest#writeSingleBeanMethodReturnsFalseIfNullPassedIn
[m[m07.11.2021 - 16:16:46.893 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.BeanToCsvTest#handleException
[m[m07.11.2021 - 16:16:46.901 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.BeanToCsvTest#testWriteQuotesWithAnnotatedBean
[m[m07.11.2021 - 16:16:46.910 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.BeanToCsvTest#testWriteNulls
[m[m07.11.2021 - 16:16:46.919 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.BeanToCsvTest#testWriteNullsWithAnnotatedBean
[m[m07.11.2021 - 16:16:46.927 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of integrationTest.issue3402853.HeaderColumnNameMappingStrategyUserTest#testParse
[m[m07.11.2021 - 16:16:46.936 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.HeaderColumnNameMappingStrategyTest#getColumnIndexWithoutHeaderThrowsException
[m[m07.11.2021 - 16:16:46.944 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.HeaderColumnNameMappingStrategyTest#getColumnIndexAfterParse
[m[m07.11.2021 - 16:16:46.953 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testParse
[m[m07.11.2021 - 16:16:46.961 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testQuotedString
[m[m07.11.2021 - 16:16:46.970 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testParseWithSpacesInHeader
[m[m07.11.2021 - 16:16:46.978 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.HeaderColumnNameMappingStrategyTest#verifyColumnNames
[m[m07.11.2021 - 16:16:46.987 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.HeaderColumnNameMappingStrategyTest#throwsIllegalStateExceptionIfTypeNotSet
[m[m07.11.2021 - 16:16:46.995 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.TestUtilitiesTest#displayStringArray
[m[m07.11.2021 - 16:16:47.004 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.StatefulBeanToCsvTest#writeBadData
[m[m07.11.2021 - 16:16:47.012 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.StatefulBeanToCsvTest#writeGoodDataCustom
[m[m07.11.2021 - 16:16:47.021 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.StatefulBeanToCsvTest#writeBadDataCustom
[m[m07.11.2021 - 16:16:47.029 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVIteratorTest#readerExceptionCausesRunTimeException
[m[m07.11.2021 - 16:16:47.038 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVIteratorTest#removethrowsUnsupportedOperationException
[m[m07.11.2021 - 16:16:47.047 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVIteratorTest#initialReadReturnsStrings
[m[m07.11.2021 - 16:16:47.055 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVIteratorTest#hasNextWorks
[m[m07.11.2021 - 16:16:47.064 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderBuilderTest#testDefaultBuilder
[m[m07.11.2021 - 16:16:47.072 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderBuilderTest#testNullReader
[m[m07.11.2021 - 16:16:47.081 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderBuilderTest#testWithCSVParserNull
[m[m07.11.2021 - 16:16:47.089 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderBuilderTest#testWithCSVParser
[m[m07.11.2021 - 16:16:47.098 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderBuilderTest#testWithSkipLines
[m[m07.11.2021 - 16:16:47.106 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderBuilderTest#testWithKeepCR
[m[m07.11.2021 - 16:16:47.115 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderBuilderTest#testWithSkipLinesZero
[m[m07.11.2021 - 16:16:47.123 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderBuilderTest#testWithSkipLinesNegative
[m[m07.11.2021 - 16:16:47.132 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderBuilderTest#testWithVerifyReader
[m[m07.11.2021 - 16:16:47.140 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderBuilderTest#builderWithNullFieldIndicator
[m[m07.11.2021 - 16:16:47.149 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#testParseLine
[m[m07.11.2021 - 16:16:47.157 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#readerCanHandleNullInString
[m[m07.11.2021 - 16:16:47.165 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#testParseLineStrictQuote
[m[m07.11.2021 - 16:16:47.174 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#testParseAll
[m[m07.11.2021 - 16:16:47.184 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#testOptionalConstructors
[m[m07.11.2021 - 16:16:47.193 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#parseQuotedStringWithDefinedSeperator
[m[m07.11.2021 - 16:16:47.201 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#testSkippingLines
[m[m07.11.2021 - 16:16:47.209 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#linesAndRecordsRead
[m[m07.11.2021 - 16:16:47.218 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#testSkippingLinesWithDifferentEscape
[m[m07.11.2021 - 16:16:47.226 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#testNormalParsedLine
[m[m07.11.2021 - 16:16:47.234 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#testASingleQuoteAsDataElement
[m[m07.11.2021 - 16:16:47.243 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#testASingleQuoteAsDataElementWithEmptyField
[m[m07.11.2021 - 16:16:47.251 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#testSpacesAtEndOfString
[m[m07.11.2021 - 16:16:47.260 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#testEscapedQuote
[m[m07.11.2021 - 16:16:47.268 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#testEscapedEscape
[m[m07.11.2021 - 16:16:47.276 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#testSingleQuoteWhenDoubleQuoteIsQuoteChar
[m[m07.11.2021 - 16:16:47.285 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#testQuotedParsedLine
[m[m07.11.2021 - 16:16:47.293 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#bug106ParseLineWithCarriageReturnNewLineStrictQuotes
[m[m07.11.2021 - 16:16:47.301 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#testIssue2992134OutOfPlaceQuotes
[m[m07.11.2021 - 16:16:47.310 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#quoteAndEscapeMustBeDifferent
[m[m07.11.2021 - 16:16:47.319 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#separatorAndEscapeMustBeDifferent
[m[m07.11.2021 - 16:16:47.327 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#separatorAndQuoteMustBeDifferent
[m[m07.11.2021 - 16:16:47.336 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#testIteratorFunctionality
[m[m07.11.2021 - 16:16:47.344 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#canCloseReader
[m[m07.11.2021 - 16:16:47.353 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#canCreateIteratorFromReader
[m[m07.11.2021 - 16:16:47.361 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#attemptToReadCloseStreamReturnsNull
[m[m07.11.2021 - 16:16:47.369 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#testIssue102
[m[m07.11.2021 - 16:16:47.378 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#issue108ReaderPlaysWellWithChannels
[m[m07.11.2021 - 16:16:47.386 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#featureRequest60ByDefaultEmptyFieldsAreBlank
[m[m07.11.2021 - 16:16:47.394 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#featureRequest60TreatEmptyFieldsAsNull
[m[m07.11.2021 - 16:16:47.403 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#featureRequest60TreatEmptyDelimitedFieldsAsNull
[m[m07.11.2021 - 16:16:47.411 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#featureRequest60TreatEmptyFieldsDelimitedOrNotAsNull
[m[m07.11.2021 - 16:16:47.420 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.stream.reader.LineReaderTest#lineReaderWillKeepCR
[m[m07.11.2021 - 16:16:47.428 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.stream.reader.LineReaderTest#lineReaderWillRemoveCR
[m[m07.11.2021 - 16:16:47.436 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.stream.reader.LineReaderTest#lineReaderKeepingCRWillHandleStringWithNoLinefeed
[m[m07.11.2021 - 16:16:47.445 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.stream.reader.LineReaderTest#lineReaderNoCRWillHandleStringWithNoLinefeed
[m[m07.11.2021 - 16:16:47.453 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.stream.reader.LineReaderTest#lineReaderKeepingCRWillHandleEmptyString
[m[m07.11.2021 - 16:16:47.461 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.stream.reader.LineReaderTest#lineReaderNoCRWillHandleEmptyString
[m[m07.11.2021 - 16:16:47.470 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.AnnotationTest#testGoodDataByName
[m[m07.11.2021 - 16:16:47.478 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.AnnotationTest#testGoodDataByPosition
[m[m07.11.2021 - 16:16:47.486 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.AnnotationTest#testGoodDataCustomByName
[m[m07.11.2021 - 16:16:47.497 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.AnnotationTest#testGoodDataCustomByPosition
[m[m07.11.2021 - 16:16:47.505 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.AnnotationTest#testCase7
[m[m07.11.2021 - 16:16:47.513 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.AnnotationTest#testCase51
[m[m07.11.2021 - 16:16:47.522 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.AnnotationTest#testCase11
[m[m07.11.2021 - 16:16:47.530 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.AnnotationTest#testCase55
[m[m07.11.2021 - 16:16:47.538 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.AnnotationTest#testCase21
[m[m07.11.2021 - 16:16:47.547 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.AnnotationTest#testCase63
[m[m07.11.2021 - 16:16:47.555 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.AnnotationTest#testBadDataByName
[m[m07.11.2021 - 16:16:47.564 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.AnnotationTest#testCase16
[m[m07.11.2021 - 16:16:47.572 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.AnnotationTest#testCase60
[m[m07.11.2021 - 16:16:47.580 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.AnnotationTest#testBadDataCustomByName
[m[m07.11.2021 - 16:16:47.589 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.AnnotationTest#testBadConverter
[m[m07.11.2021 - 16:16:47.597 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.AnnotationTest#codeCoverageExceptions
[m[m07.11.2021 - 16:16:47.605 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.IterableCSVToBeanTest#nextLine
[m[m07.11.2021 - 16:16:47.614 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.IterableCSVToBeanTest#nextLineWithFilter
[m[m07.11.2021 - 16:16:47.623 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.IterableCSVToBeanTest#readWithIterator
[m[m07.11.2021 - 16:16:47.631 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.IterableCSVToBeanTest#readWithIteratorAndFilter
[m[m07.11.2021 - 16:16:47.640 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.OpencsvTest#testWriteRead
[m[m07.11.2021 - 16:16:47.649 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#testParse
[m[m07.11.2021 - 16:16:47.657 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#getColumnNameReturnsNullIfColumnNumberIsTooLarge
[m[m07.11.2021 - 16:16:47.665 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#columnNameMappingShouldBeCaseInsensitive
[m[m07.11.2021 - 16:16:47.674 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#correctlyParseNullString
[m[m07.11.2021 - 16:16:47.682 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#correctlyParserNullObject
[m[m07.11.2021 - 16:16:47.691 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testParseLine
[m[m07.11.2021 - 16:16:47.699 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testSpecialCharacters
[m[m07.11.2021 - 16:16:47.707 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#parseLineWithBothEscapeAndQuoteChar
[m[m07.11.2021 - 16:16:47.716 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testParseLineWithNoEscapeChar
[m[m07.11.2021 - 16:16:47.724 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#parseLineWithNoEscapeCharAndQuotes
[m[m07.11.2021 - 16:16:47.732 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testWriteAllAsList
[m[m07.11.2021 - 16:16:47.741 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testWriteAllAsIterable
[m[m07.11.2021 - 16:16:47.749 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testWriteAllObjects
[m[m07.11.2021 - 16:16:47.758 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testNoQuoteChars
[m[m07.11.2021 - 16:16:47.766 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testNoQuoteCharsAndNoEscapeChars
[m[m07.11.2021 - 16:16:47.774 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testIntelligentQuotes
[m[m07.11.2021 - 16:16:47.783 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testNullValues
[m[m07.11.2021 - 16:16:47.791 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testStreamFlushing
[m[m07.11.2021 - 16:16:47.799 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#flushWillThrowIOException
[m[m07.11.2021 - 16:16:47.807 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#flushQuietlyWillNotThrowException
[m[m07.11.2021 - 16:16:47.818 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testAlternateEscapeChar
[m[m07.11.2021 - 16:16:47.826 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#embeddedQuoteInString
[m[m07.11.2021 - 16:16:47.834 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testNoQuotingNoEscaping
[m[m07.11.2021 - 16:16:47.843 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testNestedQuotes
[m[m07.11.2021 - 16:16:47.851 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testAlternateLineFeeds
[m[m07.11.2021 - 16:16:47.859 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testResultSetWithHeaders
[m[m07.11.2021 - 16:16:47.868 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testMultiLineResultSetWithHeaders
[m[m07.11.2021 - 16:16:47.876 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testResultSetWithoutHeaders
[m[m07.11.2021 - 16:16:47.884 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testMultiLineResultSetWithoutHeaders
[m[m07.11.2021 - 16:16:47.892 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testResultSetTrim
[m[m07.11.2021 - 16:16:47.901 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#needToSetBothQuoteAndEscapeCharIfYouWantThemToBeTheSame
[m[m07.11.2021 - 16:16:47.909 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#issue123SeparatorEscapedWhenQuoteIsNoQuoteChar
[m[m07.11.2021 - 16:16:47.917 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#issue123SeparatorEscapedWhenQuoteIsNoQuoteCharSpecifingNoneDefaultEscapeChar
[m[m07.11.2021 - 16:16:47.926 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testIOException
[m[m07.11.2021 - 16:16:47.934 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#checkErrorReturnsTrueWhenPassedInPrintWriter
[m[m07.11.2021 - 16:16:47.942 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenExceptionIsThrown
[m[m07.11.2021 - 16:16:47.951 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionLineWhenExceptionIsThrown
[m[m07.11.2021 - 16:16:47.959 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanTest#parseBeanWithNoAnnotations
[m[m07.11.2021 - 16:16:47.968 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanTest#parseBeanWithAnnotations
[m[m07.11.2021 - 16:16:47.976 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanTest#parseBeanWithSomeAnnotations
[m[m07.11.2021 - 16:16:47.984 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithAllValidDataTypes
[m[m07.11.2021 - 16:16:47.992 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithPrivateField
[m[m07.11.2021 - 16:16:48.001 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithFieldsOfAllAccessModifierTypes
[m[m07.11.2021 - 16:16:48.009 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanTest#bug133ShouldNotThrowNullPointerExceptionWhenProcessingEmptyWithNoAnnotations
[m[m07.11.2021 - 16:16:48.017 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenUnsupportedDataTypeUsedInAnnotatedBean
[m[m07.11.2021 - 16:16:48.026 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenRequiredFieldNotProvidedInAnnotatedBean
[m[m07.11.2021 - 16:16:48.034 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenParseWithoutArgumentsIsCalled
[m[m07.11.2021 - 16:16:48.042 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenOnlyReaderIsSpecifiedToParseWithoutArguments
[m[m07.11.2021 - 16:16:48.050 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenOnlyMapperIsSpecifiedToParseWithoutArguments
[m[m07.11.2021 - 16:16:48.059 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenReaderNotProvidedInBuilder
[m[m07.11.2021 - 16:16:48.067 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenTypeAndMapperNotProvidedInBuilder
[m[m07.11.2021 - 16:16:48.075 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanTest#testMinimumBuilder
[m[m07.11.2021 - 16:16:48.083 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanTest#testMaximumBuilder
[m[m07.11.2021 - 16:16:48.093 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanTest#testColumnMappingStrategyWithBuilder
[m[m07.11.2021 - 16:16:48.101 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanTest#testMappingWithoutAnnotationsWithBuilder
[m[m07.11.2021 - 16:16:48.110 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#canPrintColumnNames
[m[m07.11.2021 - 16:16:48.119 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#getObjectFromResultSet
[m[m07.11.2021 - 16:16:48.128 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#getBitFromResultSet
[m[m07.11.2021 - 16:16:48.137 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#getBooleanFromResultSet
[m[m07.11.2021 - 16:16:48.147 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#getBigIntFromResultSet
[m[m07.11.2021 - 16:16:48.156 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#getBigDecimalFromResultSet
[m[m07.11.2021 - 16:16:48.164 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#issue121ConvertingNaNForDoubleOrFloat
[m[m07.11.2021 - 16:16:48.173 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#issue121ConvertingPositiveInfinityForDoubleOrFloat
[m[m07.11.2021 - 16:16:48.182 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#issue121ConvertingNegativeInfinityForDoubleOrFloat
[m[m07.11.2021 - 16:16:48.190 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#getIntegerFromResultSet
[m[m07.11.2021 - 16:16:48.199 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#getCharFromResultSet
[m[m07.11.2021 - 16:16:48.208 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#getCharHandlesNulls
[m[m07.11.2021 - 16:16:48.216 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#getUnsupportedFromResultSet
[m[m07.11.2021 - 16:16:48.225 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#getDateFromResultSet
[m[m07.11.2021 - 16:16:48.234 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#getDateFromResultSetUsingCustomFormat
[m[m07.11.2021 - 16:16:48.243 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#setDateFormat
[m[m07.11.2021 - 16:16:48.251 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#getTimeFromResultSet
[m[m07.11.2021 - 16:16:48.260 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#getTimestampFromResultSet
[m[m07.11.2021 - 16:16:48.268 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#getTimestampFromResultSetWithCustomFormat
[m[m07.11.2021 - 16:16:48.277 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#setDateTimeFormat
[m[m07.11.2021 - 16:16:48.286 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#getClobFromResultSet
[m[m07.11.2021 - 16:16:48.294 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#getEmptyClobFromResultSet
[m[m07.11.2021 - 16:16:48.303 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#getLargeClobFromResultSet
[m[m07.11.2021 - 16:16:48.312 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.UniCodeTest#canParseUnicode
[m[m07.11.2021 - 16:16:48.321 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.UniCodeTest#readerTest
[m[m07.11.2021 - 16:16:48.330 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.UniCodeTest#writerTest
[m[m07.11.2021 - 16:16:48.338 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.UniCodeTest#runUniCodeThroughCSVReader
[m[m07.11.2021 - 16:16:48.347 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.UniCodeTest#runUniCodeThroughCSVWriter
[m[m07.11.2021 - 16:16:48.355 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.UniCodeTest#runASCIIThroughCSVWriter
[m[m07.11.2021 - 16:16:48.364 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.UniCodeTest#writeThenReadAscii
[m[m07.11.2021 - 16:16:48.372 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.UniCodeTest#writeThenReadTwiceAscii
[m[m07.11.2021 - 16:16:48.381 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.UniCodeTest#writeThenReadTwiceUnicode
[m[m07.11.2021 - 16:16:48.389 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.UniCodeTest#writeThenReadTwiceMixedUnicode
[m[m07.11.2021 - 16:16:48.398 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserBuilderTest#testDefaultBuilder
[m[m07.11.2021 - 16:16:48.406 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserBuilderTest#testWithSeparator
[m[m07.11.2021 - 16:16:48.415 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserBuilderTest#testWithQuoteChar
[m[m07.11.2021 - 16:16:48.423 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserBuilderTest#testWithEscapeChar
[m[m07.11.2021 - 16:16:48.431 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserBuilderTest#testWithStrictQuotes
[m[m07.11.2021 - 16:16:48.440 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserBuilderTest#testWithIgnoreLeadingWhiteSpace
[m[m07.11.2021 - 16:16:48.448 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserBuilderTest#testWithIgnoreQuotations
[m[m07.11.2021 - 16:16:48.457 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndexBeforeMappingSetReturnsNull
[m[m07.11.2021 - 16:16:48.466 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndexEmptyMappingReturnsNull
[m[m07.11.2021 - 16:16:48.474 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndex
[m[m07.11.2021 - 16:16:48.484 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.ColumnPositionMappingStrategyTest#testParse
[m[m07.11.2021 - 16:16:48.493 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.ColumnPositionMappingStrategyTest#testParseWithTrailingSpaces
[m[m07.11.2021 - 16:16:48.501 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnMapping
[m[m07.11.2021 - 16:16:48.509 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnNames
[m[m07.11.2021 - 16:16:48.518 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnNamesArray
[m[m07.11.2021 - 16:16:48.526 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenNullArray
[m[m07.11.2021 - 16:16:48.535 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenNullColumnName
[m[m07.11.2021 - 16:16:48.543 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenEmptyMapping
[m[m07.11.2021 - 16:16:48.551 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.ColumnPositionMappingStrategyTest#throwsIllegalStateExceptionIfTypeNotSet
[m[m07.11.2021 - 16:16:48.559 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetColumnNameHelperServiceTest#canPrintColumnNames
[m[m07.11.2021 - 16:16:48.567 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetColumnNameHelperServiceTest#setColumnNames
[m[m07.11.2021 - 16:16:48.576 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetColumnNameHelperServiceTest#getColumnNamesWithSubsetOutOfOrder
[m[m07.11.2021 - 16:16:48.584 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetColumnNameHelperServiceTest#numberOfColumnsNamesMustMatchNumberOfHeaders
[m[m07.11.2021 - 16:16:48.592 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveNullColumnName
[m[m07.11.2021 - 16:16:48.600 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveEmptyColumnName
[m[m07.11.2021 - 16:16:48.609 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveSpaceColumnName
[m[m07.11.2021 - 16:16:48.617 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveNullHeaderName
[m[m07.11.2021 - 16:16:48.625 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveEmptyHeaderName
[m[m07.11.2021 - 16:16:48.633 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveSpaceHeaderName
[m[m07.11.2021 - 16:16:48.642 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetColumnNameHelperServiceTest#getColumnNamesThrowsExceptionIfColumnDoesNotExist
[m[m07.11.2021 - 16:16:48.650 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetColumnNameHelperServiceTest#getBooleanFromResultSet
[m[m07.11.2021 - 16:16:48.658 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetColumnNameHelperServiceTest#getBooleanSubsetFromResultSet
[m[m07.11.2021 - 16:16:48.666 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetColumnNameHelperServiceTest#getSubsetWithTrim
[m[m07.11.2021 - 16:16:48.675 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetColumnNameHelperServiceTest#getCharSetWithNullAndTrim
[m[m07.11.2021 - 16:16:48.683 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetColumnNameHelperServiceTest#getTimestampFromResultSetWithCustomFormat
[m[m07.11.2021 - 16:16:48.691 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetColumnNameHelperServiceTest#getSubsetFromResultSetWithCustomFormat
[m[m07.11.2021 - 16:16:48.699 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of integrationTest.SR34.SR34Test#defaultReaderInterpetsNullCorrectly
[m[m07.11.2021 - 16:16:48.707 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of integrationTest.SR34.SR34Test#doubleBufferedReaderInterpetsNullCorrectly
[m[m07.11.2021 - 16:16:48.716 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of integrationTest.SR34.SR34Test#usingNullAsDelimeterWillFailBecauseYouAreEscapingTheQuote
[m[m07.11.2021 - 16:16:48.724 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of integrationTest.SR34.SR34Test#youNeedToEscapeTheNullCharactersIfUsingNullAsEscape
[m[m07.11.2021 - 16:16:48.732 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.RFC4180ParserBuilderTest#testDefaultBuilder
[m[m07.11.2021 - 16:16:48.740 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.RFC4180ParserBuilderTest#testWithSeparator
[m[m07.11.2021 - 16:16:48.749 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.RFC4180ParserBuilderTest#testWithQuoteChar
[m[m07.11.2021 - 16:16:48.825 [INFO ] LineCoverageStrategy.assembleReport() - Successfully created coverage report: 1370 of 1554 lines covered. Coverage score: 0.8815958815958816
[m[32m07.11.2021 - 16:16:48.867 [DEBUG] LineCoverageStrategy.cleanup() - Cleanup successful!
[m[m07.11.2021 - 16:16:49.074 [INFO ] CoverageReportExporter.exportToFile() - Wrote coverage report to file /home/lukas/workspace/master-benchmark/results/opencsv/lc/coverage/LineCoverageReport.cvg
[m* Coverage Calculation took 149.76 seconds
