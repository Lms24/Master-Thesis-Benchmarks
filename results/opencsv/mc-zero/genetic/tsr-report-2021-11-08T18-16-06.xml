<?xml version="1.0" encoding="UTF-8"?>
<report>
  <meta>
    <nrOriginalTestCases>286</nrOriginalTestCases>
    <nrRetainedTestCases>234</nrRetainedTestCases>
    <nrRemovedTestCases>52</nrRemovedTestCases>
  </meta>
  <retainedTestCases>
    <testCase>
      <name>testColumnNameTranslationWithLineFiltering</name>
      <className>com.opencsv.bean.CsvToBeanFilterTest</className>
    </testCase>
    <testCase>
      <name>issue115StandardReadFailsAfterALargeNumberOfReads</name>
      <className>integrationTest.isClosed.isClosedTest</className>
    </testCase>
    <testCase>
      <name>parseBeanWithNoAnnotations</name>
      <className>com.opencsv.bean.CsvToBeanDoubleTest</className>
    </testCase>
    <testCase>
      <name>testParseLine</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>parseSimpleString</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>parseSimpleQuotedString</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>parseSimpleQuotedStringWithSpaces</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>testParsedLineWithInternalQuota</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>parseQuotedStringWithDefinedSeperator</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>parseQuotedStringWithDefinedSeperatorAndQuote</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>parseEmptyElements</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>parseMultiLinedQuoted</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>parseMultiLinedQuotedwithCarriageReturns</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>testADoubleQuoteAsDataElement</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>testEscapedDoubleQuoteAsDataElement</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>parseQuotedQuoteCharacters</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>parseMultipleQuotes</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>parseTrickyString</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>testAMultiLineInsideQuotes</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>testStrictQuoteSimple</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>testNotStrictQuoteSimple</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>testStrictQuoteWithSpacesAndTabs</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>testNotStrictQuoteWithSpacesAndTabs</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>testStrictQuoteWithGarbage</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>testCanIgnoreQuotations</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>testFalseIgnoreQuotations</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>testIssue3314579</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>testIssue2263439</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>testIssue2859181</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>anIOExceptionThrownifStringEndsInsideAQuotedString</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>parseLineMultiAllowsQuotesAcrossMultipleLines</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>pendingIsClearedAfterCallToParseLine</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>returnPendingIfNullIsPassedIntoParseLineMulti</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>spacesAtEndOfQuotedStringDoNotCountIfStrictQuotesIsTrue</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>returnNullWhenNullPassedIn</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>validateEscapeStringBeforeRealTest</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>whichCharactersAreEscapable</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>whitespaceBeforeEscape</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>testIssue2958242WithoutQuotes</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>quoteAndEscapeCannotBeTheSame</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>quoteAndEscapeCanBeTheSameIfNull</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>separatorCharacterCannotBeNull</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>separatorAndEscapeCannotBeTheSame</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>separatorAndQuoteCannotBeTheSame</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>parserHandlesNullInString</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>featureRequest60ByDefaultEmptyFieldsAreBlank</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>featureRequest60TreatEmptyFieldsAsNull</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>featureRequest60TreatEmptyDelimitedFieldsAsNull</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>featureRequest60TreatEmptyFieldsDelimitedOrNotAsNull</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>testStrictQuotesEndsFieldAtQuote</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>testStrictQuotesEndsFieldAtQuoteWithEscapedQuoteInMiddle</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>testNotStrictQuotesAllowsEmbeddedEscapedQuote</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>testNotStrictQuotesAllowsEmbeddedQuote</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>issue93ParsingEmptyDoubleQuoteField</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>throwRuntimeExceptionWhenExceptionIsThrown</name>
      <className>com.opencsv.bean.BeanToCsvTest</className>
    </testCase>
    <testCase>
      <name>testWriteQuotes</name>
      <className>com.opencsv.bean.BeanToCsvTest</className>
    </testCase>
    <testCase>
      <name>writeBeansOneAtATime</name>
      <className>com.opencsv.bean.BeanToCsvTest</className>
    </testCase>
    <testCase>
      <name>testWriteQuotesWithAnnotatedBean</name>
      <className>com.opencsv.bean.BeanToCsvTest</className>
    </testCase>
    <testCase>
      <name>testWriteNulls</name>
      <className>com.opencsv.bean.BeanToCsvTest</className>
    </testCase>
    <testCase>
      <name>getColumnIndexWithoutHeaderThrowsException</name>
      <className>com.opencsv.bean.HeaderColumnNameMappingStrategyTest</className>
    </testCase>
    <testCase>
      <name>getColumnIndexAfterParse</name>
      <className>com.opencsv.bean.HeaderColumnNameMappingStrategyTest</className>
    </testCase>
    <testCase>
      <name>testQuotedString</name>
      <className>com.opencsv.bean.HeaderColumnNameMappingStrategyTest</className>
    </testCase>
    <testCase>
      <name>throwsIllegalStateExceptionIfTypeNotSet</name>
      <className>com.opencsv.bean.HeaderColumnNameMappingStrategyTest</className>
    </testCase>
    <testCase>
      <name>displayStringArray</name>
      <className>com.opencsv.TestUtilitiesTest</className>
    </testCase>
    <testCase>
      <name>writeBadData</name>
      <className>com.opencsv.bean.StatefulBeanToCsvTest</className>
    </testCase>
    <testCase>
      <name>writeGoodDataCustom</name>
      <className>com.opencsv.bean.StatefulBeanToCsvTest</className>
    </testCase>
    <testCase>
      <name>readerExceptionCausesRunTimeException</name>
      <className>com.opencsv.CSVIteratorTest</className>
    </testCase>
    <testCase>
      <name>removethrowsUnsupportedOperationException</name>
      <className>com.opencsv.CSVIteratorTest</className>
    </testCase>
    <testCase>
      <name>initialReadReturnsStrings</name>
      <className>com.opencsv.CSVIteratorTest</className>
    </testCase>
    <testCase>
      <name>testDefaultBuilder</name>
      <className>com.opencsv.CSVReaderBuilderTest</className>
    </testCase>
    <testCase>
      <name>testNullReader</name>
      <className>com.opencsv.CSVReaderBuilderTest</className>
    </testCase>
    <testCase>
      <name>testWithCSVParserNull</name>
      <className>com.opencsv.CSVReaderBuilderTest</className>
    </testCase>
    <testCase>
      <name>testWithCSVParser</name>
      <className>com.opencsv.CSVReaderBuilderTest</className>
    </testCase>
    <testCase>
      <name>testWithSkipLines</name>
      <className>com.opencsv.CSVReaderBuilderTest</className>
    </testCase>
    <testCase>
      <name>testWithKeepCR</name>
      <className>com.opencsv.CSVReaderBuilderTest</className>
    </testCase>
    <testCase>
      <name>testWithSkipLinesZero</name>
      <className>com.opencsv.CSVReaderBuilderTest</className>
    </testCase>
    <testCase>
      <name>testWithSkipLinesNegative</name>
      <className>com.opencsv.CSVReaderBuilderTest</className>
    </testCase>
    <testCase>
      <name>testWithVerifyReader</name>
      <className>com.opencsv.CSVReaderBuilderTest</className>
    </testCase>
    <testCase>
      <name>builderWithNullFieldIndicator</name>
      <className>com.opencsv.CSVReaderBuilderTest</className>
    </testCase>
    <testCase>
      <name>testParseLine</name>
      <className>com.opencsv.CSVReaderTest</className>
    </testCase>
    <testCase>
      <name>readerCanHandleNullInString</name>
      <className>com.opencsv.CSVReaderTest</className>
    </testCase>
    <testCase>
      <name>testParseLineStrictQuote</name>
      <className>com.opencsv.CSVReaderTest</className>
    </testCase>
    <testCase>
      <name>testParseAll</name>
      <className>com.opencsv.CSVReaderTest</className>
    </testCase>
    <testCase>
      <name>parseQuotedStringWithDefinedSeperator</name>
      <className>com.opencsv.CSVReaderTest</className>
    </testCase>
    <testCase>
      <name>testSkippingLines</name>
      <className>com.opencsv.CSVReaderTest</className>
    </testCase>
    <testCase>
      <name>linesAndRecordsRead</name>
      <className>com.opencsv.CSVReaderTest</className>
    </testCase>
    <testCase>
      <name>testSkippingLinesWithDifferentEscape</name>
      <className>com.opencsv.CSVReaderTest</className>
    </testCase>
    <testCase>
      <name>testNormalParsedLine</name>
      <className>com.opencsv.CSVReaderTest</className>
    </testCase>
    <testCase>
      <name>testASingleQuoteAsDataElement</name>
      <className>com.opencsv.CSVReaderTest</className>
    </testCase>
    <testCase>
      <name>testASingleQuoteAsDataElementWithEmptyField</name>
      <className>com.opencsv.CSVReaderTest</className>
    </testCase>
    <testCase>
      <name>testSpacesAtEndOfString</name>
      <className>com.opencsv.CSVReaderTest</className>
    </testCase>
    <testCase>
      <name>testEscapedQuote</name>
      <className>com.opencsv.CSVReaderTest</className>
    </testCase>
    <testCase>
      <name>testSingleQuoteWhenDoubleQuoteIsQuoteChar</name>
      <className>com.opencsv.CSVReaderTest</className>
    </testCase>
    <testCase>
      <name>testQuotedParsedLine</name>
      <className>com.opencsv.CSVReaderTest</className>
    </testCase>
    <testCase>
      <name>bug106ParseLineWithCarriageReturnNewLineStrictQuotes</name>
      <className>com.opencsv.CSVReaderTest</className>
    </testCase>
    <testCase>
      <name>testIssue2992134OutOfPlaceQuotes</name>
      <className>com.opencsv.CSVReaderTest</className>
    </testCase>
    <testCase>
      <name>quoteAndEscapeMustBeDifferent</name>
      <className>com.opencsv.CSVReaderTest</className>
    </testCase>
    <testCase>
      <name>separatorAndEscapeMustBeDifferent</name>
      <className>com.opencsv.CSVReaderTest</className>
    </testCase>
    <testCase>
      <name>separatorAndQuoteMustBeDifferent</name>
      <className>com.opencsv.CSVReaderTest</className>
    </testCase>
    <testCase>
      <name>testIteratorFunctionality</name>
      <className>com.opencsv.CSVReaderTest</className>
    </testCase>
    <testCase>
      <name>canCloseReader</name>
      <className>com.opencsv.CSVReaderTest</className>
    </testCase>
    <testCase>
      <name>canCreateIteratorFromReader</name>
      <className>com.opencsv.CSVReaderTest</className>
    </testCase>
    <testCase>
      <name>attemptToReadCloseStreamReturnsNull</name>
      <className>com.opencsv.CSVReaderTest</className>
    </testCase>
    <testCase>
      <name>testIssue102</name>
      <className>com.opencsv.CSVReaderTest</className>
    </testCase>
    <testCase>
      <name>issue108ReaderPlaysWellWithChannels</name>
      <className>com.opencsv.CSVReaderTest</className>
    </testCase>
    <testCase>
      <name>featureRequest60ByDefaultEmptyFieldsAreBlank</name>
      <className>com.opencsv.CSVReaderTest</className>
    </testCase>
    <testCase>
      <name>featureRequest60TreatEmptyFieldsAsNull</name>
      <className>com.opencsv.CSVReaderTest</className>
    </testCase>
    <testCase>
      <name>featureRequest60TreatEmptyDelimitedFieldsAsNull</name>
      <className>com.opencsv.CSVReaderTest</className>
    </testCase>
    <testCase>
      <name>featureRequest60TreatEmptyFieldsDelimitedOrNotAsNull</name>
      <className>com.opencsv.CSVReaderTest</className>
    </testCase>
    <testCase>
      <name>lineReaderWillRemoveCR</name>
      <className>com.opencsv.stream.reader.LineReaderTest</className>
    </testCase>
    <testCase>
      <name>lineReaderNoCRWillHandleStringWithNoLinefeed</name>
      <className>com.opencsv.stream.reader.LineReaderTest</className>
    </testCase>
    <testCase>
      <name>lineReaderNoCRWillHandleEmptyString</name>
      <className>com.opencsv.stream.reader.LineReaderTest</className>
    </testCase>
    <testCase>
      <name>testCase7</name>
      <className>com.opencsv.bean.AnnotationTest</className>
    </testCase>
    <testCase>
      <name>testCase63</name>
      <className>com.opencsv.bean.AnnotationTest</className>
    </testCase>
    <testCase>
      <name>testBadDataByName</name>
      <className>com.opencsv.bean.AnnotationTest</className>
    </testCase>
    <testCase>
      <name>testCase16</name>
      <className>com.opencsv.bean.AnnotationTest</className>
    </testCase>
    <testCase>
      <name>testCase60</name>
      <className>com.opencsv.bean.AnnotationTest</className>
    </testCase>
    <testCase>
      <name>testBadDataCustomByName</name>
      <className>com.opencsv.bean.AnnotationTest</className>
    </testCase>
    <testCase>
      <name>testBadConverter</name>
      <className>com.opencsv.bean.AnnotationTest</className>
    </testCase>
    <testCase>
      <name>codeCoverageExceptions</name>
      <className>com.opencsv.bean.AnnotationTest</className>
    </testCase>
    <testCase>
      <name>nextLine</name>
      <className>com.opencsv.bean.IterableCSVToBeanTest</className>
    </testCase>
    <testCase>
      <name>readWithIterator</name>
      <className>com.opencsv.bean.IterableCSVToBeanTest</className>
    </testCase>
    <testCase>
      <name>readWithIteratorAndFilter</name>
      <className>com.opencsv.bean.IterableCSVToBeanTest</className>
    </testCase>
    <testCase>
      <name>testWriteRead</name>
      <className>com.opencsv.OpencsvTest</className>
    </testCase>
    <testCase>
      <name>getColumnNameReturnsNullIfColumnNumberIsTooLarge</name>
      <className>com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest</className>
    </testCase>
    <testCase>
      <name>columnNameMappingShouldBeCaseInsensitive</name>
      <className>com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest</className>
    </testCase>
    <testCase>
      <name>correctlyParseNullString</name>
      <className>com.opencsv.CSVWriterTest</className>
    </testCase>
    <testCase>
      <name>correctlyParserNullObject</name>
      <className>com.opencsv.CSVWriterTest</className>
    </testCase>
    <testCase>
      <name>testParseLine</name>
      <className>com.opencsv.CSVWriterTest</className>
    </testCase>
    <testCase>
      <name>testSpecialCharacters</name>
      <className>com.opencsv.CSVWriterTest</className>
    </testCase>
    <testCase>
      <name>parseLineWithBothEscapeAndQuoteChar</name>
      <className>com.opencsv.CSVWriterTest</className>
    </testCase>
    <testCase>
      <name>testParseLineWithNoEscapeChar</name>
      <className>com.opencsv.CSVWriterTest</className>
    </testCase>
    <testCase>
      <name>parseLineWithNoEscapeCharAndQuotes</name>
      <className>com.opencsv.CSVWriterTest</className>
    </testCase>
    <testCase>
      <name>testWriteAllAsList</name>
      <className>com.opencsv.CSVWriterTest</className>
    </testCase>
    <testCase>
      <name>testWriteAllAsIterable</name>
      <className>com.opencsv.CSVWriterTest</className>
    </testCase>
    <testCase>
      <name>testWriteAllObjects</name>
      <className>com.opencsv.CSVWriterTest</className>
    </testCase>
    <testCase>
      <name>testNoQuoteChars</name>
      <className>com.opencsv.CSVWriterTest</className>
    </testCase>
    <testCase>
      <name>testNoQuoteCharsAndNoEscapeChars</name>
      <className>com.opencsv.CSVWriterTest</className>
    </testCase>
    <testCase>
      <name>testIntelligentQuotes</name>
      <className>com.opencsv.CSVWriterTest</className>
    </testCase>
    <testCase>
      <name>testNullValues</name>
      <className>com.opencsv.CSVWriterTest</className>
    </testCase>
    <testCase>
      <name>testStreamFlushing</name>
      <className>com.opencsv.CSVWriterTest</className>
    </testCase>
    <testCase>
      <name>flushWillThrowIOException</name>
      <className>com.opencsv.CSVWriterTest</className>
    </testCase>
    <testCase>
      <name>flushQuietlyWillNotThrowException</name>
      <className>com.opencsv.CSVWriterTest</className>
    </testCase>
    <testCase>
      <name>testAlternateEscapeChar</name>
      <className>com.opencsv.CSVWriterTest</className>
    </testCase>
    <testCase>
      <name>embeddedQuoteInString</name>
      <className>com.opencsv.CSVWriterTest</className>
    </testCase>
    <testCase>
      <name>testNoQuotingNoEscaping</name>
      <className>com.opencsv.CSVWriterTest</className>
    </testCase>
    <testCase>
      <name>testNestedQuotes</name>
      <className>com.opencsv.CSVWriterTest</className>
    </testCase>
    <testCase>
      <name>testAlternateLineFeeds</name>
      <className>com.opencsv.CSVWriterTest</className>
    </testCase>
    <testCase>
      <name>testResultSetWithHeaders</name>
      <className>com.opencsv.CSVWriterTest</className>
    </testCase>
    <testCase>
      <name>testMultiLineResultSetWithHeaders</name>
      <className>com.opencsv.CSVWriterTest</className>
    </testCase>
    <testCase>
      <name>testMultiLineResultSetWithoutHeaders</name>
      <className>com.opencsv.CSVWriterTest</className>
    </testCase>
    <testCase>
      <name>testResultSetTrim</name>
      <className>com.opencsv.CSVWriterTest</className>
    </testCase>
    <testCase>
      <name>needToSetBothQuoteAndEscapeCharIfYouWantThemToBeTheSame</name>
      <className>com.opencsv.CSVWriterTest</className>
    </testCase>
    <testCase>
      <name>issue123SeparatorEscapedWhenQuoteIsNoQuoteChar</name>
      <className>com.opencsv.CSVWriterTest</className>
    </testCase>
    <testCase>
      <name>testIOException</name>
      <className>com.opencsv.CSVWriterTest</className>
    </testCase>
    <testCase>
      <name>checkErrorReturnsTrueWhenPassedInPrintWriter</name>
      <className>com.opencsv.CSVWriterTest</className>
    </testCase>
    <testCase>
      <name>throwRuntimeExceptionWhenExceptionIsThrown</name>
      <className>com.opencsv.bean.CsvToBeanTest</className>
    </testCase>
    <testCase>
      <name>throwRuntimeExceptionLineWhenExceptionIsThrown</name>
      <className>com.opencsv.bean.CsvToBeanTest</className>
    </testCase>
    <testCase>
      <name>parseBeanWithNoAnnotations</name>
      <className>com.opencsv.bean.CsvToBeanTest</className>
    </testCase>
    <testCase>
      <name>parseBeanWithSomeAnnotations</name>
      <className>com.opencsv.bean.CsvToBeanTest</className>
    </testCase>
    <testCase>
      <name>parseAnnotatedBeanWithPrivateField</name>
      <className>com.opencsv.bean.CsvToBeanTest</className>
    </testCase>
    <testCase>
      <name>throwIllegalStateWhenParseWithoutArgumentsIsCalled</name>
      <className>com.opencsv.bean.CsvToBeanTest</className>
    </testCase>
    <testCase>
      <name>throwIllegalStateWhenOnlyReaderIsSpecifiedToParseWithoutArguments</name>
      <className>com.opencsv.bean.CsvToBeanTest</className>
    </testCase>
    <testCase>
      <name>throwIllegalStateWhenReaderNotProvidedInBuilder</name>
      <className>com.opencsv.bean.CsvToBeanTest</className>
    </testCase>
    <testCase>
      <name>testMaximumBuilder</name>
      <className>com.opencsv.bean.CsvToBeanTest</className>
    </testCase>
    <testCase>
      <name>testColumnMappingStrategyWithBuilder</name>
      <className>com.opencsv.bean.CsvToBeanTest</className>
    </testCase>
    <testCase>
      <name>canPrintColumnNames</name>
      <className>com.opencsv.ResultSetHelperServiceTest</className>
    </testCase>
    <testCase>
      <name>getObjectFromResultSet</name>
      <className>com.opencsv.ResultSetHelperServiceTest</className>
    </testCase>
    <testCase>
      <name>getBitFromResultSet</name>
      <className>com.opencsv.ResultSetHelperServiceTest</className>
    </testCase>
    <testCase>
      <name>getBooleanFromResultSet</name>
      <className>com.opencsv.ResultSetHelperServiceTest</className>
    </testCase>
    <testCase>
      <name>getBigIntFromResultSet</name>
      <className>com.opencsv.ResultSetHelperServiceTest</className>
    </testCase>
    <testCase>
      <name>getBigDecimalFromResultSet</name>
      <className>com.opencsv.ResultSetHelperServiceTest</className>
    </testCase>
    <testCase>
      <name>issue121ConvertingNaNForDoubleOrFloat</name>
      <className>com.opencsv.ResultSetHelperServiceTest</className>
    </testCase>
    <testCase>
      <name>issue121ConvertingPositiveInfinityForDoubleOrFloat</name>
      <className>com.opencsv.ResultSetHelperServiceTest</className>
    </testCase>
    <testCase>
      <name>issue121ConvertingNegativeInfinityForDoubleOrFloat</name>
      <className>com.opencsv.ResultSetHelperServiceTest</className>
    </testCase>
    <testCase>
      <name>getIntegerFromResultSet</name>
      <className>com.opencsv.ResultSetHelperServiceTest</className>
    </testCase>
    <testCase>
      <name>getCharFromResultSet</name>
      <className>com.opencsv.ResultSetHelperServiceTest</className>
    </testCase>
    <testCase>
      <name>getCharHandlesNulls</name>
      <className>com.opencsv.ResultSetHelperServiceTest</className>
    </testCase>
    <testCase>
      <name>getUnsupportedFromResultSet</name>
      <className>com.opencsv.ResultSetHelperServiceTest</className>
    </testCase>
    <testCase>
      <name>getDateFromResultSet</name>
      <className>com.opencsv.ResultSetHelperServiceTest</className>
    </testCase>
    <testCase>
      <name>setDateFormat</name>
      <className>com.opencsv.ResultSetHelperServiceTest</className>
    </testCase>
    <testCase>
      <name>getTimeFromResultSet</name>
      <className>com.opencsv.ResultSetHelperServiceTest</className>
    </testCase>
    <testCase>
      <name>getTimestampFromResultSet</name>
      <className>com.opencsv.ResultSetHelperServiceTest</className>
    </testCase>
    <testCase>
      <name>getTimestampFromResultSetWithCustomFormat</name>
      <className>com.opencsv.ResultSetHelperServiceTest</className>
    </testCase>
    <testCase>
      <name>setDateTimeFormat</name>
      <className>com.opencsv.ResultSetHelperServiceTest</className>
    </testCase>
    <testCase>
      <name>getClobFromResultSet</name>
      <className>com.opencsv.ResultSetHelperServiceTest</className>
    </testCase>
    <testCase>
      <name>getEmptyClobFromResultSet</name>
      <className>com.opencsv.ResultSetHelperServiceTest</className>
    </testCase>
    <testCase>
      <name>getLargeClobFromResultSet</name>
      <className>com.opencsv.ResultSetHelperServiceTest</className>
    </testCase>
    <testCase>
      <name>canParseUnicode</name>
      <className>com.opencsv.UniCodeTest</className>
    </testCase>
    <testCase>
      <name>readerTest</name>
      <className>com.opencsv.UniCodeTest</className>
    </testCase>
    <testCase>
      <name>runUniCodeThroughCSVReader</name>
      <className>com.opencsv.UniCodeTest</className>
    </testCase>
    <testCase>
      <name>runUniCodeThroughCSVWriter</name>
      <className>com.opencsv.UniCodeTest</className>
    </testCase>
    <testCase>
      <name>runASCIIThroughCSVWriter</name>
      <className>com.opencsv.UniCodeTest</className>
    </testCase>
    <testCase>
      <name>testDefaultBuilder</name>
      <className>com.opencsv.CSVParserBuilderTest</className>
    </testCase>
    <testCase>
      <name>testWithSeparator</name>
      <className>com.opencsv.CSVParserBuilderTest</className>
    </testCase>
    <testCase>
      <name>testWithQuoteChar</name>
      <className>com.opencsv.CSVParserBuilderTest</className>
    </testCase>
    <testCase>
      <name>testWithEscapeChar</name>
      <className>com.opencsv.CSVParserBuilderTest</className>
    </testCase>
    <testCase>
      <name>testWithStrictQuotes</name>
      <className>com.opencsv.CSVParserBuilderTest</className>
    </testCase>
    <testCase>
      <name>testWithIgnoreLeadingWhiteSpace</name>
      <className>com.opencsv.CSVParserBuilderTest</className>
    </testCase>
    <testCase>
      <name>testWithIgnoreQuotations</name>
      <className>com.opencsv.CSVParserBuilderTest</className>
    </testCase>
    <testCase>
      <name>getColumnIndexEmptyMappingReturnsNull</name>
      <className>com.opencsv.bean.ColumnPositionMappingStrategyTest</className>
    </testCase>
    <testCase>
      <name>getColumnIndex</name>
      <className>com.opencsv.bean.ColumnPositionMappingStrategyTest</className>
    </testCase>
    <testCase>
      <name>testParse</name>
      <className>com.opencsv.bean.ColumnPositionMappingStrategyTest</className>
    </testCase>
    <testCase>
      <name>testParseWithTrailingSpaces</name>
      <className>com.opencsv.bean.ColumnPositionMappingStrategyTest</className>
    </testCase>
    <testCase>
      <name>testGetColumnNamesArray</name>
      <className>com.opencsv.bean.ColumnPositionMappingStrategyTest</className>
    </testCase>
    <testCase>
      <name>getColumnNamesWhenNullArray</name>
      <className>com.opencsv.bean.ColumnPositionMappingStrategyTest</className>
    </testCase>
    <testCase>
      <name>getColumnNamesWhenNullColumnName</name>
      <className>com.opencsv.bean.ColumnPositionMappingStrategyTest</className>
    </testCase>
    <testCase>
      <name>getColumnNamesWhenEmptyMapping</name>
      <className>com.opencsv.bean.ColumnPositionMappingStrategyTest</className>
    </testCase>
    <testCase>
      <name>throwsIllegalStateExceptionIfTypeNotSet</name>
      <className>com.opencsv.bean.ColumnPositionMappingStrategyTest</className>
    </testCase>
    <testCase>
      <name>canPrintColumnNames</name>
      <className>com.opencsv.ResultSetColumnNameHelperServiceTest</className>
    </testCase>
    <testCase>
      <name>setColumnNames</name>
      <className>com.opencsv.ResultSetColumnNameHelperServiceTest</className>
    </testCase>
    <testCase>
      <name>getColumnNamesWithSubsetOutOfOrder</name>
      <className>com.opencsv.ResultSetColumnNameHelperServiceTest</className>
    </testCase>
    <testCase>
      <name>cannotHaveNullColumnName</name>
      <className>com.opencsv.ResultSetColumnNameHelperServiceTest</className>
    </testCase>
    <testCase>
      <name>cannotHaveEmptyColumnName</name>
      <className>com.opencsv.ResultSetColumnNameHelperServiceTest</className>
    </testCase>
    <testCase>
      <name>cannotHaveSpaceColumnName</name>
      <className>com.opencsv.ResultSetColumnNameHelperServiceTest</className>
    </testCase>
    <testCase>
      <name>cannotHaveNullHeaderName</name>
      <className>com.opencsv.ResultSetColumnNameHelperServiceTest</className>
    </testCase>
    <testCase>
      <name>cannotHaveEmptyHeaderName</name>
      <className>com.opencsv.ResultSetColumnNameHelperServiceTest</className>
    </testCase>
    <testCase>
      <name>cannotHaveSpaceHeaderName</name>
      <className>com.opencsv.ResultSetColumnNameHelperServiceTest</className>
    </testCase>
    <testCase>
      <name>getColumnNamesThrowsExceptionIfColumnDoesNotExist</name>
      <className>com.opencsv.ResultSetColumnNameHelperServiceTest</className>
    </testCase>
    <testCase>
      <name>getBooleanFromResultSet</name>
      <className>com.opencsv.ResultSetColumnNameHelperServiceTest</className>
    </testCase>
    <testCase>
      <name>getBooleanSubsetFromResultSet</name>
      <className>com.opencsv.ResultSetColumnNameHelperServiceTest</className>
    </testCase>
    <testCase>
      <name>getSubsetWithTrim</name>
      <className>com.opencsv.ResultSetColumnNameHelperServiceTest</className>
    </testCase>
    <testCase>
      <name>getCharSetWithNullAndTrim</name>
      <className>com.opencsv.ResultSetColumnNameHelperServiceTest</className>
    </testCase>
    <testCase>
      <name>getTimestampFromResultSetWithCustomFormat</name>
      <className>com.opencsv.ResultSetColumnNameHelperServiceTest</className>
    </testCase>
    <testCase>
      <name>getSubsetFromResultSetWithCustomFormat</name>
      <className>com.opencsv.ResultSetColumnNameHelperServiceTest</className>
    </testCase>
    <testCase>
      <name>defaultReaderInterpetsNullCorrectly</name>
      <className>integrationTest.SR34.SR34Test</className>
    </testCase>
    <testCase>
      <name>testDefaultBuilder</name>
      <className>com.opencsv.RFC4180ParserBuilderTest</className>
    </testCase>
    <testCase>
      <name>testWithSeparator</name>
      <className>com.opencsv.RFC4180ParserBuilderTest</className>
    </testCase>
    <testCase>
      <name>testWithQuoteChar</name>
      <className>com.opencsv.RFC4180ParserBuilderTest</className>
    </testCase>
    <testCase>
      <name>defaultBuilderMissingInformation</name>
      <className>com.opencsv.bean.IterableCSVToBeanBuilderTest</className>
    </testCase>
    <testCase>
      <name>willThrowExceptionIfMissingReader</name>
      <className>com.opencsv.bean.IterableCSVToBeanBuilderTest</className>
    </testCase>
    <testCase>
      <name>builderWithoutFilter</name>
      <className>com.opencsv.bean.IterableCSVToBeanBuilderTest</className>
    </testCase>
    <testCase>
      <name>builderWithFilter</name>
      <className>com.opencsv.bean.IterableCSVToBeanBuilderTest</className>
    </testCase>
    <testCase>
      <name>testParse</name>
      <className>integrationTest.issue3402853.HeaderColumnNameMappingStrategyUserTest</className>
    </testCase>
  </retainedTestCases>
  <removedTestCases>
    <testCase>
      <name>testOptionalConstructors</name>
      <className>com.opencsv.CSVReaderTest</className>
    </testCase>
    <testCase>
      <name>testMinimumBuilder</name>
      <className>com.opencsv.bean.CsvToBeanTest</className>
    </testCase>
    <testCase>
      <name>getDateFromResultSetUsingCustomFormat</name>
      <className>com.opencsv.ResultSetHelperServiceTest</className>
    </testCase>
    <testCase>
      <name>writeThenReadTwiceAscii</name>
      <className>com.opencsv.UniCodeTest</className>
    </testCase>
    <testCase>
      <name>usingNullAsDelimeterWillFailBecauseYouAreEscapingTheQuote</name>
      <className>integrationTest.SR34.SR34Test</className>
    </testCase>
    <testCase>
      <name>testMappingWithoutAnnotationsWithBuilder</name>
      <className>com.opencsv.bean.CsvToBeanTest</className>
    </testCase>
    <testCase>
      <name>writeBadDataCustom</name>
      <className>com.opencsv.bean.StatefulBeanToCsvTest</className>
    </testCase>
    <testCase>
      <name>testEscapedEscape</name>
      <className>com.opencsv.CSVReaderTest</className>
    </testCase>
    <testCase>
      <name>testGoodDataByPosition</name>
      <className>com.opencsv.bean.AnnotationTest</className>
    </testCase>
    <testCase>
      <name>testGoodDataByName</name>
      <className>com.opencsv.bean.AnnotationTest</className>
    </testCase>
    <testCase>
      <name>issue123SeparatorEscapedWhenQuoteIsNoQuoteCharSpecifingNoneDefaultEscapeChar</name>
      <className>com.opencsv.CSVWriterTest</className>
    </testCase>
    <testCase>
      <name>testCase51</name>
      <className>com.opencsv.bean.AnnotationTest</className>
    </testCase>
    <testCase>
      <name>parseQuotedStringWithCommas</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>youNeedToEscapeTheNullCharactersIfUsingNullAsEscape</name>
      <className>integrationTest.SR34.SR34Test</className>
    </testCase>
    <testCase>
      <name>throwIllegalStateWhenOnlyMapperIsSpecifiedToParseWithoutArguments</name>
      <className>com.opencsv.bean.CsvToBeanTest</className>
    </testCase>
    <testCase>
      <name>testCase55</name>
      <className>com.opencsv.bean.AnnotationTest</className>
    </testCase>
    <testCase>
      <name>testGetColumnMapping</name>
      <className>com.opencsv.bean.ColumnPositionMappingStrategyTest</className>
    </testCase>
    <testCase>
      <name>testGoodDataCustomByPosition</name>
      <className>com.opencsv.bean.AnnotationTest</className>
    </testCase>
    <testCase>
      <name>parseAnnotatedBeanWithFieldsOfAllAccessModifierTypes</name>
      <className>com.opencsv.bean.CsvToBeanTest</className>
    </testCase>
    <testCase>
      <name>lineReaderKeepingCRWillHandleEmptyString</name>
      <className>com.opencsv.stream.reader.LineReaderTest</className>
    </testCase>
    <testCase>
      <name>writerTest</name>
      <className>com.opencsv.UniCodeTest</className>
    </testCase>
    <testCase>
      <name>testParse</name>
      <className>com.opencsv.bean.HeaderColumnNameMappingStrategyTest</className>
    </testCase>
    <testCase>
      <name>writeThenReadAscii</name>
      <className>com.opencsv.UniCodeTest</className>
    </testCase>
    <testCase>
      <name>doubleBufferedReaderInterpetsNullCorrectly</name>
      <className>integrationTest.SR34.SR34Test</className>
    </testCase>
    <testCase>
      <name>testParseWithSpacesInHeader</name>
      <className>com.opencsv.bean.HeaderColumnNameMappingStrategyTest</className>
    </testCase>
    <testCase>
      <name>testIssue2726363</name>
      <className>com.opencsv.CSVParserTest</className>
    </testCase>
    <testCase>
      <name>lineReaderWillKeepCR</name>
      <className>com.opencsv.stream.reader.LineReaderTest</className>
    </testCase>
    <testCase>
      <name>beanReturnsFalseOnNull</name>
      <className>com.opencsv.bean.BeanToCsvTest</className>
    </testCase>
    <testCase>
      <name>writeThenReadTwiceMixedUnicode</name>
      <className>com.opencsv.UniCodeTest</className>
    </testCase>
    <testCase>
      <name>throwIllegalStateWhenTypeAndMapperNotProvidedInBuilder</name>
      <className>com.opencsv.bean.CsvToBeanTest</className>
    </testCase>
    <testCase>
      <name>lineReaderKeepingCRWillHandleStringWithNoLinefeed</name>
      <className>com.opencsv.stream.reader.LineReaderTest</className>
    </testCase>
    <testCase>
      <name>testCase11</name>
      <className>com.opencsv.bean.AnnotationTest</className>
    </testCase>
    <testCase>
      <name>testResultSetWithoutHeaders</name>
      <className>com.opencsv.CSVWriterTest</className>
    </testCase>
    <testCase>
      <name>testCase21</name>
      <className>com.opencsv.bean.AnnotationTest</className>
    </testCase>
    <testCase>
      <name>beanReturnsFalseOnEmptyList</name>
      <className>com.opencsv.bean.BeanToCsvTest</className>
    </testCase>
    <testCase>
      <name>writeThenReadTwiceUnicode</name>
      <className>com.opencsv.UniCodeTest</className>
    </testCase>
    <testCase>
      <name>testWriteNullsWithAnnotatedBean</name>
      <className>com.opencsv.bean.BeanToCsvTest</className>
    </testCase>
    <testCase>
      <name>throwRuntimeExceptionWhenRequiredFieldNotProvidedInAnnotatedBean</name>
      <className>com.opencsv.bean.CsvToBeanTest</className>
    </testCase>
    <testCase>
      <name>testGetColumnNames</name>
      <className>com.opencsv.bean.ColumnPositionMappingStrategyTest</className>
    </testCase>
    <testCase>
      <name>parseBeanWithAnnotations</name>
      <className>com.opencsv.bean.CsvToBeanTest</className>
    </testCase>
    <testCase>
      <name>bug133ShouldNotThrowNullPointerExceptionWhenProcessingEmptyWithNoAnnotations</name>
      <className>com.opencsv.bean.CsvToBeanTest</className>
    </testCase>
    <testCase>
      <name>getColumnIndexBeforeMappingSetReturnsNull</name>
      <className>com.opencsv.bean.ColumnPositionMappingStrategyTest</className>
    </testCase>
    <testCase>
      <name>hasNextWorks</name>
      <className>com.opencsv.CSVIteratorTest</className>
    </testCase>
    <testCase>
      <name>numberOfColumnsNamesMustMatchNumberOfHeaders</name>
      <className>com.opencsv.ResultSetColumnNameHelperServiceTest</className>
    </testCase>
    <testCase>
      <name>parseAnnotatedBeanWithAllValidDataTypes</name>
      <className>com.opencsv.bean.CsvToBeanTest</className>
    </testCase>
    <testCase>
      <name>handleException</name>
      <className>com.opencsv.bean.BeanToCsvTest</className>
    </testCase>
    <testCase>
      <name>nextLineWithFilter</name>
      <className>com.opencsv.bean.IterableCSVToBeanTest</className>
    </testCase>
    <testCase>
      <name>testParse</name>
      <className>com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest</className>
    </testCase>
    <testCase>
      <name>verifyColumnNames</name>
      <className>com.opencsv.bean.HeaderColumnNameMappingStrategyTest</className>
    </testCase>
    <testCase>
      <name>testGoodDataCustomByName</name>
      <className>com.opencsv.bean.AnnotationTest</className>
    </testCase>
    <testCase>
      <name>throwRuntimeExceptionWhenUnsupportedDataTypeUsedInAnnotatedBean</name>
      <className>com.opencsv.bean.CsvToBeanTest</className>
    </testCase>
    <testCase>
      <name>writeSingleBeanMethodReturnsFalseIfNullPassedIn</name>
      <className>com.opencsv.bean.BeanToCsvTest</className>
    </testCase>
  </removedTestCases>
</report>
