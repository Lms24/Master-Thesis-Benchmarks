WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.
[m07.11.2021 - 16:16:49.618 [INFO ] ParsingStrategy.parseTestSuiteFromFilePath() - Parsing test suite from File Path
[m[m07.11.2021 - 16:16:49.621 [INFO ] CompilationUnitExtractor.parseCompilationUnitsFromFilePath() - Collecting compilation units from File Path ./src/test/java
[m[m07.11.2021 - 16:16:50.206 [INFO ] ParsingStrategy.parseTestSuite() - Found 1 test case
[m[m07.11.2021 - 16:16:50.209 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanFilterTest::testColumnNameTranslationWithLineFiltering has 5 assertions: 
 assertEquals("Parsing resulted in the wrong number of items.", 2, list.size()); ref {list} [83-83],
 assertEquals("The first item has the wrong name.", "calc age", list.get(0).getName()); ref {list} [84-84],
 assertEquals("The first item has the wrong state.", "beta", list.get(0).getState()); ref {list} [85-85],
 assertEquals("The second item has the wrong name.", "wash dishes", list.get(1).getName()); ref {list} [86-86],
 assertEquals("The second item has the wrong state.", "alpha", list.get(1).getState()); ref {list} [87-87]
[m[m07.11.2021 - 16:16:50.210 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:16:50.211 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:16:50.213 [INFO ] ParsingStrategy.parseTestSuite() - Found 1 test case
[m[m07.11.2021 - 16:16:50.214 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase integrationTest.isClosed.isClosedTest::issue115StandardReadFailsAfterALargeNumberOfReads has 1 assertions: 
 assertEquals(ROWS, rows.size()); ref {rows, ROWS} [35-35]
[m[m07.11.2021 - 16:16:50.214 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:16:50.214 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:16:50.217 [INFO ] ParsingStrategy.parseTestSuite() - Found 1 test case
[m[m07.11.2021 - 16:16:50.218 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanDoubleTest::parseBeanWithNoAnnotations has 3 assertions: 
 assertEquals(2, beanList.size()); ref {beanList} [50-50],
 assertTrue(beanList.contains(createMockBean("kyle", "abc123456", DOUBLE_NUMBER))); ref {DOUBLE_NUMBER, beanList} [51-51],
 assertTrue(beanList.contains(createMockBean("jimmy", "def098765", DOUBLE_NUMBER))); ref {DOUBLE_NUMBER, beanList} [52-52]
[m[m07.11.2021 - 16:16:50.218 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:16:50.218 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:16:50.251 [INFO ] ParsingStrategy.parseTestSuite() - Found 54 test cases
[m[m07.11.2021 - 16:16:50.251 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testParseLine has 5 assertions: 
 assertEquals(4, nextItem.length); ref {nextItem.length, nextItem} [25-25],
 assertEquals("This", nextItem[0]); ref {nextItem} [26-26],
 assertEquals(" is", nextItem[1]); ref {nextItem} [27-27],
 assertEquals(" a", nextItem[2]); ref {nextItem} [28-28],
 assertEquals(" test.", nextItem[3]); ref {nextItem} [29-29]
[m[m07.11.2021 - 16:16:50.252 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::parseSimpleString has 5 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [36-36],
 assertEquals("a", nextLine[0]); ref {nextLine} [37-37],
 assertEquals("b", nextLine[1]); ref {nextLine} [38-38],
 assertEquals("c", nextLine[2]); ref {nextLine} [39-39],
 assertFalse(csvParser.isPending()); ref {csvParser} [40-40]
[m[m07.11.2021 - 16:16:50.252 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::parseSimpleQuotedString has 5 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [47-47],
 assertEquals("a", nextLine[0]); ref {nextLine} [48-48],
 assertEquals("b", nextLine[1]); ref {nextLine} [49-49],
 assertEquals("c", nextLine[2]); ref {nextLine} [50-50],
 assertFalse(csvParser.isPending()); ref {csvParser} [51-51]
[m[m07.11.2021 - 16:16:50.253 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::parseSimpleQuotedStringWithSpaces has 5 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [60-60],
 assertEquals("a", nextLine[0]); ref {nextLine} [61-61],
 assertEquals("b", nextLine[1]); ref {nextLine} [62-62],
 assertEquals("c", nextLine[2]); ref {nextLine} [63-63],
 assertFalse(parser.isPending()); ref {parser} [64-64]
[m[m07.11.2021 - 16:16:50.253 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testParsedLineWithInternalQuota has 2 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [76-76],
 assertEquals("123\"4\"567", nextLine[1]); ref {nextLine} [78-78]
[m[m07.11.2021 - 16:16:50.253 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::parseQuotedStringWithCommas has 4 assertions: 
 assertEquals("a", nextLine[0]); ref {nextLine} [85-85],
 assertEquals("b,b,b", nextLine[1]); ref {nextLine} [86-86],
 assertEquals("c", nextLine[2]); ref {nextLine} [87-87],
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [88-88]
[m[m07.11.2021 - 16:16:50.254 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::parseQuotedStringWithDefinedSeperator has 4 assertions: 
 assertEquals("a", nextLine[0]); ref {nextLine} [96-96],
 assertEquals("b:b:b", nextLine[1]); ref {nextLine} [97-97],
 assertEquals("c", nextLine[2]); ref {nextLine} [98-98],
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [99-99]
[m[m07.11.2021 - 16:16:50.254 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::parseQuotedStringWithDefinedSeperatorAndQuote has 4 assertions: 
 assertEquals("a", nextLine[0]); ref {nextLine} [107-107],
 assertEquals("b:b:b", nextLine[1]); ref {nextLine} [108-108],
 assertEquals("c", nextLine[2]); ref {nextLine} [109-109],
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [110-110]
[m[m07.11.2021 - 16:16:50.255 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::parseEmptyElements has 4 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [116-116],
 assertEquals("", nextLine[0]); ref {nextLine} [117-117],
 assertEquals("", nextLine[1]); ref {nextLine} [118-118],
 assertEquals("", nextLine[2]); ref {nextLine} [119-119]
[m[m07.11.2021 - 16:16:50.255 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::parseMultiLinedQuoted has 4 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [125-125],
 assertEquals("a", nextLine[0]); ref {nextLine} [126-126],
 assertEquals("PO Box 123,\nKippax,ACT. 2615.\nAustralia", nextLine[1]); ref {nextLine} [127-127],
 assertEquals("d.\n", nextLine[2]); ref {nextLine} [128-128]
[m[m07.11.2021 - 16:16:50.255 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::parseMultiLinedQuotedwithCarriageReturns has 4 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [134-134],
 assertEquals("a", nextLine[0]); ref {nextLine} [135-135],
 assertEquals("PO Box 123,\r\nKippax,ACT. 2615.\r\nAustralia", nextLine[1]); ref {nextLine} [136-136],
 assertEquals("d.\n", nextLine[2]); ref {nextLine} [137-137]
[m[m07.11.2021 - 16:16:50.256 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testADoubleQuoteAsDataElement has 5 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [145-145],
 assertEquals("a", nextLine[0]); ref {nextLine} [147-147],
 assertEquals(1, nextLine[1].length()); ref {nextLine} [148-148],
 assertEquals("\"", nextLine[1]); ref {nextLine} [149-149],
 assertEquals("c", nextLine[2]); ref {nextLine} [150-150]
[m[m07.11.2021 - 16:16:50.256 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testEscapedDoubleQuoteAsDataElement has 5 assertions: 
 assertEquals(4, nextLine.length); ref {nextLine, nextLine.length} [159-159],
 assertEquals("test", nextLine[0]); ref {nextLine} [161-161],
 assertEquals("this,test,is,good", nextLine[1]); ref {nextLine} [162-162],
 assertEquals("\"test\"", nextLine[2]); ref {nextLine} [163-163],
 assertEquals("\"quote\"", nextLine[3]); ref {nextLine} [164-164]
[m[m07.11.2021 - 16:16:50.257 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::parseQuotedQuoteCharacters has 4 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [171-171],
 assertEquals("Glen \"The Man\" Smith", nextLine[0]); ref {nextLine} [172-172],
 assertEquals("Athlete", nextLine[1]); ref {nextLine} [173-173],
 assertEquals("Developer\n", nextLine[2]); ref {nextLine} [174-174]
[m[m07.11.2021 - 16:16:50.257 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::parseMultipleQuotes has 3 assertions: 
 // check the tricky situation
assertEquals("\"\"", nextLine[0]); ref {nextLine} [180-180],
 // make sure we didn't ruin the next field..
assertEquals("test\"\n", nextLine[1]); ref {nextLine} [181-181],
 assertEquals(2, nextLine.length); ref {nextLine, nextLine.length} [182-182]
[m[m07.11.2021 - 16:16:50.257 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::parseTrickyString has 5 assertions: 
 assertEquals(4, nextLine.length); ref {nextLine, nextLine.length} [188-188],
 assertEquals("a\nb", nextLine[0]); ref {nextLine} [189-189],
 assertEquals("b", nextLine[1]); ref {nextLine} [190-190],
 assertEquals("\nd", nextLine[2]); ref {nextLine} [191-191],
 assertEquals("e\n", nextLine[3]); ref {nextLine} [192-192]
[m[m07.11.2021 - 16:16:50.258 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testAMultiLineInsideQuotes has 4 assertions: 
 assertEquals(2, nextLine.length); ref {nextLine, nextLine.length} [209-209],
 assertEquals("Small test", nextLine[0]); ref {nextLine} [210-210],
 assertEquals("This is a test across \ntwo lines.", nextLine[1]); ref {nextLine} [211-211],
 assertFalse(csvParser.isPending()); ref {csvParser} [212-212]
[m[m07.11.2021 - 16:16:50.258 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testStrictQuoteSimple has 4 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [221-221],
 assertEquals("a", nextLine[0]); ref {nextLine} [222-222],
 assertEquals("b", nextLine[1]); ref {nextLine} [223-223],
 assertEquals("c", nextLine[2]); ref {nextLine} [224-224]
[m[m07.11.2021 - 16:16:50.259 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testNotStrictQuoteSimple has 4 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [233-233],
 assertEquals("a", nextLine[0]); ref {nextLine} [234-234],
 assertEquals("b", nextLine[1]); ref {nextLine} [235-235],
 assertEquals("c", nextLine[2]); ref {nextLine} [236-236]
[m[m07.11.2021 - 16:16:50.259 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testStrictQuoteWithSpacesAndTabs has 4 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [245-245],
 assertEquals("a", nextLine[0]); ref {nextLine} [246-246],
 assertEquals("b", nextLine[1]); ref {nextLine} [247-247],
 assertEquals("c", nextLine[2]); ref {nextLine} [248-248]
[m[m07.11.2021 - 16:16:50.259 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testNotStrictQuoteWithSpacesAndTabs has 4 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [262-262],
 assertEquals("a", nextLine[0]); ref {nextLine} [263-263],
 assertEquals("b\"      \t       ", nextLine[1]); ref {nextLine} [264-264],
 assertEquals("c\"   ", nextLine[2]); ref {nextLine} [265-265]
[m[m07.11.2021 - 16:16:50.260 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testStrictQuoteWithGarbage has 4 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [274-274],
 assertEquals("", nextLine[0]); ref {nextLine} [275-275],
 assertEquals(",\"", nextLine[1]); ref {nextLine} [276-276],
 assertEquals("", nextLine[2]); ref {nextLine} [277-277]
[m[m07.11.2021 - 16:16:50.260 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testCanIgnoreQuotations has 5 assertions: 
 assertEquals(4, nextLine.length); ref {nextLine, nextLine.length} [291-291],
 assertEquals("Bob", nextLine[0]); ref {nextLine} [292-292],
 assertEquals("test", nextLine[1]); ref {nextLine} [293-293],
 assertEquals("Beaumont", nextLine[2]); ref {nextLine} [294-294],
 assertEquals("TX", nextLine[3]); ref {nextLine} [295-295]
[m[m07.11.2021 - 16:16:50.260 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testFalseIgnoreQuotations has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.261 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testIssue3314579 has 9 assertions: 
 assertEquals(8, nextLine.length); ref {nextLine, nextLine.length} [335-335],
 assertEquals("RPO", nextLine[0]); ref {nextLine} [336-336],
 assertEquals("2012", nextLine[1]); ref {nextLine} [337-337],
 assertEquals("P", nextLine[2]); ref {nextLine} [338-338],
 assertEquals(" ", nextLine[3]); ref {nextLine} [339-339],
 assertEquals(" ", nextLine[4]); ref {nextLine} [340-340],
 assertEquals(" ", nextLine[5]); ref {nextLine} [341-341],
 assertEquals("SDX", nextLine[6]); ref {nextLine} [342-342],
 assertEquals("ACCESSORY WHEEL, 16\", ALUMINUM, DESIGN 1", nextLine[7]); ref {nextLine} [343-343]
[m[m07.11.2021 - 16:16:50.261 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testIssue2263439 has 6 assertions: 
 assertEquals(11, nextLine.length); ref {nextLine, nextLine.length} [358-358],
 assertEquals("865", nextLine[0]); ref {nextLine} [360-360],
 assertEquals("0", nextLine[1]); ref {nextLine} [361-361],
 assertEquals("AmeriKKKa's_Most_Wanted", nextLine[2]); ref {nextLine} [362-362],
 assertEquals("", nextLine[3]); ref {nextLine} [363-363],
 assertEquals("18448", nextLine[10]); ref {nextLine} [364-364]
[m[m07.11.2021 - 16:16:50.261 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testIssue2859181 has 4 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [379-379],
 assertEquals("field1", nextLine[0]); ref {nextLine} [381-381],
 assertEquals("=field2", nextLine[1]); ref {nextLine} [382-382],
 assertEquals("\"field3\"", nextLine[2]); ref {nextLine} [383-383]
[m[m07.11.2021 - 16:16:50.262 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testIssue2726363 has 7 assertions: 
 assertEquals(6, nextLine.length); ref {nextLine, nextLine.length} [401-401],
 assertEquals("804503689", nextLine[0]); ref {nextLine} [404-404],
 assertEquals("London", nextLine[1]); ref {nextLine} [405-405],
 assertEquals("\"London\"shop", nextLine[2]); ref {nextLine} [406-406],
 assertEquals("address", nextLine[3]); ref {nextLine} [407-407],
 assertEquals("116.453182", nextLine[4]); ref {nextLine} [408-408],
 assertEquals("39.918884", nextLine[5]); ref {nextLine} [409-409]
[m[m07.11.2021 - 16:16:50.262 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::anIOExceptionThrownifStringEndsInsideAQuotedString has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.262 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::parseLineMultiAllowsQuotesAcrossMultipleLines has 6 assertions: 
 assertEquals(1, nextLine.length); ref {nextLine, nextLine.length} [422-422],
 assertEquals("This", nextLine[0]); ref {nextLine} [423-423],
 assertTrue(csvParser.isPending()); ref {csvParser} [424-424],
 assertEquals(1, nextLine.length); ref {nextLine, nextLine.length} [428-428],
 assertEquals("is a \"good\" line\\ to parse\nbecause we are using parseLineMulti.", nextLine[0]); ref {nextLine} [429-429],
 assertFalse(csvParser.isPending()); ref {csvParser} [430-430]
[m[m07.11.2021 - 16:16:50.263 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::pendingIsClearedAfterCallToParseLine has 6 assertions: 
 assertEquals(1, nextLine.length); ref {nextLine, nextLine.length} [437-437],
 assertEquals("This", nextLine[0]); ref {nextLine} [438-438],
 assertTrue(csvParser.isPending()); ref {csvParser} [439-439],
 assertEquals(1, nextLine.length); ref {nextLine, nextLine.length} [443-443],
 assertEquals("because we are using parseLineMulti.", nextLine[0]); ref {nextLine} [444-444],
 assertFalse(csvParser.isPending()); ref {csvParser} [445-445]
[m[m07.11.2021 - 16:16:50.263 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::returnPendingIfNullIsPassedIntoParseLineMulti has 6 assertions: 
 assertEquals(1, nextLine.length); ref {nextLine, nextLine.length} [452-452],
 assertEquals("This", nextLine[0]); ref {nextLine} [453-453],
 assertTrue(csvParser.isPending()); ref {csvParser} [454-454],
 assertEquals(1, nextLine.length); ref {nextLine, nextLine.length} [458-458],
 assertEquals("is a \"good\" line\\ to parse\n", nextLine[0]); ref {nextLine} [459-459],
 assertFalse(csvParser.isPending()); ref {csvParser} [460-460]
[m[m07.11.2021 - 16:16:50.263 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::spacesAtEndOfQuotedStringDoNotCountIfStrictQuotesIsTrue has 3 assertions: 
 assertEquals(2, nextLine.length); ref {nextLine, nextLine.length} [468-468],
 assertEquals("Line with", nextLine[0]); ref {nextLine} [469-469],
 assertEquals("spaces at end", nextLine[1]); ref {nextLine} [470-470]
[m[m07.11.2021 - 16:16:50.263 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::returnNullWhenNullPassedIn has 1 assertions: 
 assertNull(nextLine); ref {nextLine} [476-476]
[m[m07.11.2021 - 16:16:50.264 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::validateEscapeStringBeforeRealTest has 2 assertions: 
 assertNotNull(ESCAPE_TEST_STRING); ref {ESCAPE_TEST_STRING} [481-481],
 assertEquals(9, ESCAPE_TEST_STRING.length()); ref {ESCAPE_TEST_STRING} [482-482]
[m[m07.11.2021 - 16:16:50.264 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::whichCharactersAreEscapable has 10 assertions: 
 assertTrue(csvParser.isNextCharacterEscapable(ESCAPE_TEST_STRING, true, 0)); ref {ESCAPE_TEST_STRING, csvParser} [487-487],
 assertFalse(csvParser.isNextCharacterEscapable(ESCAPE_TEST_STRING, false, 0)); ref {ESCAPE_TEST_STRING, csvParser} [488-488],
 // Second character is not escapable because there is a non quote or non slash after it.
assertFalse(csvParser.isNextCharacterEscapable(ESCAPE_TEST_STRING, true, 1)); ref {ESCAPE_TEST_STRING, csvParser} [490-490],
 assertFalse(csvParser.isNextCharacterEscapable(ESCAPE_TEST_STRING, false, 1)); ref {ESCAPE_TEST_STRING, csvParser} [491-491],
 // Fourth character is not escapable because there is a non quote or non slash after it.
assertFalse(csvParser.isNextCharacterEscapable(ESCAPE_TEST_STRING, true, 3)); ref {ESCAPE_TEST_STRING, csvParser} [493-493],
 assertFalse(csvParser.isNextCharacterEscapable(ESCAPE_TEST_STRING, false, 3)); ref {ESCAPE_TEST_STRING, csvParser} [494-494],
 assertTrue(csvParser.isNextCharacterEscapable(ESCAPE_TEST_STRING, true, 5)); ref {ESCAPE_TEST_STRING, csvParser} [496-496],
 assertFalse(csvParser.isNextCharacterEscapable(ESCAPE_TEST_STRING, false, 5)); ref {ESCAPE_TEST_STRING, csvParser} [497-497],
 assertFalse(csvParser.isNextCharacterEscapable(ESCAPE_TEST_STRING, true, lastChar)); ref {ESCAPE_TEST_STRING, lastChar, csvParser} [500-500],
 assertFalse(csvParser.isNextCharacterEscapable(ESCAPE_TEST_STRING, false, lastChar)); ref {ESCAPE_TEST_STRING, lastChar, csvParser} [501-501]
[m[m07.11.2021 - 16:16:50.264 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::whitespaceBeforeEscape has 3 assertions: 
 assertEquals("this", nextItem[0]); ref {nextItem} [508-508],
 assertEquals("is", nextItem[1]); ref {nextItem} [509-509],
 assertEquals("a test", nextItem[2]); ref {nextItem} [510-510]
[m[m07.11.2021 - 16:16:50.265 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testIssue2958242WithoutQuotes has 5 assertions: 
 assertEquals(4, nextItem.length); ref {nextItem.length, nextItem} [517-517],
 assertEquals("zo\"har\"at", nextItem[0]); ref {nextItem} [518-518],
 assertEquals("10-04-1980", nextItem[1]); ref {nextItem} [519-519],
 assertEquals("29", nextItem[2]); ref {nextItem} [520-520],
 assertEquals("C:\\foo.txt", nextItem[3]); ref {nextItem} [521-521]
[m[m07.11.2021 - 16:16:50.265 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::quoteAndEscapeCannotBeTheSame has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.265 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::quoteAndEscapeCanBeTheSameIfNull has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.265 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::separatorCharacterCannotBeNull has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.265 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::separatorAndEscapeCannotBeTheSame has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.266 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::separatorAndQuoteCannotBeTheSame has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.266 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::parserHandlesNullInString has 2 assertions: 
 assertEquals(1, nextLine.length); ref {nextLine, nextLine.length} [553-553],
 assertEquals("because we are using\0 parseLineMulti.", nextLine[0]); ref {nextLine} [554-554]
[m[m07.11.2021 - 16:16:50.266 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::featureRequest60ByDefaultEmptyFieldsAreBlank has 6 assertions: 
 assertEquals(5, item.length); ref {item.length, item} [568-568],
 assertEquals("", item[0]); ref {item} [569-569],
 assertEquals("", item[1]); ref {item} [570-570],
 assertEquals("", item[2]); ref {item} [571-571],
 assertEquals("", item[3]); ref {item} [572-572],
 assertEquals("", item[4]); ref {item} [573-573]
[m[m07.11.2021 - 16:16:50.266 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::featureRequest60TreatEmptyFieldsAsNull has 6 assertions: 
 assertEquals(5, item.length); ref {item.length, item} [588-588],
 assertNull(item[0]); ref {item} [589-589],
 assertEquals(" ", item[1]); ref {item} [590-590],
 assertNull(item[2]); ref {item} [591-591],
 assertEquals("", item[3]); ref {item} [592-592],
 assertNull(item[4]); ref {item} [593-593]
[m[m07.11.2021 - 16:16:50.267 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::featureRequest60TreatEmptyDelimitedFieldsAsNull has 6 assertions: 
 assertEquals(5, item.length); ref {item.length, item} [608-608],
 assertEquals("", item[0]); ref {item} [609-609],
 assertEquals(" ", item[1]); ref {item} [610-610],
 assertEquals("", item[2]); ref {item} [611-611],
 assertNull(item[3]); ref {item} [612-612],
 assertEquals("", item[4]); ref {item} [613-613]
[m[m07.11.2021 - 16:16:50.267 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::featureRequest60TreatEmptyFieldsDelimitedOrNotAsNull has 6 assertions: 
 assertEquals(5, item.length); ref {item.length, item} [628-628],
 assertNull(item[0]); ref {item} [629-629],
 assertNull(item[1]); ref {item} [630-630],
 assertNull(item[2]); ref {item} [631-631],
 assertNull(item[3]); ref {item} [632-632],
 assertNull(item[4]); ref {item} [633-633]
[m[m07.11.2021 - 16:16:50.267 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testStrictQuotesEndsFieldAtQuote has 4 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [644-644],
 assertEquals("one", nextLine[0]); ref {nextLine} [646-646],
 assertEquals("t", nextLine[1]); ref {nextLine} [647-647],
 assertEquals("three", nextLine[2]); ref {nextLine} [648-648]
[m[m07.11.2021 - 16:16:50.268 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testStrictQuotesEndsFieldAtQuoteWithEscapedQuoteInMiddle has 4 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [658-658],
 assertEquals("one", nextLine[0]); ref {nextLine} [660-660],
 assertEquals("t\"w", nextLine[1]); ref {nextLine} [661-661],
 assertEquals("three", nextLine[2]); ref {nextLine} [662-662]
[m[m07.11.2021 - 16:16:50.268 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testNotStrictQuotesAllowsEmbeddedEscapedQuote has 4 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [672-672],
 assertEquals("one", nextLine[0]); ref {nextLine} [674-674],
 assertEquals("t\"wo", nextLine[1]); ref {nextLine} [675-675],
 assertEquals("three", nextLine[2]); ref {nextLine} [676-676]
[m[m07.11.2021 - 16:16:50.268 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::testNotStrictQuotesAllowsEmbeddedQuote has 4 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [686-686],
 assertEquals("one", nextLine[0]); ref {nextLine} [688-688],
 assertEquals("t\"wo", nextLine[1]); ref {nextLine} [689-689],
 assertEquals("three", nextLine[2]); ref {nextLine} [690-690]
[m[m07.11.2021 - 16:16:50.269 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::issue93ParsingEmptyDoubleQuoteField has 3 assertions: 
 assertEquals(2, nextLine.length); ref {nextLine, nextLine.length} [700-700],
 assertTrue(nextLine[0].isEmpty()); ref {nextLine} [702-702],
 assertEquals("2", nextLine[1]); ref {nextLine} [703-703]
[m[m07.11.2021 - 16:16:50.269 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserTest::tryAndParseExcelGeneratedString has 1 assertions: 
 assertEquals("\\\"", nextLine[0]); ref {nextLine} [715-715]
[m[m07.11.2021 - 16:16:50.269 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:16:50.269 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:16:50.270 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:16:50.275 [INFO ] ParsingStrategy.parseTestSuite() - Found 10 test cases
[m[m07.11.2021 - 16:16:50.275 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.BeanToCsvTest::throwRuntimeExceptionWhenExceptionIsThrown has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.276 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.BeanToCsvTest::beanReturnsFalseOnEmptyList has 1 assertions: 
 assertFalse(bean.write(strat, sw, new ArrayList<MockBean>())); ref {sw, bean, strat} [212-212]
[m[m07.11.2021 - 16:16:50.276 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.BeanToCsvTest::beanReturnsFalseOnNull has 1 assertions: 
 assertFalse(bean.write(strat, sw, null)); ref {sw, bean, strat} [224-224]
[m[m07.11.2021 - 16:16:50.276 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.BeanToCsvTest::testWriteQuotes has 3 assertions: 
 assertTrue(value); ref {value} [238-238],
 assertNotNull(content); ref {content} [241-241],
 assertEquals(TEST_STRING, content); ref {content, TEST_STRING} [242-242]
[m[m07.11.2021 - 16:16:50.276 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.BeanToCsvTest::writeBeansOneAtATime has 3 assertions: 
 assertTrue(value); ref {value} [259-259],
 assertNotNull(content); ref {content} [263-263],
 assertEquals(TEST_STRING, content); ref {content, TEST_STRING} [264-264]
[m[m07.11.2021 - 16:16:50.276 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.BeanToCsvTest::writeSingleBeanMethodReturnsFalseIfNullPassedIn has 1 assertions: 
 assertFalse(bean.write(strat, writer, null, false)); ref {writer, bean, strat} [277-277]
[m[m07.11.2021 - 16:16:50.277 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.BeanToCsvTest::handleException has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.277 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.BeanToCsvTest::testWriteQuotesWithAnnotatedBean has 3 assertions: 
 assertTrue(value); ref {value} [298-298],
 assertNotNull(content); ref {content} [301-301],
 assertEquals(TEST_STRING, content); ref {content, TEST_STRING} [302-302]
[m[m07.11.2021 - 16:16:50.277 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.BeanToCsvTest::testWriteNulls has 3 assertions: 
 assertTrue(value); ref {value} [316-316],
 assertNotNull(content); ref {content} [319-319],
 assertEquals(NULL_TEST_STRING, content); ref {NULL_TEST_STRING, content} [320-320]
[m[m07.11.2021 - 16:16:50.277 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.BeanToCsvTest::testWriteNullsWithAnnotatedBean has 3 assertions: 
 assertTrue(value); ref {value} [334-334],
 assertNotNull(content); ref {content} [337-337],
 assertEquals(NULL_TEST_STRING, content); ref {NULL_TEST_STRING, content} [338-338]
[m[m07.11.2021 - 16:16:50.277 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:16:50.280 [INFO ] ParsingStrategy.parseTestSuite() - Found 7 test cases
[m[m07.11.2021 - 16:16:50.280 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.HeaderColumnNameMappingStrategyTest::getColumnIndexWithoutHeaderThrowsException has 1 assertions: 
 assertNull(strat.getColumnIndex("some index name")); ref {strat} [56-56]
[m[m07.11.2021 - 16:16:50.281 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.HeaderColumnNameMappingStrategyTest::getColumnIndexAfterParse has 4 assertions: 
 assertEquals(0, strat.getColumnIndex("name").intValue()); ref {strat} [62-62],
 assertEquals(1, strat.getColumnIndex("orderNumber").intValue()); ref {strat} [63-63],
 assertEquals(2, strat.getColumnIndex("num").intValue()); ref {strat} [64-64],
 assertNull(strat.getColumnIndex("unknown column")); ref {strat} [65-65]
[m[m07.11.2021 - 16:16:50.281 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.HeaderColumnNameMappingStrategyTest::testParse has 5 assertions: 
 assertNotNull(list); ref {list} [71-71],
 assertTrue(list.size() == 2); ref {list} [72-72],
 assertEquals("kyle", bean.getName()); ref {bean} [74-74],
 assertEquals("abc123456", bean.getOrderNumber()); ref {bean} [75-75],
 assertEquals(123, bean.getNum()); ref {bean} [76-76]
[m[m07.11.2021 - 16:16:50.281 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.HeaderColumnNameMappingStrategyTest::testQuotedString has 5 assertions: 
 assertNotNull(list); ref {list} [82-82],
 assertTrue(list.size() == 2); ref {list} [83-83],
 assertEquals("kyle", bean.getName()); ref {bean} [85-85],
 assertEquals("abc123456", bean.getOrderNumber()); ref {bean} [86-86],
 assertEquals(123, bean.getNum()); ref {bean} [87-87]
[m[m07.11.2021 - 16:16:50.281 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.HeaderColumnNameMappingStrategyTest::testParseWithSpacesInHeader has 5 assertions: 
 assertNotNull(list); ref {list} [93-93],
 assertTrue(list.size() == 2); ref {list} [94-94],
 assertEquals("kyle", bean.getName()); ref {bean} [96-96],
 assertEquals("abc123456", bean.getOrderNumber()); ref {bean} [97-97],
 assertEquals(123, bean.getNum()); ref {bean} [98-98]
[m[m07.11.2021 - 16:16:50.281 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.HeaderColumnNameMappingStrategyTest::verifyColumnNames has 5 assertions: 
 assertNull(strat.getColumnName(0)); ref {strat} [105-105],
 assertNull(strat.findDescriptor(0)); ref {strat} [106-106],
 assertEquals("name", strat.getColumnName(0)); ref {strat} [113-113],
 assertEquals(strat.findDescriptor(0), strat.findDescriptor("name")); ref {strat} [114-114],
 assertEquals("name", strat.findDescriptor("name").getName()); ref {strat} [115-115]
[m[m07.11.2021 - 16:16:50.282 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.HeaderColumnNameMappingStrategyTest::throwsIllegalStateExceptionIfTypeNotSet has 1 assertions: 
 assertEquals(IllegalStateException.class, e.getCause().getClass()); ref {e} [128-128]
[m[m07.11.2021 - 16:16:50.282 [INFO ] ParsingStrategy.parseTestSuite() - Found 1 test case
[m[m07.11.2021 - 16:16:50.282 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.TestUtilitiesTest::displayStringArray has 1 assertions: 
 assertEquals("Header\nNumber of elements:\t3\nelement 0:\ta\nelement 1:\tb\nelement 2:\tc\n", TestUtilities.displayStringArray("Header", stringArray)); ref {TestUtilities, stringArray} [17-18]
[m[m07.11.2021 - 16:16:50.290 [INFO ] ParsingStrategy.parseTestSuite() - Found 4 test cases
[m[m07.11.2021 - 16:16:50.290 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.StatefulBeanToCsvTest::writeGoodData has 10 assertions: 
 assertEquals(GOOD_DATA_1 + "\n", writer.toString()); ref {GOOD_DATA_1, writer} [143-143],
 assertEquals(GOOD_DATA_1 + "\n" + GOOD_DATA_2 + "\n", writer.toString()); ref {GOOD_DATA_1, GOOD_DATA_2, writer} [152-152],
 assertEquals(GOOD_DATA_1 + "\n" + GOOD_DATA_2 + "\n" + GOOD_DATA_1 + "\n", writer.toString()); ref {GOOD_DATA_1, GOOD_DATA_2, writer} [160-160],
 assertEquals(GOOD_DATA_OPTIONALS_NULL + EXTRA_STRING_FOR_WRITING + "\n", writer.toString()); ref {GOOD_DATA_OPTIONALS_NULL, writer, EXTRA_STRING_FOR_WRITING} [170-170],
 assertEquals(HEADER_NAME_FULL + "\n" + GOOD_DATA_NAME_1 + "\n", writer.toString()); ref {writer, HEADER_NAME_FULL, GOOD_DATA_NAME_1} [181-181],
 assertEquals(BindByNameUnknownType.TOSTRING + "\n", writer.toString()); ref {BindByNameUnknownType, BindByNameUnknownType.TOSTRING, writer} [187-187],
 assertEquals("TEST\n" + BindByNameUnknownType.TOSTRING + "\n", writer.toString()); ref {BindByNameUnknownType, BindByNameUnknownType.TOSTRING, writer} [196-196],
 assertEquals("c;i;s\nA;1;String\n", writer.toString()); ref {writer} [205-205],
 assertEquals(HEADER_NAME_FULL_DERIVED + "\n" + GOOD_DATA_NAME_DERIVED_1 + "\n", writer.toString()); ref {HEADER_NAME_FULL_DERIVED, GOOD_DATA_NAME_DERIVED_1, writer} [216-216],
 assertEquals(HEADER_NAME_FULL + "\n" + GOOD_DATA_NAME_DERIVED_SUB_1 + "\n", writer.toString()); ref {GOOD_DATA_NAME_DERIVED_SUB_1, writer, HEADER_NAME_FULL} [227-227]
[m[m07.11.2021 - 16:16:50.291 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.StatefulBeanToCsvTest::writeBadData has 27 assertions: 
 assertTrue("An exception should have been thrown!", false); ref {} [253-253],
 assertEquals(getterMissing, e.getBean()); ref {e, getterMissing} [256-256],
 assertEquals("test", e.getField().getName()); ref {e} [257-257],
 assertTrue("An exception should have been thrown!", false); ref {} [266-266],
 assertEquals(getterPrivate, e.getBean()); ref {e, getterPrivate} [269-269],
 assertEquals("test", e.getField().getName()); ref {e} [270-270],
 assertNotNull(csves); ref {csves} [281-281],
 assertEquals(1, csves.size()); ref {csves} [282-282],
 assertTrue(csve instanceof CsvRequiredFieldEmptyException); ref {csve} [284-284],
 assertEquals(1L, rfe.getLineNumber()); ref {rfe} [286-286],
 assertEquals(AnnotatedMockBeanFull.class, rfe.getBeanClass()); ref {rfe} [287-287],
 assertEquals(beans.left.getClass().getDeclaredField("byteWrappedSetLocale"), rfe.getDestinationField()); ref {rfe, beans.left, beans} [288-289],
 assertNotNull(csves); ref {csves} [294-294],
 assertEquals(1, csves.size()); ref {csves} [295-295],
 assertTrue(csve instanceof CsvRequiredFieldEmptyException); ref {csve} [297-297],
 assertEquals(2L, rfe.getLineNumber()); ref {rfe} [299-299],
 assertEquals(AnnotatedMockBeanFull.class, rfe.getBeanClass()); ref {rfe} [300-300],
 assertEquals(beans.right.getClass().getDeclaredField("dateDefaultLocale"), rfe.getDestinationField()); ref {rfe, beans, beans.right} [301-302],
 assertTrue(csves.isEmpty()); ref {csves} [306-306],
 assertEquals(2, csves.size()); ref {csves} [312-312],
 assertNotNull(csves); ref {csves} [321-321],
 assertEquals(1, csves.size()); ref {csves} [322-322],
 assertTrue(csve instanceof CsvDataTypeMismatchException); ref {csve} [324-324],
 assertEquals(1L, dtm.getLineNumber()); ref {dtm} [326-326],
 assertTrue(dtm.getSourceObject() instanceof BindCustomToWrongDataType); ref {dtm} [327-327],
 assertEquals(String.class, dtm.getDestinationClass()); ref {dtm} [328-328],
 assertEquals("TEST\n" + BindByNameUnknownTypeLegacy.TOSTRING + "\n", writer.toString()); ref {BindByNameUnknownTypeLegacy, writer, BindByNameUnknownTypeLegacy.TOSTRING} [334-334]
[m[m07.11.2021 - 16:16:50.291 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.StatefulBeanToCsvTest::writeGoodDataCustom has 2 assertions: 
 assertEquals(GOOD_DATA_CUSTOM_1 + "\n", writer.toString()); ref {GOOD_DATA_CUSTOM_1, writer} [358-358],
 assertEquals(HEADER_NAME_FULL_CUSTOM + "\n" + GOOD_DATA_NAME_CUSTOM_2 + "\n" + GOOD_DATA_NAME_CUSTOM_1 + "\n" + GOOD_DATA_NAME_CUSTOM_2 + "\n", writer.toString()); ref {HEADER_NAME_FULL_CUSTOM, writer, GOOD_DATA_NAME_CUSTOM_2, GOOD_DATA_NAME_CUSTOM_1} [369-371]
[m[m07.11.2021 - 16:16:50.291 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.StatefulBeanToCsvTest::writeBadDataCustom has 4 assertions: 
 assertTrue("Exception should have been thrown!", false); ref {} [393-393],
 assertEquals(1, e.getLineNumber()); ref {e} [396-396],
 assertEquals(AnnotatedMockBeanCustom.class, e.getBeanClass()); ref {e} [397-397],
 assertEquals("boolWrapped", e.getDestinationField().getName()); ref {e} [398-398]
[m[m07.11.2021 - 16:16:50.292 [INFO ] ParsingStrategy.parseTestSuite() - Found 4 test cases
[m[m07.11.2021 - 16:16:50.292 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVIteratorTest::readerExceptionCausesRunTimeException has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.292 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVIteratorTest::removethrowsUnsupportedOperationException has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.293 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVIteratorTest::initialReadReturnsStrings has 1 assertions: 
 assertArrayEquals(STRINGS, iterator.next()); ref {STRINGS, iterator} [38-38]
[m[m07.11.2021 - 16:16:50.293 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVIteratorTest::hasNextWorks has 2 assertions: 
 // initial read from constructor
assertTrue(iterator.hasNext()); ref {iterator} [44-44],
 assertFalse(iterator.hasNext()); ref {iterator} [46-46]
[m[m07.11.2021 - 16:16:50.293 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:16:50.293 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:16:50.293 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:16:50.295 [INFO ] ParsingStrategy.parseTestSuite() - Found 10 test cases
[m[m07.11.2021 - 16:16:50.296 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderBuilderTest::testDefaultBuilder has 6 assertions: 
 assertSame(reader, builder.getReader()); ref {reader, builder} [25-25],
 assertNull(builder.getCsvParser()); ref {builder} [26-26],
 assertEquals(CSVReader.DEFAULT_SKIP_LINES, builder.getSkipLines()); ref {CSVReader, builder, CSVReader.DEFAULT_SKIP_LINES} [27-29],
 assertEquals(CSVReader.DEFAULT_SKIP_LINES, csvReader.getSkipLines()); ref {CSVReader, CSVReader.DEFAULT_SKIP_LINES, csvReader} [32-34],
 assertEquals(CSVReader.DEFAULT_KEEP_CR, csvReader.keepCarriageReturns()); ref {CSVReader, CSVReader.DEFAULT_KEEP_CR, csvReader} [35-35],
 assertEquals(CSVReader.DEFAULT_VERIFY_READER, csvReader.verifyReader()); ref {CSVReader.DEFAULT_VERIFY_READER, CSVReader, csvReader} [36-36]
[m[m07.11.2021 - 16:16:50.296 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderBuilderTest::testNullReader has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.296 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderBuilderTest::testWithCSVParserNull has 1 assertions: 
 assertNull(builder.getCsvParser()); ref {builder} [48-48]
[m[m07.11.2021 - 16:16:50.296 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderBuilderTest::testWithCSVParser has 2 assertions: 
 assertSame(csvParser, builder.getCsvParser()); ref {csvParser, builder} [57-57],
 assertSame(csvParser, actual.getParser()); ref {actual, csvParser} [60-60]
[m[m07.11.2021 - 16:16:50.296 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderBuilderTest::testWithSkipLines has 2 assertions: 
 assertEquals(99, builder.getSkipLines()); ref {builder} [67-67],
 assertSame(99, actual.getSkipLines()); ref {actual} [70-70]
[m[m07.11.2021 - 16:16:50.297 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderBuilderTest::testWithKeepCR has 2 assertions: 
 assertTrue(builder.keepCarriageReturn()); ref {builder} [76-76],
 assertTrue(actual.keepCarriageReturns()); ref {actual} [79-79]
[m[m07.11.2021 - 16:16:50.297 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderBuilderTest::testWithSkipLinesZero has 2 assertions: 
 assertEquals(0, builder.getSkipLines()); ref {builder} [86-86],
 assertSame(0, actual.getSkipLines()); ref {actual} [89-89]
[m[m07.11.2021 - 16:16:50.297 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderBuilderTest::testWithSkipLinesNegative has 2 assertions: 
 assertEquals(0, builder.getSkipLines()); ref {builder} [96-96],
 assertSame(0, actual.getSkipLines()); ref {actual} [99-99]
[m[m07.11.2021 - 16:16:50.297 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderBuilderTest::testWithVerifyReader has 1 assertions: 
 assertFalse(reader.verifyReader()); ref {reader} [105-105]
[m[m07.11.2021 - 16:16:50.297 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderBuilderTest::builderWithNullFieldIndicator has 1 assertions: 
 assertEquals(CSVReaderNullFieldIndicator.EMPTY_SEPARATORS, reader.getParser().nullFieldIndicator()); ref {CSVReaderNullFieldIndicator, reader, CSVReaderNullFieldIndicator.EMPTY_SEPARATORS} [112-112]
[m[m07.11.2021 - 16:16:50.310 [INFO ] ParsingStrategy.parseTestSuite() - Found 32 test cases
[m[m07.11.2021 - 16:16:50.311 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::testParseLine has 13 assertions: 
 assertEquals("a", nextLine[0]); ref {nextLine} [58-58],
 assertEquals("b", nextLine[1]); ref {nextLine} [59-59],
 assertEquals("c", nextLine[2]); ref {nextLine} [60-60],
 assertEquals("a", nextLine[0]); ref {nextLine} [64-64],
 assertEquals("b,b,b", nextLine[1]); ref {nextLine} [65-65],
 assertEquals("c", nextLine[2]); ref {nextLine} [66-66],
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [70-70],
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [74-74],
 assertEquals("Glen \"The Man\" Smith", nextLine[0]); ref {nextLine} [78-78],
 // check the tricky situation
assertEquals("\"\"", nextLine[0]); ref {nextLine} [81-81],
 // make sure we didn't ruin the next field..
assertEquals("test", nextLine[1]); ref {nextLine} [82-82],
 assertEquals(4, nextLine.length); ref {nextLine, nextLine.length} [85-85],
 // test end of stream
assertNull(csvr.readNext()); ref {csvr} [88-88]
[m[m07.11.2021 - 16:16:50.311 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::readerCanHandleNullInString has 5 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [102-102],
 assertEquals("a", nextLine[0]); ref {nextLine} [103-103],
 assertEquals("\0b", nextLine[1]); ref {nextLine} [104-104],
 assertEquals(0, nextLine[1].charAt(0)); ref {nextLine} [105-105],
 assertEquals("c", nextLine[2]); ref {nextLine} [106-106]
[m[m07.11.2021 - 16:16:50.311 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::testParseLineStrictQuote has 17 assertions: 
 assertEquals("", nextLine[0]); ref {nextLine} [123-123],
 assertEquals("", nextLine[1]); ref {nextLine} [124-124],
 assertEquals("", nextLine[2]); ref {nextLine} [125-125],
 assertEquals("", nextLine[0]); ref {nextLine} [129-129],
 assertEquals("b,b,b", nextLine[1]); ref {nextLine} [130-130],
 assertEquals("", nextLine[2]); ref {nextLine} [131-131],
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [135-135],
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [139-139],
 assertEquals("Glen \"The Man\" Smith", nextLine[0]); ref {nextLine} [143-143],
 // check the tricky situation
assertTrue(nextLine[0].equals("\"\"")); ref {nextLine} [146-146],
 // make sure we didn't ruin the next field..
assertTrue(nextLine[1].equals("test")); ref {nextLine} [147-147],
 assertEquals(4, nextLine.length); ref {nextLine, nextLine.length} [150-150],
 assertEquals("a\nb", nextLine[0]); ref {nextLine} [151-151],
 assertEquals("", nextLine[1]); ref {nextLine} [152-152],
 assertEquals("\nd", nextLine[2]); ref {nextLine} [153-153],
 assertEquals("", nextLine[3]); ref {nextLine} [154-154],
 // test end of stream
assertNull(csvr.readNext()); ref {csvr} [157-157]
[m[m07.11.2021 - 16:16:50.311 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::testParseAll has 1 assertions: 
 assertEquals(7, csvr.readAll().size()); ref {csvr} [168-168]
[m[m07.11.2021 - 16:16:50.311 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::testOptionalConstructors has 2 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [185-185],
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [188-188]
[m[m07.11.2021 - 16:16:50.312 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::parseQuotedStringWithDefinedSeperator has 1 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [199-199]
[m[m07.11.2021 - 16:16:50.312 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::testSkippingLines has 2 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [217-217],
 assertEquals("a", nextLine[0]); ref {nextLine} [219-219]
[m[m07.11.2021 - 16:16:50.312 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::linesAndRecordsRead has 15 assertions: 
 assertEquals(0, c.getLinesRead()); ref {c} [242-242],
 assertEquals(0, c.getRecordsRead()); ref {c} [243-243],
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [246-246],
 assertEquals(3, c.getLinesRead()); ref {c} [248-248],
 assertEquals(1, c.getRecordsRead()); ref {c} [249-249],
 assertEquals(1, nextLine.length); ref {nextLine, nextLine.length} [252-252],
 assertEquals(0, nextLine[0].length()); ref {nextLine} [253-253],
 assertEquals(4, c.getLinesRead()); ref {c} [255-255],
 // A blank line is considered a record with a single element
assertEquals(2, c.getRecordsRead()); ref {c} [256-256],
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [259-259],
 assertEquals(6, c.getLinesRead()); ref {c} [261-261],
 // two lines read to get a single record.
assertEquals(3, c.getRecordsRead()); ref {c} [262-262],
 assertNull(nextLine); ref {nextLine} [265-265],
 assertEquals(6, c.getLinesRead()); ref {c} [267-267],
 assertEquals(3, c.getRecordsRead()); ref {c} [268-268]
[m[m07.11.2021 - 16:16:50.312 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::testSkippingLinesWithDifferentEscape has 4 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [287-287],
 assertEquals("a", nextLine[0]); ref {nextLine} [289-289],
 assertEquals("b\tb\tb", nextLine[1]); ref {nextLine} [290-290],
 assertEquals("c", nextLine[2]); ref {nextLine} [291-291]
[m[m07.11.2021 - 16:16:50.313 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::testNormalParsedLine has 4 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [309-309],
 assertEquals("a", nextLine[0]); ref {nextLine} [311-311],
 assertEquals("1234567", nextLine[1]); ref {nextLine} [312-312],
 assertEquals("c", nextLine[2]); ref {nextLine} [313-313]
[m[m07.11.2021 - 16:16:50.313 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::testASingleQuoteAsDataElement has 5 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [333-333],
 assertEquals("a", nextLine[0]); ref {nextLine} [335-335],
 assertEquals(1, nextLine[1].length()); ref {nextLine} [336-336],
 assertEquals("\'", nextLine[1]); ref {nextLine} [337-337],
 assertEquals("c", nextLine[2]); ref {nextLine} [338-338]
[m[m07.11.2021 - 16:16:50.313 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::testASingleQuoteAsDataElementWithEmptyField has 5 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [357-357],
 assertEquals("a", nextLine[0]); ref {nextLine} [359-359],
 assertEquals(0, nextLine[1].length()); ref {nextLine} [360-360],
 assertEquals("", nextLine[1]); ref {nextLine} [361-361],
 assertEquals("c", nextLine[2]); ref {nextLine} [362-362]
[m[m07.11.2021 - 16:16:50.313 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::testSpacesAtEndOfString has 4 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [374-374],
 assertEquals("a", nextLine[0]); ref {nextLine} [376-376],
 assertEquals("b", nextLine[1]); ref {nextLine} [377-377],
 assertEquals("c", nextLine[2]); ref {nextLine} [378-378]
[m[m07.11.2021 - 16:16:50.313 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::testEscapedQuote has 2 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [392-392],
 assertEquals("123\"4567", nextLine[1]); ref {nextLine} [394-394]
[m[m07.11.2021 - 16:16:50.313 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::testEscapedEscape has 2 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [407-407],
 assertEquals("123\\4567", nextLine[1]); ref {nextLine} [409-409]
[m[m07.11.2021 - 16:16:50.314 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::testSingleQuoteWhenDoubleQuoteIsQuoteChar has 5 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [430-430],
 assertEquals("a", nextLine[0]); ref {nextLine} [432-432],
 assertEquals(2, nextLine[1].length()); ref {nextLine} [433-433],
 assertEquals("''", nextLine[1]); ref {nextLine} [434-434],
 assertEquals("c", nextLine[2]); ref {nextLine} [435-435]
[m[m07.11.2021 - 16:16:50.314 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::testQuotedParsedLine has 5 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [453-453],
 assertEquals("a", nextLine[0]); ref {nextLine} [455-455],
 assertEquals(1, nextLine[0].length()); ref {nextLine} [456-456],
 assertEquals("1234567", nextLine[1]); ref {nextLine} [458-458],
 assertEquals("c", nextLine[2]); ref {nextLine} [459-459]
[m[m07.11.2021 - 16:16:50.314 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::bug106ParseLineWithCarriageReturnNewLineStrictQuotes has 5 assertions: 
 assertEquals(3, nextLine.length); ref {nextLine, nextLine.length} [475-475],
 assertEquals("a", nextLine[0]); ref {nextLine} [477-477],
 assertEquals(1, nextLine[0].length()); ref {nextLine} [478-478],
 assertEquals("123\r\n4567", nextLine[1]); ref {nextLine} [480-480],
 assertEquals("c", nextLine[2]); ref {nextLine} [481-481]
[m[m07.11.2021 - 16:16:50.314 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::testIssue2992134OutOfPlaceQuotes has 4 assertions: 
 assertEquals("a", nextLine[0]); ref {nextLine} [494-494],
 assertEquals("b", nextLine[1]); ref {nextLine} [495-495],
 assertEquals("c", nextLine[2]); ref {nextLine} [496-496],
 assertEquals("ddd\"eee", nextLine[3]); ref {nextLine} [497-497]
[m[m07.11.2021 - 16:16:50.314 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::quoteAndEscapeMustBeDifferent has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.314 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::separatorAndEscapeMustBeDifferent has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.314 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::separatorAndQuoteMustBeDifferent has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.315 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::testIteratorFunctionality has 1 assertions: 
 assertArrayEquals(expectedLine, line); ref {line, expectedLine} [545-545]
[m[m07.11.2021 - 16:16:50.315 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::canCloseReader has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.315 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::canCreateIteratorFromReader has 1 assertions: 
 assertNotNull(csvr.iterator()); ref {csvr} [556-556]
[m[m07.11.2021 - 16:16:50.315 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::attemptToReadCloseStreamReturnsNull has 1 assertions: 
 assertNull(csvReader.readNext()); ref {csvReader} [564-564]
[m[m07.11.2021 - 16:16:50.315 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::testIssue102 has 6 assertions: 
 assertEquals(2, firstRow.length); ref {firstRow, firstRow.length} [572-572],
 assertTrue(firstRow[0].isEmpty()); ref {firstRow} [573-573],
 assertEquals("a", firstRow[1]); ref {firstRow} [574-574],
 assertEquals(2, secondRow.length); ref {secondRow, secondRow.length} [577-577],
 assertTrue(secondRow[0].isEmpty()); ref {secondRow} [578-578],
 assertEquals("b", secondRow[1]); ref {secondRow} [579-579]
[m[m07.11.2021 - 16:16:50.315 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::issue108ReaderPlaysWellWithChannels has 1 assertions: 
 assertEquals(2, csv.readAll().size()); ref {csv} [591-591]
[m[m07.11.2021 - 16:16:50.315 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::featureRequest60ByDefaultEmptyFieldsAreBlank has 6 assertions: 
 assertEquals(5, row.length); ref {row.length, row} [607-607],
 assertEquals("", row[0]); ref {row} [608-608],
 assertEquals("", row[1]); ref {row} [609-609],
 assertEquals("", row[2]); ref {row} [610-610],
 assertEquals("", row[3]); ref {row} [611-611],
 assertEquals("", row[4]); ref {row} [612-612]
[m[m07.11.2021 - 16:16:50.316 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::featureRequest60TreatEmptyFieldsAsNull has 6 assertions: 
 assertEquals(5, item.length); ref {item.length, item} [630-630],
 assertNull(item[0]); ref {item} [631-631],
 assertNull(item[1]); ref {item} [632-632],
 assertNull(item[2]); ref {item} [633-633],
 assertEquals("", item[3]); ref {item} [634-634],
 assertNull(item[4]); ref {item} [635-635]
[m[m07.11.2021 - 16:16:50.316 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::featureRequest60TreatEmptyDelimitedFieldsAsNull has 6 assertions: 
 assertEquals(5, item.length); ref {item.length, item} [652-652],
 assertEquals("", item[0]); ref {item} [653-653],
 assertEquals("", item[1]); ref {item} [654-654],
 assertEquals("", item[2]); ref {item} [655-655],
 assertNull(item[3]); ref {item} [656-656],
 assertEquals("", item[4]); ref {item} [657-657]
[m[m07.11.2021 - 16:16:50.316 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVReaderTest::featureRequest60TreatEmptyFieldsDelimitedOrNotAsNull has 6 assertions: 
 assertEquals(5, item.length); ref {item.length, item} [674-674],
 assertNull(item[0]); ref {item} [675-675],
 assertNull(item[1]); ref {item} [676-676],
 assertNull(item[2]); ref {item} [677-677],
 assertNull(item[3]); ref {item} [678-678],
 assertNull(item[4]); ref {item} [679-679]
[m[m07.11.2021 - 16:16:50.317 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:16:50.318 [INFO ] ParsingStrategy.parseTestSuite() - Found 6 test cases
[m[m07.11.2021 - 16:16:50.319 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.stream.reader.LineReaderTest::lineReaderWillKeepCR has 1 assertions: 
 assertEquals(WITH_CR, keepCRReader.readLine()); ref {WITH_CR, keepCRReader} [26-26]
[m[m07.11.2021 - 16:16:50.319 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.stream.reader.LineReaderTest::lineReaderWillRemoveCR has 1 assertions: 
 assertEquals(NO_CR, noCRReader.readLine()); ref {noCRReader, NO_CR} [32-32]
[m[m07.11.2021 - 16:16:50.319 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.stream.reader.LineReaderTest::lineReaderKeepingCRWillHandleStringWithNoLinefeed has 1 assertions: 
 assertEquals(NO_CR, reader.readLine()); ref {reader, NO_CR} [38-38]
[m[m07.11.2021 - 16:16:50.319 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.stream.reader.LineReaderTest::lineReaderNoCRWillHandleStringWithNoLinefeed has 1 assertions: 
 assertEquals(NO_CR, reader.readLine()); ref {reader, NO_CR} [44-44]
[m[m07.11.2021 - 16:16:50.319 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.stream.reader.LineReaderTest::lineReaderKeepingCRWillHandleEmptyString has 1 assertions: 
 assertEquals(NULL_STRING, reader.readLine()); ref {reader, NULL_STRING} [50-50]
[m[m07.11.2021 - 16:16:50.319 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.stream.reader.LineReaderTest::lineReaderNoCRWillHandleEmptyString has 1 assertions: 
 assertEquals(NULL_STRING, reader.readLine()); ref {reader, NULL_STRING} [56-56]
[m[m07.11.2021 - 16:16:50.326 [INFO ] ParsingStrategy.parseTestSuite() - Found 16 test cases
[m[m07.11.2021 - 16:16:50.326 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.AnnotationTest::testGoodDataByName has 2 assertions: 
 assertEquals(7, bean.getIntInSubclass()); ref {bean} [85-85],
 assertEquals(8, bean.getIntInSubclass()); ref {bean} [87-87]
[m[m07.11.2021 - 16:16:50.326 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.AnnotationTest::testGoodDataByPosition has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.327 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.AnnotationTest::testGoodDataCustomByName has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.327 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.AnnotationTest::testGoodDataCustomByPosition has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.327 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.AnnotationTest::testCase7 has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.327 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.AnnotationTest::testCase51 has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.327 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.AnnotationTest::testCase11 has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.327 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.AnnotationTest::testCase55 has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.327 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.AnnotationTest::testCase21 has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.327 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.AnnotationTest::testCase63 has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.328 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.AnnotationTest::testBadDataByName has 45 assertions: 
 assertTrue(e.getCause() instanceof CsvRequiredFieldEmptyException); ref {e} [391-391],
 assertEquals(1, csve.getLineNumber()); ref {csve} [393-393],
 assertEquals(AnnotatedMockBeanFull.class, csve.getBeanClass()); ref {csve} [394-394],
 assertEquals("dateDefaultLocale", csve.getDestinationField().getName()); ref {csve} [395-395],
 assertTrue(e.getCause() instanceof CsvDataTypeMismatchException); ref {e} [404-404],
 assertEquals(1, csve.getLineNumber()); ref {csve} [406-406],
 assertEquals(GregorianCalendar.class, csve.getDestinationClass()); ref {csve} [407-407],
 assertEquals(UNPARSABLE, (String) csve.getSourceObject()); ref {csve, UNPARSABLE} [408-408],
 assertTrue(csve.getCause() instanceof ParseException); ref {csve} [409-409],
 assertTrue(e.getCause() instanceof CsvDataTypeMismatchException); ref {e} [419-419],
 assertEquals(1, csve.getLineNumber()); ref {csve} [421-421],
 assertEquals(Date.class, csve.getDestinationClass()); ref {csve} [422-422],
 assertEquals(UNPARSABLE, (String) csve.getSourceObject()); ref {csve, UNPARSABLE} [423-423],
 assertTrue(csve.getCause() instanceof ParseException); ref {csve} [424-424],
 assertTrue(e.getCause() instanceof CsvDataTypeMismatchException); ref {e} [433-433],
 assertEquals(1, csve.getLineNumber()); ref {csve} [435-435],
 assertEquals(Date.class, csve.getDestinationClass()); ref {csve} [436-436],
 assertEquals(UNPARSABLE, (String) csve.getSourceObject()); ref {csve, UNPARSABLE} [437-437],
 assertTrue(csve.getCause() instanceof ParseException); ref {csve} [438-438],
 assertTrue(e.getCause() instanceof CsvDataTypeMismatchException); ref {e} [447-447],
 assertEquals(1, csve.getLineNumber()); ref {csve} [449-449],
 assertEquals(GregorianCalendar.class, csve.getDestinationClass()); ref {csve} [450-450],
 assertEquals(UNPARSABLE, (String) csve.getSourceObject()); ref {csve, UNPARSABLE} [451-451],
 assertTrue(csve.getCause() instanceof ParseException); ref {csve} [452-452],
 assertTrue(e.getCause() instanceof CsvDataTypeMismatchException); ref {e} [462-462],
 assertEquals(1, csve.getLineNumber()); ref {csve} [464-464],
 assertEquals(Date.class, csve.getDestinationClass()); ref {csve} [465-465],
 assertEquals(UNPARSABLE, (String) csve.getSourceObject()); ref {csve, UNPARSABLE} [466-466],
 assertTrue(csve.getCause() instanceof ParseException); ref {csve} [467-467],
 assertTrue(e.getCause() instanceof CsvDataTypeMismatchException); ref {e} [476-476],
 assertEquals(1, csve.getLineNumber()); ref {csve} [478-478],
 assertEquals(Date.class, csve.getDestinationClass()); ref {csve} [479-479],
 assertEquals(UNPARSABLE, (String) csve.getSourceObject()); ref {csve, UNPARSABLE} [480-480],
 assertTrue(csve.getCause() instanceof ParseException); ref {csve} [481-481],
 assertTrue(e.getCause() instanceof CsvDataTypeMismatchException); ref {e} [492-492],
 assertEquals(1, csve.getLineNumber()); ref {csve} [494-494],
 assertTrue(csve.getSourceObject() instanceof String); ref {csve} [495-495],
 assertEquals("19780115T063209", (String) csve.getSourceObject()); ref {csve} [496-496],
 assertEquals(String.class, csve.getDestinationClass()); ref {csve} [497-497],
 assertEquals(1, exlist.size()); ref {exlist} [504-504],
 assertTrue(exlist.get(0) instanceof CsvDataTypeMismatchException); ref {exlist} [505-505],
 assertEquals(1, innere.getLineNumber()); ref {innere} [507-507],
 assertTrue(innere.getSourceObject() instanceof String); ref {innere} [508-508],
 assertEquals("19780115T063209", (String) innere.getSourceObject()); ref {innere} [509-509],
 assertEquals(String.class, innere.getDestinationClass()); ref {innere} [510-510]
[m[m07.11.2021 - 16:16:50.328 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.AnnotationTest::testCase16 has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.328 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.AnnotationTest::testCase60 has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.328 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.AnnotationTest::testBadDataCustomByName has 14 assertions: 
 assertTrue(e.getCause() instanceof CsvDataTypeMismatchException); ref {e} [563-563],
 assertEquals(1, csve.getLineNumber()); ref {csve} [565-565],
 assertTrue(csve.getSourceObject() instanceof String); ref {csve} [566-566],
 assertEquals("invalidstring", (String) csve.getSourceObject()); ref {csve} [567-567],
 assertEquals(Boolean.class, csve.getDestinationClass()); ref {csve} [568-568],
 assertTrue(csve.getCause() instanceof ConversionException); ref {csve} [569-569],
 assertTrue(e.getCause() instanceof CsvRequiredFieldEmptyException); ref {e} [578-578],
 assertEquals(1, csve.getLineNumber()); ref {csve} [580-580],
 assertEquals(AnnotatedMockBeanCustom.class, csve.getBeanClass()); ref {csve} [581-581],
 assertEquals("boolWrapped", csve.getDestinationField().getName()); ref {csve} [582-582],
 assertTrue(e.getCause() instanceof CsvDataTypeMismatchException); ref {e} [591-591],
 assertEquals(1, csve.getLineNumber()); ref {csve} [593-593],
 assertEquals("invaliddatum", csve.getSourceObject()); ref {csve} [594-594],
 assertEquals(Boolean.class, csve.getDestinationClass()); ref {csve} [595-595]
[m[m07.11.2021 - 16:16:50.329 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.AnnotationTest::testBadConverter has 2 assertions: 
 assertEquals(BadIntConverter.class, e.getConverterClass()); ref {e} [608-608],
 assertEquals(BadIntConverter.class, e.getConverterClass()); ref {e} [617-617]
[m[m07.11.2021 - 16:16:50.329 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.AnnotationTest::codeCoverageExceptions has 13 assertions: 
 assertEquals(TestCase80.class, e1.getBeanClass()); ref {e1} [626-626],
 assertEquals(f, e1.getDestinationField()); ref {f, e1} [627-627],
 assertNull(e2.getDestinationClass()); ref {e2} [631-631],
 assertNull(e2.getSourceObject()); ref {e2} [632-632],
 assertEquals(err, e2.getMessage()); ref {err, e2} [634-634],
 assertNull(e3.getConverterClass()); ref {e3} [637-637],
 assertEquals(c, e3.getConverterClass()); ref {c, e3} [639-639],
 assertEquals(err, e3.getMessage()); ref {err, e3} [641-641],
 assertNull(e4.getSourceObject()); ref {e4} [644-644],
 assertEquals(f, e4.getSourceObject()); ref {f, e4} [646-646],
 assertEquals(err, e4.getMessage()); ref {err, e4} [648-648],
 assertEquals(f, e4.getSourceObject()); ref {f, e4} [650-650],
 assertEquals(err, e4.getMessage()); ref {err, e4} [651-651]
[m[m07.11.2021 - 16:16:50.329 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:16:50.329 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:16:50.329 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:16:50.331 [INFO ] ParsingStrategy.parseTestSuite() - Found 4 test cases
[m[m07.11.2021 - 16:16:50.331 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.IterableCSVToBeanTest::nextLine has 7 assertions: 
 assertEquals("kyle", mockBean.getName()); ref {mockBean} [55-55],
 assertEquals("abc123456", mockBean.getOrderNumber()); ref {mockBean} [56-56],
 assertEquals(123, mockBean.getNum()); ref {mockBean} [57-57],
 assertEquals("jimmy", mockBean.getName()); ref {mockBean} [60-60],
 assertEquals("def098765", mockBean.getOrderNumber()); ref {mockBean} [61-61],
 assertEquals(456, mockBean.getNum()); ref {mockBean} [62-62],
 assertNull(mockBean); ref {mockBean} [65-65]
[m[m07.11.2021 - 16:16:50.332 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.IterableCSVToBeanTest::nextLineWithFilter has 4 assertions: 
 assertEquals("jimmy", mockBean.getName()); ref {mockBean} [76-76],
 assertEquals("def098765", mockBean.getOrderNumber()); ref {mockBean} [77-77],
 assertEquals(456, mockBean.getNum()); ref {mockBean} [78-78],
 assertNull(mockBean); ref {mockBean} [81-81]
[m[m07.11.2021 - 16:16:50.332 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.IterableCSVToBeanTest::readWithIterator has 13 assertions: 
 // not reached
assertTrue(false); ref {} [90-90],
 // not reached
assertTrue(false); ref {} [97-97],
 assertTrue(iterator.hasNext()); ref {iterator} [102-102],
 assertEquals("kyle", mockBean.getName()); ref {mockBean} [104-104],
 assertEquals("abc123456", mockBean.getOrderNumber()); ref {mockBean} [105-105],
 assertEquals(123, mockBean.getNum()); ref {mockBean} [106-106],
 assertTrue(iterator.hasNext()); ref {iterator} [108-108],
 assertEquals("jimmy", mockBean.getName()); ref {mockBean} [110-110],
 assertEquals("def098765", mockBean.getOrderNumber()); ref {mockBean} [111-111],
 assertEquals(456, mockBean.getNum()); ref {mockBean} [112-112],
 assertFalse(iterator.hasNext()); ref {iterator} [114-114],
 assertFalse(true); ref {} [117-117],
 assertFalse(iterator.hasNext()); ref {iterator} [120-120]
[m[m07.11.2021 - 16:16:50.332 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.IterableCSVToBeanTest::readWithIteratorAndFilter has 7 assertions: 
 assertTrue(iterator.hasNext()); ref {iterator} [132-132],
 assertEquals("jimmy", mockBean.getName()); ref {mockBean} [134-134],
 assertEquals("def098765", mockBean.getOrderNumber()); ref {mockBean} [135-135],
 assertEquals(456, mockBean.getNum()); ref {mockBean} [136-136],
 assertFalse(iterator.hasNext()); ref {iterator} [138-138],
 assertFalse(true); ref {} [141-141],
 assertFalse(iterator.hasNext()); ref {iterator} [144-144]
[m[m07.11.2021 - 16:16:50.333 [INFO ] ParsingStrategy.parseTestSuite() - Found 1 test case
[m[m07.11.2021 - 16:16:50.333 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.OpencsvTest::testWriteRead has 3 assertions: 
 assertTrue(line.length == data[row].length); ref {data[row].length, data, line.length, line, row} [56-56],
 assertTrue(line[col].equals("")); ref {col, line} [60-60],
 assertTrue(line[col].equals(data[row][col])); ref {col, data, line, row} [62-62]
[m[m07.11.2021 - 16:16:50.335 [INFO ] ParsingStrategy.parseTestSuite() - Found 3 test cases
[m[m07.11.2021 - 16:16:50.335 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest::testParse has 5 assertions: 
 assertNotNull(list); ref {list} [46-46],
 assertTrue(list.size() == 2); ref {list} [47-47],
 assertEquals("kyle", bean.getName()); ref {bean} [49-49],
 assertEquals("123456", bean.getOrderNumber()); ref {bean} [50-50],
 assertEquals("emp123", bean.getId()); ref {bean} [51-51]
[m[m07.11.2021 - 16:16:50.335 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest::getColumnNameReturnsNullIfColumnNumberIsTooLarge has 4 assertions: 
 assertEquals("name", strat.getColumnName(0)); ref {strat} [70-70],
 assertEquals("orderNumber", strat.getColumnName(1)); ref {strat} [71-71],
 assertEquals("id", strat.getColumnName(2)); ref {strat} [72-72],
 assertNull(strat.getColumnName(3)); ref {strat} [73-73]
[m[m07.11.2021 - 16:16:50.335 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest::columnNameMappingShouldBeCaseInsensitive has 5 assertions: 
 assertNotNull(strat.getColumnMapping()); ref {strat} [88-88],
 assertEquals("name", strat.getColumnName(0)); ref {strat} [93-93],
 assertEquals("orderNumber", strat.getColumnName(1)); ref {strat} [94-94],
 assertEquals("id", strat.getColumnName(2)); ref {strat} [95-95],
 assertNull(strat.getColumnName(3)); ref {strat} [96-96]
[m[m07.11.2021 - 16:16:50.335 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:16:50.345 [INFO ] ParsingStrategy.parseTestSuite() - Found 32 test cases
[m[m07.11.2021 - 16:16:50.345 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::correctlyParseNullString has 1 assertions: 
 assertEquals(0, sw.toString().length()); ref {sw} [66-66]
[m[m07.11.2021 - 16:16:50.345 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::correctlyParserNullObject has 1 assertions: 
 assertEquals(0, sw.toString().length()); ref {sw} [74-74]
[m[m07.11.2021 - 16:16:50.345 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testParseLine has 5 assertions: 
 assertEquals("'a','b','c'\n", output); ref {output} [88-88],
 assertEquals("'a','b,b,b','c'\n", output); ref {output} [93-93],
 assertEquals("\n", output); ref {output} [98-98],
 assertEquals("'This is a \n multiline entry','so is \n this'\n", output); ref {output} [103-103],
 assertEquals("'This is a \"\" multiline entry','so is \n this'\n", output); ref {output} [109-109]
[m[m07.11.2021 - 16:16:50.346 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testSpecialCharacters has 1 assertions: 
 assertEquals("'This is a \r multiline entry','so is \n this'\n", output); ref {output} [117-117]
[m[m07.11.2021 - 16:16:50.346 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::parseLineWithBothEscapeAndQuoteChar has 1 assertions: 
 assertEquals("'This is a \"'multiline\"' entry','so is \n this'\n", output); ref {output} [124-124]
[m[m07.11.2021 - 16:16:50.346 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testParseLineWithNoEscapeChar has 4 assertions: 
 assertEquals("'a','b','c'\n", output); ref {output} [138-138],
 assertEquals("'a','b,b,b','c'\n", output); ref {output} [143-143],
 assertEquals("\n", output); ref {output} [148-148],
 assertEquals("'This is a \n multiline entry','so is \n this'\n", output); ref {output} [153-153]
[m[m07.11.2021 - 16:16:50.346 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::parseLineWithNoEscapeCharAndQuotes has 1 assertions: 
 assertEquals("'This is a \" 'multiline' entry','so is \n this'\n", output); ref {output} [159-159]
[m[m07.11.2021 - 16:16:50.346 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testWriteAllAsList has 5 assertions: 
 assertFalse(csvw.checkError()); ref {csvw} [184-184],
 assertEquals(3, lines.length); ref {lines.length, lines} [188-188],
 assertEquals("\"Name\",\"Phone\",\"Email\"", lines[0]); ref {lines} [189-189],
 assertEquals("\"Glen\",\"1234\",\"glen@abcd.com\"", lines[1]); ref {lines} [190-190],
 assertEquals("\"John\",\"5678\",\"john@efgh.com\"", lines[2]); ref {lines} [191-191]
[m[m07.11.2021 - 16:16:50.346 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testWriteAllAsIterable has 5 assertions: 
 assertFalse(csvw.checkError()); ref {csvw} [225-225],
 assertEquals(3, lines.length); ref {lines.length, lines} [230-230],
 assertEquals("\"Name\",\"Phone\",\"Email\"", lines[0]); ref {lines} [231-231],
 assertEquals("\"Glen\",\"1234\",\"glen@abcd.com\"", lines[1]); ref {lines} [232-232],
 assertEquals("\"John\",\"5678\",\"john@efgh.com\"", lines[2]); ref {lines} [233-233]
[m[m07.11.2021 - 16:16:50.347 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testWriteAllObjects has 2 assertions: 
 assertEquals(3, lines.length); ref {lines.length, lines} [259-259],
 assertEquals("1234", values[1]); ref {values} [262-262]
[m[m07.11.2021 - 16:16:50.347 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testNoQuoteChars has 1 assertions: 
 assertEquals("Foo,Bar,Baz\n", result); ref {result} [279-279]
[m[m07.11.2021 - 16:16:50.347 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testNoQuoteCharsAndNoEscapeChars has 1 assertions: 
 assertEquals("Foo,Bar,Baz\n", result); ref {result} [296-296]
[m[m07.11.2021 - 16:16:50.347 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testIntelligentQuotes has 1 assertions: 
 assertEquals("1,Foo,\"With,Separator\",\"Line\nBreak\",\"Hello \"\"Foo Bar\"\" World\",Bar\n", result); ref {result} [310-310]
[m[m07.11.2021 - 16:16:50.347 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testNullValues has 1 assertions: 
 assertEquals("\"Foo\",,\"Bar\",\"baz\"\n", result); ref {result} [328-328]
[m[m07.11.2021 - 16:16:50.347 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testStreamFlushing has 2 assertions: 
 assertFalse(tester.exists()); ref {tester} [337-337],
 assertTrue(tester.exists()); ref {tester} [350-350]
[m[m07.11.2021 - 16:16:50.347 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::flushWillThrowIOException has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.347 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::flushQuietlyWillNotThrowException has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.348 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testAlternateEscapeChar has 1 assertions: 
 assertEquals("\"Foo\",\"bar''s\"\n", sw.toString()); ref {sw} [380-380]
[m[m07.11.2021 - 16:16:50.348 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::embeddedQuoteInString has 1 assertions: 
 assertEquals("\"Foo\",\"I choose a \\\"hero\\\" for this adventure\"\n", sw.toString()); ref {sw} [389-389]
[m[m07.11.2021 - 16:16:50.348 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testNoQuotingNoEscaping has 1 assertions: 
 assertEquals("\"Foo\",\"Bar\"\n", sw.toString()); ref {sw} [398-398]
[m[m07.11.2021 - 16:16:50.348 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testNestedQuotes has 2 assertions: 
 // assert that the writer was also closed.
fwriter.flush(); ref {fwriter} [430-430],
 assertTrue(oracle.equals(fileContents.toString())); ref {oracle, fileContents} [455-455]
[m[m07.11.2021 - 16:16:50.348 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testAlternateLineFeeds has 1 assertions: 
 assertTrue(result.endsWith("\r")); ref {result} [466-466]
[m[m07.11.2021 - 16:16:50.348 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testResultSetWithHeaders has 4 assertions: 
 assertFalse(csvw.checkError()); ref {csvw} [480-480],
 assertNotNull(result); ref {result} [483-483],
 assertEquals("\"Foo\",\"Bar\",\"baz\"\n\"v1\",\"v2\",\"v3\"\n", result); ref {result} [484-484],
 assertEquals(2, linesWritten); ref {linesWritten} [485-485]
[m[m07.11.2021 - 16:16:50.348 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testMultiLineResultSetWithHeaders has 4 assertions: 
 assertFalse(csvw.checkError()); ref {csvw} [500-500],
 assertNotNull(result); ref {result} [503-503],
 assertEquals("\"Foo\",\"Bar\",\"baz\"\n\"v1\",\"v2\",\"v3\"\n\"v1\",\"v2\",\"v3\"\n\"v1\",\"v2\",\"v3\"\n", result); ref {result} [504-504],
 assertEquals(4, linesWritten); ref {linesWritten} [505-505]
[m[m07.11.2021 - 16:16:50.349 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testResultSetWithoutHeaders has 4 assertions: 
 assertFalse(csvw.checkError()); ref {csvw} [520-520],
 assertNotNull(result); ref {result} [523-523],
 assertEquals("\"v1\",\"v2\",\"v3\"\n", result); ref {result} [524-524],
 assertEquals(1, linesWritten); ref {linesWritten} [525-525]
[m[m07.11.2021 - 16:16:50.349 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testMultiLineResultSetWithoutHeaders has 4 assertions: 
 assertFalse(csvw.checkError()); ref {csvw} [541-541],
 assertNotNull(result); ref {result} [544-544],
 assertEquals("\"v1\",\"v2\",\"v3\"\n\"v1\",\"v2\",\"v3\"\n\"v1\",\"v2\",\"v3\"\n", result); ref {result} [545-545],
 assertEquals(3, linesWritten); ref {linesWritten} [546-546]
[m[m07.11.2021 - 16:16:50.349 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testResultSetTrim has 4 assertions: 
 assertFalse(csvw.checkError()); ref {csvw} [561-561],
 assertNotNull(result); ref {result} [564-564],
 assertEquals("\"Foo\",\"Bar\",\"baz\"\n\"v1\",\"v2\",\"v3\"\n", result); ref {result} [565-565],
 assertEquals(2, linesWritten); ref {linesWritten} [566-566]
[m[m07.11.2021 - 16:16:50.349 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::needToSetBothQuoteAndEscapeCharIfYouWantThemToBeTheSame has 4 assertions: 
 assertFalse(csvw.checkError()); ref {csvw} [581-581],
 assertNotNull(result); ref {result} [584-584],
 assertEquals("'Foo','Bar','baz'\n'v1','v2''v2a','v3'\n", result); ref {result} [585-585],
 assertEquals(2, linesWritten); ref {linesWritten} [586-586]
[m[m07.11.2021 - 16:16:50.349 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::issue123SeparatorEscapedWhenQuoteIsNoQuoteChar has 2 assertions: 
 assertNotNull(result); ref {result} [602-602],
 assertEquals("Foo,Bar,baz\nv1,v2" + CSVWriter.DEFAULT_ESCAPE_CHARACTER + CSVWriter.DEFAULT_ESCAPE_CHARACTER + "v2a,v3\n", result); ref {CSVWriter.DEFAULT_ESCAPE_CHARACTER, result, CSVWriter} [603-603]
[m[m07.11.2021 - 16:16:50.349 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::issue123SeparatorEscapedWhenQuoteIsNoQuoteCharSpecifingNoneDefaultEscapeChar has 2 assertions: 
 assertNotNull(result); ref {result} [619-619],
 assertEquals("Foo,Bar,baz\nv1,v2" + escapeCharacter + escapeCharacter + "v2a" + escapeCharacter + CSVWriter.DEFAULT_SEPARATOR + "v2b,v3\n", result); ref {result, CSVWriter.DEFAULT_SEPARATOR, CSVWriter, escapeCharacter} [620-620]
[m[m07.11.2021 - 16:16:50.349 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::testIOException has 1 assertions: 
 assertTrue(csvWriter.checkError()); ref {csvWriter} [633-633]
[m[m07.11.2021 - 16:16:50.350 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVWriterTest::checkErrorReturnsTrueWhenPassedInPrintWriter has 1 assertions: 
 assertTrue(csvWriter.checkError()); ref {csvWriter} [649-649]
[m[m07.11.2021 - 16:16:50.354 [INFO ] ParsingStrategy.parseTestSuite() - Found 20 test cases
[m[m07.11.2021 - 16:16:50.355 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanTest::throwRuntimeExceptionWhenExceptionIsThrown has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.355 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanTest::throwRuntimeExceptionLineWhenExceptionIsThrown has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.355 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanTest::parseBeanWithNoAnnotations has 3 assertions: 
 assertEquals(2, beanList.size()); ref {beanList} [163-163],
 assertTrue(beanList.contains(createMockBean("kyle", "abc123456", 123))); ref {beanList} [164-164],
 assertTrue(beanList.contains(createMockBean("jimmy", "def098765", 456))); ref {beanList} [165-165]
[m[m07.11.2021 - 16:16:50.355 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanTest::parseBeanWithAnnotations has 4 assertions: 
 assertEquals(2, beanList.size()); ref {beanList} [183-183],
 assertTrue(expectedNames.contains(bean.getName())); ref {expectedNames, bean} [189-189],
 assertTrue(expectedOrderNumbers.contains(bean.getOrderNumber())); ref {expectedOrderNumbers, bean} [190-190],
 assertTrue(expectedNums.contains(bean.getNum())); ref {expectedNums, bean} [191-191]
[m[m07.11.2021 - 16:16:50.355 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanTest::parseBeanWithSomeAnnotations has 4 assertions: 
 assertEquals(2, beanList.size()); ref {beanList} [202-202],
 assertTrue(expectedNames.contains(bean.getName())); ref {expectedNames, bean} [207-207],
 assertTrue(expectedNums.contains(bean.getNum())); ref {expectedNums, bean} [208-208],
 assertNull(bean.getOrderNumber()); ref {bean} [209-209]
[m[m07.11.2021 - 16:16:50.355 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanTest::parseAnnotatedBeanWithAllValidDataTypes has 10 assertions: 
 assertEquals(4, beanList.size()); ref {beanList} [221-221],
 assertTrue(bean.getFamilyId() == 922337203685477580L); ref {bean} [223-223],
 assertTrue(bean.getFamilyName().equals("Jones")); ref {bean} [224-224],
 assertTrue(bean.getFamilySize() == 5); ref {bean} [225-225],
 assertTrue(bean.getAverageAge() == 18.77293748162537D); ref {bean} [226-226],
 assertTrue(bean.getAverageIncome() == 32000.729F); ref {bean} [227-227],
 assertTrue(bean.getNumberOfPets() == 1); ref {bean} [228-228],
 assertTrue(bean.getNumberOfBedrooms() == 4); ref {bean} [229-229],
 assertTrue(bean.getZipcodePrefix() == 'Z'); ref {bean} [230-230],
 assertTrue(bean.isHasBeenContacted()); ref {bean} [231-231]
[m[m07.11.2021 - 16:16:50.356 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanTest::parseAnnotatedBeanWithPrivateField has 3 assertions: 
 assertEquals(1, beanList.size()); ref {beanList} [241-241],
 assertTrue("firstValue".equals(bean.getPrivateField1())); ref {bean} [244-244],
 assertTrue("secondValue".equals(bean.getPrivateField2())); ref {bean} [245-245]
[m[m07.11.2021 - 16:16:50.356 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanTest::parseAnnotatedBeanWithFieldsOfAllAccessModifierTypes has 5 assertions: 
 assertEquals(1, beanList.size()); ref {beanList} [255-255],
 assertTrue("firstValue".equals(bean.getPublicField())); ref {bean} [258-258],
 assertTrue("secondValue".equals(bean.getPrivateField())); ref {bean} [259-259],
 assertTrue("thirdValue".equals(bean.getProtectedField())); ref {bean} [260-260],
 assertTrue("fourthValue".equals(bean.getPackagePrivateField())); ref {bean} [261-261]
[m[m07.11.2021 - 16:16:50.356 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanTest::bug133ShouldNotThrowNullPointerExceptionWhenProcessingEmptyWithNoAnnotations has 1 assertions: 
 assertEquals(2, beanList.size()); ref {beanList} [282-282]
[m[m07.11.2021 - 16:16:50.356 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanTest::throwRuntimeExceptionWhenUnsupportedDataTypeUsedInAnnotatedBean has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.356 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanTest::throwRuntimeExceptionWhenRequiredFieldNotProvidedInAnnotatedBean has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.356 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanTest::throwIllegalStateWhenParseWithoutArgumentsIsCalled has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.356 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanTest::throwIllegalStateWhenOnlyReaderIsSpecifiedToParseWithoutArguments has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.357 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanTest::throwIllegalStateWhenOnlyMapperIsSpecifiedToParseWithoutArguments has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.357 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanTest::throwIllegalStateWhenReaderNotProvidedInBuilder has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.357 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanTest::throwIllegalStateWhenTypeAndMapperNotProvidedInBuilder has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.357 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanTest::testMinimumBuilder has 1 assertions: 
 assertEquals(2, result.size()); ref {result} [343-343]
[m[m07.11.2021 - 16:16:50.357 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanTest::testMaximumBuilder has 6 assertions: 
 // Three lines, one filtered, one throws an exception
assertEquals(1, result.size()); ref {result} [386-386],
 assertEquals(1, csvtb.getCapturedExceptions().size()); ref {csvtb} [387-387],
 assertEquals("\ttest string of everything!", bean.getStringClass()); ref {bean} [389-389],
 assertTrue(bean.getBoolWrapped()); ref {bean} [390-390],
 assertFalse(bean.isBoolPrimitive()); ref {bean} [391-391],
 assertTrue(bean.getByteWrappedDefaultLocale() == 1); ref {bean} [392-392]
[m[m07.11.2021 - 16:16:50.357 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanTest::testColumnMappingStrategyWithBuilder has 1 assertions: 
 assertEquals(2, result.size()); ref {result} [404-404]
[m[m07.11.2021 - 16:16:50.357 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.CsvToBeanTest::testMappingWithoutAnnotationsWithBuilder has 1 assertions: 
 assertEquals(2, result.size()); ref {result} [414-414]
[m[m07.11.2021 - 16:16:50.358 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:16:50.358 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:16:50.358 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:16:50.358 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:16:50.358 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:16:50.369 [INFO ] ParsingStrategy.parseTestSuite() - Found 23 test cases
[m[m07.11.2021 - 16:16:50.370 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::canPrintColumnNames has 1 assertions: 
 assertArrayEquals(expectedNames, columnNames); ref {expectedNames, columnNames} [49-49]
[m[m07.11.2021 - 16:16:50.370 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::getObjectFromResultSet has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [65-65]
[m[m07.11.2021 - 16:16:50.370 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::getBitFromResultSet has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [82-82]
[m[m07.11.2021 - 16:16:50.370 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::getBooleanFromResultSet has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [98-98]
[m[m07.11.2021 - 16:16:50.370 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::getBigIntFromResultSet has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [114-114]
[m[m07.11.2021 - 16:16:50.370 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::getBigDecimalFromResultSet has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [131-131]
[m[m07.11.2021 - 16:16:50.370 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::issue121ConvertingNaNForDoubleOrFloat has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [147-147]
[m[m07.11.2021 - 16:16:50.371 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::issue121ConvertingPositiveInfinityForDoubleOrFloat has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [163-163]
[m[m07.11.2021 - 16:16:50.371 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::issue121ConvertingNegativeInfinityForDoubleOrFloat has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [180-180]
[m[m07.11.2021 - 16:16:50.371 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::getIntegerFromResultSet has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [196-196]
[m[m07.11.2021 - 16:16:50.371 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::getCharFromResultSet has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [213-213]
[m[m07.11.2021 - 16:16:50.371 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::getCharHandlesNulls has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [230-230]
[m[m07.11.2021 - 16:16:50.371 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::getUnsupportedFromResultSet has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [247-247]
[m[m07.11.2021 - 16:16:50.371 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::getDateFromResultSet has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [268-268]
[m[m07.11.2021 - 16:16:50.372 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::getDateFromResultSetUsingCustomFormat has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [290-290]
[m[m07.11.2021 - 16:16:50.372 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::setDateFormat has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [313-313]
[m[m07.11.2021 - 16:16:50.372 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::getTimeFromResultSet has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [334-334]
[m[m07.11.2021 - 16:16:50.372 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::getTimestampFromResultSet has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [354-354]
[m[m07.11.2021 - 16:16:50.372 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::getTimestampFromResultSetWithCustomFormat has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [375-375]
[m[m07.11.2021 - 16:16:50.372 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::setDateTimeFormat has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [397-397]
[m[m07.11.2021 - 16:16:50.372 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::getClobFromResultSet has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [415-415]
[m[m07.11.2021 - 16:16:50.372 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::getEmptyClobFromResultSet has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [433-433]
[m[m07.11.2021 - 16:16:50.372 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetHelperServiceTest::getLargeClobFromResultSet has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [451-451]
[m[m07.11.2021 - 16:16:50.376 [INFO ] ParsingStrategy.parseTestSuite() - Found 10 test cases
[m[m07.11.2021 - 16:16:50.376 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.UniCodeTest::canParseUnicode has 4 assertions: 
 assertEquals(2, items.length); ref {items.length, items} [30-30],
 assertEquals(FIRST_STRING, items[0]); ref {FIRST_STRING, items} [31-31],
 assertEquals(SECOND_STRING, items[1]); ref {items, SECOND_STRING} [32-32],
 assertArrayEquals(UNICODE_ARRAY, items); ref {UNICODE_ARRAY, items} [33-33]
[m[m07.11.2021 - 16:16:50.376 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.UniCodeTest::readerTest has 1 assertions: 
 assertEquals(FIRST_STRING, testString); ref {testString, FIRST_STRING} [40-40]
[m[m07.11.2021 - 16:16:50.376 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.UniCodeTest::writerTest has 1 assertions: 
 assertEquals(FIRST_STRING, sw.toString()); ref {sw, FIRST_STRING} [47-47]
[m[m07.11.2021 - 16:16:50.376 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.UniCodeTest::runUniCodeThroughCSVReader has 4 assertions: 
 assertEquals(2, items.length); ref {items.length, items} [54-54],
 assertEquals(FIRST_STRING, items[0]); ref {FIRST_STRING, items} [55-55],
 assertEquals(SECOND_STRING, items[1]); ref {items, SECOND_STRING} [56-56],
 assertArrayEquals(UNICODE_ARRAY, items); ref {UNICODE_ARRAY, items} [57-57]
[m[m07.11.2021 - 16:16:50.376 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.UniCodeTest::runUniCodeThroughCSVWriter has 1 assertions: 
 assertEquals(COMPOUND_STRING_WITH_QUOTES.trim(), sw.toString().trim()); ref {sw, COMPOUND_STRING_WITH_QUOTES} [65-65]
[m[m07.11.2021 - 16:16:50.376 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.UniCodeTest::runASCIIThroughCSVWriter has 1 assertions: 
 assertEquals(ASCII_STRING_WITH_QUOTES.trim(), sw.toString().trim()); ref {ASCII_STRING_WITH_QUOTES, sw} [73-73]
[m[m07.11.2021 - 16:16:50.377 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.UniCodeTest::writeThenReadAscii has 2 assertions: 
 assertEquals(2, items.length); ref {items.length, items} [84-84],
 assertArrayEquals(ASCII_ARRAY, items); ref {ASCII_ARRAY, items} [85-85]
[m[m07.11.2021 - 16:16:50.377 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.UniCodeTest::writeThenReadTwiceAscii has 5 assertions: 
 assertEquals(2, lines.size()); ref {lines} [97-97],
 assertEquals(2, items.length); ref {items.length, items} [100-100],
 assertArrayEquals(ASCII_ARRAY, items); ref {ASCII_ARRAY, items} [101-101],
 assertEquals(2, items.length); ref {items.length, items} [105-105],
 assertArrayEquals(ASCII_ARRAY, items); ref {ASCII_ARRAY, items} [106-106]
[m[m07.11.2021 - 16:16:50.377 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.UniCodeTest::writeThenReadTwiceUnicode has 5 assertions: 
 assertEquals(2, lines.size()); ref {lines} [118-118],
 assertEquals(2, items.length); ref {items.length, items} [121-121],
 assertArrayEquals(UNICODE_ARRAY, items); ref {UNICODE_ARRAY, items} [122-122],
 assertEquals(2, items.length); ref {items.length, items} [126-126],
 assertArrayEquals(UNICODE_ARRAY, items); ref {UNICODE_ARRAY, items} [127-127]
[m[m07.11.2021 - 16:16:50.377 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.UniCodeTest::writeThenReadTwiceMixedUnicode has 5 assertions: 
 assertEquals(2, lines.size()); ref {lines} [139-139],
 assertEquals(4, items.length); ref {items.length, items} [142-142],
 assertArrayEquals(MIXED_ARRAY, items); ref {MIXED_ARRAY, items} [143-143],
 assertEquals(4, items.length); ref {items.length, items} [147-147],
 assertArrayEquals(MIXED_ARRAY, items); ref {MIXED_ARRAY, items} [148-148]
[m[m07.11.2021 - 16:16:50.377 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:16:50.377 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:16:50.379 [INFO ] ParsingStrategy.parseTestSuite() - Found 7 test cases
[m[m07.11.2021 - 16:16:50.380 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserBuilderTest::testDefaultBuilder has 14 assertions: 
 assertEquals(ICSVParser.DEFAULT_SEPARATOR, builder.getSeparator()); ref {ICSVParser.DEFAULT_SEPARATOR, builder, ICSVParser} [20-22],
 assertEquals(ICSVParser.DEFAULT_QUOTE_CHARACTER, builder.getQuoteChar()); ref {ICSVParser.DEFAULT_QUOTE_CHARACTER, builder, ICSVParser} [23-25],
 assertEquals(ICSVParser.DEFAULT_ESCAPE_CHARACTER, builder.getEscapeChar()); ref {builder, ICSVParser.DEFAULT_ESCAPE_CHARACTER, ICSVParser} [26-28],
 assertEquals(ICSVParser.DEFAULT_STRICT_QUOTES, builder.isStrictQuotes()); ref {builder, ICSVParser.DEFAULT_STRICT_QUOTES, ICSVParser} [29-31],
 assertEquals(ICSVParser.DEFAULT_IGNORE_LEADING_WHITESPACE, builder.isIgnoreLeadingWhiteSpace()); ref {builder, ICSVParser.DEFAULT_IGNORE_LEADING_WHITESPACE, ICSVParser} [32-34],
 assertEquals(ICSVParser.DEFAULT_IGNORE_QUOTATIONS, builder.isIgnoreQuotations()); ref {builder, ICSVParser.DEFAULT_IGNORE_QUOTATIONS, ICSVParser} [35-37],
 assertEquals(CSVReaderNullFieldIndicator.NEITHER, builder.nullFieldIndicator()); ref {CSVReaderNullFieldIndicator, CSVReaderNullFieldIndicator.NEITHER, builder} [38-38],
 assertEquals(ICSVParser.DEFAULT_SEPARATOR, parser.getSeparator()); ref {ICSVParser.DEFAULT_SEPARATOR, parser, ICSVParser} [41-43],
 assertEquals(ICSVParser.DEFAULT_QUOTE_CHARACTER, parser.getQuotechar()); ref {ICSVParser.DEFAULT_QUOTE_CHARACTER, parser, ICSVParser} [44-46],
 assertEquals(ICSVParser.DEFAULT_ESCAPE_CHARACTER, parser.getEscape()); ref {parser, ICSVParser.DEFAULT_ESCAPE_CHARACTER, ICSVParser} [47-49],
 assertEquals(ICSVParser.DEFAULT_STRICT_QUOTES, parser.isStrictQuotes()); ref {parser, ICSVParser.DEFAULT_STRICT_QUOTES, ICSVParser} [50-52],
 assertEquals(ICSVParser.DEFAULT_IGNORE_LEADING_WHITESPACE, parser.isIgnoreLeadingWhiteSpace()); ref {parser, ICSVParser.DEFAULT_IGNORE_LEADING_WHITESPACE, ICSVParser} [53-55],
 assertEquals(ICSVParser.DEFAULT_IGNORE_QUOTATIONS, parser.isIgnoreQuotations()); ref {parser, ICSVParser.DEFAULT_IGNORE_QUOTATIONS, ICSVParser} [56-58],
 assertEquals(CSVReaderNullFieldIndicator.NEITHER, parser.nullFieldIndicator()); ref {parser, CSVReaderNullFieldIndicator, CSVReaderNullFieldIndicator.NEITHER} [59-59]
[m[m07.11.2021 - 16:16:50.380 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserBuilderTest::testWithSeparator has 2 assertions: 
 assertEquals(expected, builder.getSeparator()); ref {expected, builder} [66-66],
 assertEquals(expected, builder.build().getSeparator()); ref {expected, builder} [67-67]
[m[m07.11.2021 - 16:16:50.380 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserBuilderTest::testWithQuoteChar has 2 assertions: 
 assertEquals(expected, builder.getQuoteChar()); ref {expected, builder} [74-74],
 assertEquals(expected, builder.build().getQuotechar()); ref {expected, builder} [75-75]
[m[m07.11.2021 - 16:16:50.380 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserBuilderTest::testWithEscapeChar has 2 assertions: 
 assertEquals(expected, builder.getEscapeChar()); ref {expected, builder} [82-82],
 assertEquals(expected, builder.build().getEscape()); ref {expected, builder} [83-83]
[m[m07.11.2021 - 16:16:50.380 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserBuilderTest::testWithStrictQuotes has 2 assertions: 
 assertEquals(expected, builder.isStrictQuotes()); ref {expected, builder} [90-90],
 assertEquals(expected, builder.build().isStrictQuotes()); ref {expected, builder} [91-91]
[m[m07.11.2021 - 16:16:50.381 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserBuilderTest::testWithIgnoreLeadingWhiteSpace has 2 assertions: 
 assertEquals(expected, builder.isIgnoreLeadingWhiteSpace()); ref {expected, builder} [98-98],
 assertEquals(expected, builder.build().isIgnoreLeadingWhiteSpace()); ref {expected, builder} [99-99]
[m[m07.11.2021 - 16:16:50.381 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.CSVParserBuilderTest::testWithIgnoreQuotations has 2 assertions: 
 assertEquals(expected, builder.isIgnoreQuotations()); ref {expected, builder} [106-106],
 assertEquals(expected, builder.build().isIgnoreQuotations()); ref {expected, builder} [107-107]
[m[m07.11.2021 - 16:16:50.381 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:16:50.384 [INFO ] ParsingStrategy.parseTestSuite() - Found 12 test cases
[m[m07.11.2021 - 16:16:50.384 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.ColumnPositionMappingStrategyTest::getColumnIndexBeforeMappingSetReturnsNull has 1 assertions: 
 assertNull(strat.getColumnIndex("name")); ref {strat} [41-41]
[m[m07.11.2021 - 16:16:50.384 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.ColumnPositionMappingStrategyTest::getColumnIndexEmptyMappingReturnsNull has 1 assertions: 
 assertNull(strat.getColumnIndex("name")); ref {strat} [47-47]
[m[m07.11.2021 - 16:16:50.384 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.ColumnPositionMappingStrategyTest::getColumnIndex has 5 assertions: 
 assertNull(strat.getColumnIndex("name")); ref {strat} [52-52],
 assertEquals(0, strat.getColumnIndex("name").intValue()); ref {strat} [56-56],
 assertEquals(1, strat.getColumnIndex("orderNumber").intValue()); ref {strat} [57-57],
 assertEquals(2, strat.getColumnIndex("id").intValue()); ref {strat} [58-58],
 assertNull(strat.getColumnIndex("name not mapped")); ref {strat} [60-60]
[m[m07.11.2021 - 16:16:50.384 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.ColumnPositionMappingStrategyTest::testParse has 6 assertions: 
 assertNotNull(list); ref {list} [73-73],
 assertTrue(list.size() == 2); ref {list} [74-74],
 assertEquals("kyle", bean.getName()); ref {bean} [76-76],
 assertEquals("123456", bean.getOrderNumber()); ref {bean} [77-77],
 assertEquals("emp123", bean.getId()); ref {bean} [78-78],
 assertEquals(1, bean.getNum()); ref {bean} [79-79]
[m[m07.11.2021 - 16:16:50.384 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.ColumnPositionMappingStrategyTest::testParseWithTrailingSpaces has 6 assertions: 
 assertNotNull(list); ref {list} [93-93],
 assertTrue(list.size() == 2); ref {list} [94-94],
 assertEquals("kyle  ", bean.getName()); ref {bean} [96-96],
 assertEquals("123456  ", bean.getOrderNumber()); ref {bean} [97-97],
 assertEquals("emp123  ", bean.getId()); ref {bean} [98-98],
 assertEquals(1, bean.getNum()); ref {bean} [99-99]
[m[m07.11.2021 - 16:16:50.385 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.ColumnPositionMappingStrategyTest::testGetColumnMapping has 5 assertions: 
 assertNotNull(columnMapping); ref {columnMapping} [105-105],
 assertEquals(0, columnMapping.length); ref {columnMapping.length, columnMapping} [106-106],
 assertNotNull(columnMapping); ref {columnMapping} [112-112],
 assertEquals(3, columnMapping.length); ref {columnMapping.length, columnMapping} [113-113],
 assertArrayEquals(columns, columnMapping); ref {columns, columnMapping} [114-114]
[m[m07.11.2021 - 16:16:50.385 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.ColumnPositionMappingStrategyTest::testGetColumnNames has 4 assertions: 
 assertEquals("name", strat.getColumnName(0)); ref {strat} [123-123],
 assertEquals(null, strat.getColumnName(1)); ref {strat} [124-124],
 assertEquals("id", strat.getColumnName(2)); ref {strat} [125-125],
 assertEquals(null, strat.getColumnName(3)); ref {strat} [126-126]
[m[m07.11.2021 - 16:16:50.385 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.ColumnPositionMappingStrategyTest::testGetColumnNamesArray has 4 assertions: 
 assertEquals(3, mapping.length); ref {mapping.length, mapping} [135-135],
 assertEquals("name", mapping[0]); ref {mapping} [136-136],
 assertEquals(null, mapping[1]); ref {mapping} [137-137],
 assertEquals("id", mapping[2]); ref {mapping} [138-138]
[m[m07.11.2021 - 16:16:50.385 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.ColumnPositionMappingStrategyTest::getColumnNamesWhenNullArray has 3 assertions: 
 assertEquals(null, strat.getColumnName(0)); ref {strat} [145-145],
 assertEquals(null, strat.getColumnName(1)); ref {strat} [146-146],
 assertArrayEquals(new String[0], strat.getColumnMapping()); ref {strat} [147-147]
[m[m07.11.2021 - 16:16:50.385 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.ColumnPositionMappingStrategyTest::getColumnNamesWhenNullColumnName has 3 assertions: 
 assertEquals(null, strat.getColumnName(0)); ref {strat} [155-155],
 assertEquals(null, strat.getColumnName(1)); ref {strat} [156-156],
 assertArrayEquals(columns, strat.getColumnMapping()); ref {columns, strat} [157-157]
[m[m07.11.2021 - 16:16:50.385 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.ColumnPositionMappingStrategyTest::getColumnNamesWhenEmptyMapping has 2 assertions: 
 assertEquals(null, strat.getColumnName(0)); ref {strat} [164-164],
 assertArrayEquals(new String[0], strat.getColumnMapping()); ref {strat} [165-165]
[m[m07.11.2021 - 16:16:50.385 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.bean.ColumnPositionMappingStrategyTest::throwsIllegalStateExceptionIfTypeNotSet has 1 assertions: 
 assertEquals(IllegalStateException.class, e.getCause().getClass()); ref {e} [178-178]
[m[m07.11.2021 - 16:16:50.386 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:16:50.391 [INFO ] ParsingStrategy.parseTestSuite() - Found 17 test cases
[m[m07.11.2021 - 16:16:50.391 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetColumnNameHelperServiceTest::canPrintColumnNames has 1 assertions: 
 assertArrayEquals(expectedNames, columnNames); ref {expectedNames, columnNames} [35-35]
[m[m07.11.2021 - 16:16:50.391 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetColumnNameHelperServiceTest::setColumnNames has 1 assertions: 
 assertArrayEquals(columnHeaders, rsColumnNames); ref {columnHeaders, rsColumnNames} [54-54]
[m[m07.11.2021 - 16:16:50.391 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetColumnNameHelperServiceTest::getColumnNamesWithSubsetOutOfOrder has 1 assertions: 
 assertArrayEquals(columnHeaders, rsColumnNames); ref {columnHeaders, rsColumnNames} [73-73]
[m[m07.11.2021 - 16:16:50.392 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetColumnNameHelperServiceTest::numberOfColumnsNamesMustMatchNumberOfHeaders has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.392 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetColumnNameHelperServiceTest::cannotHaveNullColumnName has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.392 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetColumnNameHelperServiceTest::cannotHaveEmptyColumnName has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.392 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetColumnNameHelperServiceTest::cannotHaveSpaceColumnName has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.392 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetColumnNameHelperServiceTest::cannotHaveNullHeaderName has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.392 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetColumnNameHelperServiceTest::cannotHaveEmptyHeaderName has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.392 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetColumnNameHelperServiceTest::cannotHaveSpaceHeaderName has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.392 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetColumnNameHelperServiceTest::getColumnNamesThrowsExceptionIfColumnDoesNotExist has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.392 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetColumnNameHelperServiceTest::getBooleanFromResultSet has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [172-172]
[m[m07.11.2021 - 16:16:50.392 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetColumnNameHelperServiceTest::getBooleanSubsetFromResultSet has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [193-193]
[m[m07.11.2021 - 16:16:50.393 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetColumnNameHelperServiceTest::getSubsetWithTrim has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [214-214]
[m[m07.11.2021 - 16:16:50.393 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetColumnNameHelperServiceTest::getCharSetWithNullAndTrim has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [231-231]
[m[m07.11.2021 - 16:16:50.393 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetColumnNameHelperServiceTest::getTimestampFromResultSetWithCustomFormat has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [252-252]
[m[m07.11.2021 - 16:16:50.393 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.ResultSetColumnNameHelperServiceTest::getSubsetFromResultSetWithCustomFormat has 1 assertions: 
 assertArrayEquals(expectedValues, columnValues); ref {expectedValues, columnValues} [278-278]
[m[m07.11.2021 - 16:16:50.393 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:16:50.395 [INFO ] ParsingStrategy.parseTestSuite() - Found 4 test cases
[m[m07.11.2021 - 16:16:50.395 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase integrationTest.SR34.SR34Test::defaultReaderInterpetsNullCorrectly has 7 assertions: 
 assertEquals(6, line.length); ref {line.length, line} [35-35],
 assertEquals("10", line[0]); ref {line} [36-36],
 assertEquals("IBM", line[1]); ref {line} [37-37],
 assertEquals("2015063", line[2]); ref {line} [38-38],
 assertEquals("064230733910", line[3]); ref {line} [39-39],
 assertEquals("\0", line[4]); ref {line} [40-40],
 assertEquals("01 ", line[5]); ref {line} [41-41]
[m[m07.11.2021 - 16:16:50.395 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase integrationTest.SR34.SR34Test::doubleBufferedReaderInterpetsNullCorrectly has 7 assertions: 
 assertEquals(6, line.length); ref {line.length, line} [51-51],
 assertEquals("10", line[0]); ref {line} [52-52],
 assertEquals("IBM", line[1]); ref {line} [53-53],
 assertEquals("2015063", line[2]); ref {line} [54-54],
 assertEquals("064230733910", line[3]); ref {line} [55-55],
 assertEquals("\0", line[4]); ref {line} [56-56],
 assertEquals("01 ", line[5]); ref {line} [57-57]
[m[m07.11.2021 - 16:16:50.395 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase integrationTest.SR34.SR34Test::usingNullAsDelimeterWillFailBecauseYouAreEscapingTheQuote has 0 assertions: 
 
[m[m07.11.2021 - 16:16:50.395 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase integrationTest.SR34.SR34Test::youNeedToEscapeTheNullCharactersIfUsingNullAsEscape has 8 assertions: 
 assertEquals(1, rawTokens1.size()); ref {rawTokens1} [86-86],
 assertEquals(6, line.length); ref {line.length, line} [89-89],
 assertEquals("10", line[0]); ref {line} [90-90],
 assertEquals("IBM", line[1]); ref {line} [91-91],
 assertEquals("2015063", line[2]); ref {line} [92-92],
 assertEquals("064230733910", line[3]); ref {line} [93-93],
 assertEquals("\0", line[4]); ref {line} [94-94],
 assertEquals("01 ", line[5]); ref {line} [95-95]
[m[m07.11.2021 - 16:16:50.396 [INFO ] ParsingStrategy.parseTestSuite() - Found 3 test cases
[m[m07.11.2021 - 16:16:50.396 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.RFC4180ParserBuilderTest::testDefaultBuilder has 9 assertions: 
 assertEquals(ICSVParser.DEFAULT_SEPARATOR, builder.getSeparator()); ref {ICSVParser.DEFAULT_SEPARATOR, builder, ICSVParser} [21-23],
 assertEquals(ICSVParser.DEFAULT_QUOTE_CHARACTER, builder.getQuoteChar()); ref {ICSVParser.DEFAULT_QUOTE_CHARACTER, builder, ICSVParser} [24-26],
 assertEquals(ICSVParser.DEFAULT_ESCAPE_CHARACTER, builder.getEscapeChar()); ref {builder, ICSVParser.DEFAULT_ESCAPE_CHARACTER, ICSVParser} [27-29],
 assertEquals(ICSVParser.DEFAULT_STRICT_QUOTES, builder.isStrictQuotes()); ref {builder, ICSVParser.DEFAULT_STRICT_QUOTES, ICSVParser} [30-32],
 assertEquals(ICSVParser.DEFAULT_IGNORE_LEADING_WHITESPACE, builder.isIgnoreLeadingWhiteSpace()); ref {builder, ICSVParser.DEFAULT_IGNORE_LEADING_WHITESPACE, ICSVParser} [33-35],
 assertEquals(ICSVParser.DEFAULT_IGNORE_QUOTATIONS, builder.isIgnoreQuotations()); ref {builder, ICSVParser.DEFAULT_IGNORE_QUOTATIONS, ICSVParser} [36-38],
 assertEquals(CSVReaderNullFieldIndicator.NEITHER, builder.nullFieldIndicator()); ref {CSVReaderNullFieldIndicator, CSVReaderNullFieldIndicator.NEITHER, builder} [39-39],
 assertEquals(ICSVParser.DEFAULT_SEPARATOR, parser.getSeparator()); ref {ICSVParser.DEFAULT_SEPARATOR, parser, ICSVParser} [42-44],
 assertEquals(ICSVParser.DEFAULT_QUOTE_CHARACTER, parser.getQuotechar()); ref {ICSVParser.DEFAULT_QUOTE_CHARACTER, parser, ICSVParser} [45-47]
[m[m07.11.2021 - 16:16:50.396 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.RFC4180ParserBuilderTest::testWithSeparator has 2 assertions: 
 assertEquals(expected, builder.getSeparator()); ref {expected, builder} [54-54],
 assertEquals(expected, builder.build().getSeparator()); ref {expected, builder} [55-55]
[m[m07.11.2021 - 16:16:50.397 [INFO ] ParsingStrategy.lambda$parseTestSuite$14() - Testcase com.opencsv.RFC4180ParserBuilderTest::testWithQuoteChar has 2 assertions: 
 assertEquals(expected, builder.getQuoteChar()); ref {expected, builder} [62-62],
 assertEquals(expected, builder.build().getQuotechar()); ref {expected, builder} [63-63]
[m[m07.11.2021 - 16:16:50.397 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:16:50.397 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:16:50.397 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:16:50.397 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:16:50.398 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:16:50.398 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m07.11.2021 - 16:16:50.399 [INFO ] ParsingStrategy.mergePartialSuites() - ====================================================================
[m[m07.11.2021 - 16:16:50.399 [INFO ] ParsingStrategy.mergePartialSuites() - Finished parsing the test suite.
[m[m07.11.2021 - 16:16:50.401 [INFO ] ParsingStrategy.mergePartialSuites() - It contains 281 test cases and 854 assertions.
[m[m07.11.2021 - 16:16:50.403 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 1/281
[m[m07.11.2021 - 16:16:50.403 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanFilterTest#testColumnNameTranslationWithLineFiltering
[m[32m07.11.2021 - 16:16:50.404 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanFilterTest#testColumnNameTranslationWithLineFiltering.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanFilterTest#testColumnNameTranslationWithLineFiltering
[m[m07.11.2021 - 16:16:50.659 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:50.660 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanFilterTest#testColumnNameTranslationWithLineFiltering.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanFilterTest#testColumnNameTranslationWithLineFiltering/report.xml
[m[m07.11.2021 - 16:16:50.914 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanFilterTest#testColumnNameTranslationWithLineFiltering was generated successfully
[m[m07.11.2021 - 16:16:50.914 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 2/281
[m[m07.11.2021 - 16:16:50.914 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase integrationTest.isClosed.isClosedTest#issue115StandardReadFailsAfterALargeNumberOfReads
[m[32m07.11.2021 - 16:16:50.915 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/integrationTest.isClosed.isClosedTest#issue115StandardReadFailsAfterALargeNumberOfReads.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner integrationTest.isClosed.isClosedTest#issue115StandardReadFailsAfterALargeNumberOfReads
[m[m07.11.2021 - 16:16:51.144 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:51.145 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/integrationTest.isClosed.isClosedTest#issue115StandardReadFailsAfterALargeNumberOfReads.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/integrationTest.isClosed.isClosedTest#issue115StandardReadFailsAfterALargeNumberOfReads/report.xml
[m[m07.11.2021 - 16:16:51.437 [INFO ] MethodCoverageStrategy.createReport() - Report for integrationTest.isClosed.isClosedTest#issue115StandardReadFailsAfterALargeNumberOfReads was generated successfully
[m[m07.11.2021 - 16:16:51.438 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 3/281
[m[m07.11.2021 - 16:16:51.438 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanDoubleTest#parseBeanWithNoAnnotations
[m[32m07.11.2021 - 16:16:51.438 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanDoubleTest#parseBeanWithNoAnnotations.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanDoubleTest#parseBeanWithNoAnnotations
[m[m07.11.2021 - 16:16:51.680 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:51.681 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanDoubleTest#parseBeanWithNoAnnotations.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanDoubleTest#parseBeanWithNoAnnotations/report.xml
[m[m07.11.2021 - 16:16:51.928 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanDoubleTest#parseBeanWithNoAnnotations was generated successfully
[m[m07.11.2021 - 16:16:51.928 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 4/281
[m[m07.11.2021 - 16:16:51.928 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testParseLine
[m[32m07.11.2021 - 16:16:51.929 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testParseLine.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testParseLine
[m[m07.11.2021 - 16:16:52.140 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:52.140 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testParseLine.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testParseLine/report.xml
[m[m07.11.2021 - 16:16:52.392 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testParseLine was generated successfully
[m[m07.11.2021 - 16:16:52.392 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 5/281
[m[m07.11.2021 - 16:16:52.393 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#parseSimpleString
[m[32m07.11.2021 - 16:16:52.393 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parseSimpleString.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#parseSimpleString
[m[m07.11.2021 - 16:16:52.603 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:52.604 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parseSimpleString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parseSimpleString/report.xml
[m[m07.11.2021 - 16:16:52.880 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#parseSimpleString was generated successfully
[m[m07.11.2021 - 16:16:52.880 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 6/281
[m[m07.11.2021 - 16:16:52.881 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#parseSimpleQuotedString
[m[32m07.11.2021 - 16:16:52.881 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parseSimpleQuotedString.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#parseSimpleQuotedString
[m[m07.11.2021 - 16:16:53.070 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:53.070 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parseSimpleQuotedString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parseSimpleQuotedString/report.xml
[m[m07.11.2021 - 16:16:53.323 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#parseSimpleQuotedString was generated successfully
[m[m07.11.2021 - 16:16:53.323 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 7/281
[m[m07.11.2021 - 16:16:53.323 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#parseSimpleQuotedStringWithSpaces
[m[32m07.11.2021 - 16:16:53.323 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parseSimpleQuotedStringWithSpaces.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#parseSimpleQuotedStringWithSpaces
[m[m07.11.2021 - 16:16:53.514 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:53.514 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parseSimpleQuotedStringWithSpaces.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parseSimpleQuotedStringWithSpaces/report.xml
[m[m07.11.2021 - 16:16:53.765 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#parseSimpleQuotedStringWithSpaces was generated successfully
[m[m07.11.2021 - 16:16:53.765 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 8/281
[m[m07.11.2021 - 16:16:53.765 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testParsedLineWithInternalQuota
[m[32m07.11.2021 - 16:16:53.765 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testParsedLineWithInternalQuota.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testParsedLineWithInternalQuota
[m[m07.11.2021 - 16:16:53.964 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:53.965 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testParsedLineWithInternalQuota.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testParsedLineWithInternalQuota/report.xml
[m[m07.11.2021 - 16:16:54.220 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testParsedLineWithInternalQuota was generated successfully
[m[m07.11.2021 - 16:16:54.221 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 9/281
[m[m07.11.2021 - 16:16:54.221 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#parseQuotedStringWithCommas
[m[32m07.11.2021 - 16:16:54.221 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parseQuotedStringWithCommas.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#parseQuotedStringWithCommas
[m[m07.11.2021 - 16:16:54.416 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:54.416 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parseQuotedStringWithCommas.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parseQuotedStringWithCommas/report.xml
[m[m07.11.2021 - 16:16:54.669 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#parseQuotedStringWithCommas was generated successfully
[m[m07.11.2021 - 16:16:54.669 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 10/281
[m[m07.11.2021 - 16:16:54.670 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#parseQuotedStringWithDefinedSeperator
[m[32m07.11.2021 - 16:16:54.670 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parseQuotedStringWithDefinedSeperator.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#parseQuotedStringWithDefinedSeperator
[m[m07.11.2021 - 16:16:54.875 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:54.876 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parseQuotedStringWithDefinedSeperator.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parseQuotedStringWithDefinedSeperator/report.xml
[m[m07.11.2021 - 16:16:55.144 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#parseQuotedStringWithDefinedSeperator was generated successfully
[m[m07.11.2021 - 16:16:55.144 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 11/281
[m[m07.11.2021 - 16:16:55.144 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#parseQuotedStringWithDefinedSeperatorAndQuote
[m[32m07.11.2021 - 16:16:55.144 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parseQuotedStringWithDefinedSeperatorAndQuote.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#parseQuotedStringWithDefinedSeperatorAndQuote
[m[m07.11.2021 - 16:16:55.365 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:55.365 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parseQuotedStringWithDefinedSeperatorAndQuote.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parseQuotedStringWithDefinedSeperatorAndQuote/report.xml
[m[m07.11.2021 - 16:16:55.616 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#parseQuotedStringWithDefinedSeperatorAndQuote was generated successfully
[m[m07.11.2021 - 16:16:55.616 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 12/281
[m[m07.11.2021 - 16:16:55.616 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#parseEmptyElements
[m[32m07.11.2021 - 16:16:55.616 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parseEmptyElements.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#parseEmptyElements
[m[m07.11.2021 - 16:16:55.829 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:55.829 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parseEmptyElements.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parseEmptyElements/report.xml
[m[m07.11.2021 - 16:16:56.065 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#parseEmptyElements was generated successfully
[m[m07.11.2021 - 16:16:56.065 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 13/281
[m[m07.11.2021 - 16:16:56.065 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#parseMultiLinedQuoted
[m[32m07.11.2021 - 16:16:56.065 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parseMultiLinedQuoted.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#parseMultiLinedQuoted
[m[m07.11.2021 - 16:16:56.280 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:56.281 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parseMultiLinedQuoted.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parseMultiLinedQuoted/report.xml
[m[m07.11.2021 - 16:16:56.529 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#parseMultiLinedQuoted was generated successfully
[m[m07.11.2021 - 16:16:56.529 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 14/281
[m[m07.11.2021 - 16:16:56.529 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#parseMultiLinedQuotedwithCarriageReturns
[m[32m07.11.2021 - 16:16:56.530 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parseMultiLinedQuotedwithCarriageReturns.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#parseMultiLinedQuotedwithCarriageReturns
[m[m07.11.2021 - 16:16:56.763 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:56.763 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parseMultiLinedQuotedwithCarriageReturns.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parseMultiLinedQuotedwithCarriageReturns/report.xml
[m[m07.11.2021 - 16:16:57.023 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#parseMultiLinedQuotedwithCarriageReturns was generated successfully
[m[m07.11.2021 - 16:16:57.023 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 15/281
[m[m07.11.2021 - 16:16:57.023 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testADoubleQuoteAsDataElement
[m[32m07.11.2021 - 16:16:57.023 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testADoubleQuoteAsDataElement.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testADoubleQuoteAsDataElement
[m[m07.11.2021 - 16:16:57.216 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:57.217 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testADoubleQuoteAsDataElement.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testADoubleQuoteAsDataElement/report.xml
[m[m07.11.2021 - 16:16:57.452 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testADoubleQuoteAsDataElement was generated successfully
[m[m07.11.2021 - 16:16:57.452 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 16/281
[m[m07.11.2021 - 16:16:57.452 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testEscapedDoubleQuoteAsDataElement
[m[32m07.11.2021 - 16:16:57.452 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testEscapedDoubleQuoteAsDataElement.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testEscapedDoubleQuoteAsDataElement
[m[m07.11.2021 - 16:16:57.648 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:57.648 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testEscapedDoubleQuoteAsDataElement.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testEscapedDoubleQuoteAsDataElement/report.xml
[m[m07.11.2021 - 16:16:57.903 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testEscapedDoubleQuoteAsDataElement was generated successfully
[m[m07.11.2021 - 16:16:57.904 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 17/281
[m[m07.11.2021 - 16:16:57.904 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#parseQuotedQuoteCharacters
[m[32m07.11.2021 - 16:16:57.904 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parseQuotedQuoteCharacters.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#parseQuotedQuoteCharacters
[m[m07.11.2021 - 16:16:58.093 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:58.093 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parseQuotedQuoteCharacters.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parseQuotedQuoteCharacters/report.xml
[m[m07.11.2021 - 16:16:58.341 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#parseQuotedQuoteCharacters was generated successfully
[m[m07.11.2021 - 16:16:58.341 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 18/281
[m[m07.11.2021 - 16:16:58.341 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#parseMultipleQuotes
[m[32m07.11.2021 - 16:16:58.341 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parseMultipleQuotes.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#parseMultipleQuotes
[m[m07.11.2021 - 16:16:58.550 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:58.551 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parseMultipleQuotes.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parseMultipleQuotes/report.xml
[m[m07.11.2021 - 16:16:58.811 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#parseMultipleQuotes was generated successfully
[m[m07.11.2021 - 16:16:58.811 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 19/281
[m[m07.11.2021 - 16:16:58.811 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#parseTrickyString
[m[32m07.11.2021 - 16:16:58.812 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parseTrickyString.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#parseTrickyString
[m[m07.11.2021 - 16:16:59.020 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:59.020 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parseTrickyString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parseTrickyString/report.xml
[m[m07.11.2021 - 16:16:59.285 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#parseTrickyString was generated successfully
[m[m07.11.2021 - 16:16:59.285 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 20/281
[m[m07.11.2021 - 16:16:59.285 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testAMultiLineInsideQuotes
[m[32m07.11.2021 - 16:16:59.285 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testAMultiLineInsideQuotes.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testAMultiLineInsideQuotes
[m[m07.11.2021 - 16:16:59.473 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:59.473 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testAMultiLineInsideQuotes.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testAMultiLineInsideQuotes/report.xml
[m[m07.11.2021 - 16:16:59.710 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testAMultiLineInsideQuotes was generated successfully
[m[m07.11.2021 - 16:16:59.710 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 21/281
[m[m07.11.2021 - 16:16:59.710 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testStrictQuoteSimple
[m[32m07.11.2021 - 16:16:59.710 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testStrictQuoteSimple.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testStrictQuoteSimple
[m[m07.11.2021 - 16:16:59.912 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:16:59.912 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testStrictQuoteSimple.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testStrictQuoteSimple/report.xml
[m[m07.11.2021 - 16:17:00.149 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testStrictQuoteSimple was generated successfully
[m[m07.11.2021 - 16:17:00.149 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 22/281
[m[m07.11.2021 - 16:17:00.149 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testNotStrictQuoteSimple
[m[32m07.11.2021 - 16:17:00.149 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testNotStrictQuoteSimple.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testNotStrictQuoteSimple
[m[m07.11.2021 - 16:17:00.349 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:00.350 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testNotStrictQuoteSimple.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testNotStrictQuoteSimple/report.xml
[m[m07.11.2021 - 16:17:00.586 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testNotStrictQuoteSimple was generated successfully
[m[m07.11.2021 - 16:17:00.586 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 23/281
[m[m07.11.2021 - 16:17:00.586 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testStrictQuoteWithSpacesAndTabs
[m[32m07.11.2021 - 16:17:00.586 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testStrictQuoteWithSpacesAndTabs.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testStrictQuoteWithSpacesAndTabs
[m[m07.11.2021 - 16:17:00.808 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:00.808 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testStrictQuoteWithSpacesAndTabs.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testStrictQuoteWithSpacesAndTabs/report.xml
[m[m07.11.2021 - 16:17:01.049 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testStrictQuoteWithSpacesAndTabs was generated successfully
[m[m07.11.2021 - 16:17:01.050 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 24/281
[m[m07.11.2021 - 16:17:01.050 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testNotStrictQuoteWithSpacesAndTabs
[m[32m07.11.2021 - 16:17:01.050 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testNotStrictQuoteWithSpacesAndTabs.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testNotStrictQuoteWithSpacesAndTabs
[m[m07.11.2021 - 16:17:01.272 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:01.272 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testNotStrictQuoteWithSpacesAndTabs.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testNotStrictQuoteWithSpacesAndTabs/report.xml
[m[m07.11.2021 - 16:17:01.513 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testNotStrictQuoteWithSpacesAndTabs was generated successfully
[m[m07.11.2021 - 16:17:01.513 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 25/281
[m[m07.11.2021 - 16:17:01.513 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testStrictQuoteWithGarbage
[m[32m07.11.2021 - 16:17:01.513 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testStrictQuoteWithGarbage.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testStrictQuoteWithGarbage
[m[m07.11.2021 - 16:17:01.727 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:01.727 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testStrictQuoteWithGarbage.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testStrictQuoteWithGarbage/report.xml
[m[m07.11.2021 - 16:17:01.979 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testStrictQuoteWithGarbage was generated successfully
[m[m07.11.2021 - 16:17:01.980 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 26/281
[m[m07.11.2021 - 16:17:01.980 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testCanIgnoreQuotations
[m[32m07.11.2021 - 16:17:01.980 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testCanIgnoreQuotations.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testCanIgnoreQuotations
[m[m07.11.2021 - 16:17:02.177 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:02.177 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testCanIgnoreQuotations.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testCanIgnoreQuotations/report.xml
[m[m07.11.2021 - 16:17:02.436 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testCanIgnoreQuotations was generated successfully
[m[m07.11.2021 - 16:17:02.436 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 27/281
[m[m07.11.2021 - 16:17:02.436 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testFalseIgnoreQuotations
[m[32m07.11.2021 - 16:17:02.436 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testFalseIgnoreQuotations.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testFalseIgnoreQuotations
[m[m07.11.2021 - 16:17:02.626 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:02.626 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testFalseIgnoreQuotations.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testFalseIgnoreQuotations/report.xml
[m[m07.11.2021 - 16:17:02.878 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testFalseIgnoreQuotations was generated successfully
[m[m07.11.2021 - 16:17:02.878 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 28/281
[m[m07.11.2021 - 16:17:02.878 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testIssue3314579
[m[32m07.11.2021 - 16:17:02.878 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testIssue3314579.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testIssue3314579
[m[m07.11.2021 - 16:17:03.083 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:03.084 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testIssue3314579.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testIssue3314579/report.xml
[m[m07.11.2021 - 16:17:03.341 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testIssue3314579 was generated successfully
[m[m07.11.2021 - 16:17:03.341 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 29/281
[m[m07.11.2021 - 16:17:03.341 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testIssue2263439
[m[32m07.11.2021 - 16:17:03.341 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testIssue2263439.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testIssue2263439
[m[m07.11.2021 - 16:17:03.568 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:03.568 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testIssue2263439.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testIssue2263439/report.xml
[m[m07.11.2021 - 16:17:03.833 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testIssue2263439 was generated successfully
[m[m07.11.2021 - 16:17:03.833 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 30/281
[m[m07.11.2021 - 16:17:03.833 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testIssue2859181
[m[32m07.11.2021 - 16:17:03.833 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testIssue2859181.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testIssue2859181
[m[m07.11.2021 - 16:17:04.029 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:04.029 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testIssue2859181.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testIssue2859181/report.xml
[m[m07.11.2021 - 16:17:04.266 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testIssue2859181 was generated successfully
[m[m07.11.2021 - 16:17:04.266 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 31/281
[m[m07.11.2021 - 16:17:04.266 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testIssue2726363
[m[32m07.11.2021 - 16:17:04.266 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testIssue2726363.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testIssue2726363
[m[m07.11.2021 - 16:17:04.478 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:04.479 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testIssue2726363.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testIssue2726363/report.xml
[m[m07.11.2021 - 16:17:04.738 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testIssue2726363 was generated successfully
[m[m07.11.2021 - 16:17:04.738 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 32/281
[m[m07.11.2021 - 16:17:04.738 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#anIOExceptionThrownifStringEndsInsideAQuotedString
[m[32m07.11.2021 - 16:17:04.739 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#anIOExceptionThrownifStringEndsInsideAQuotedString.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#anIOExceptionThrownifStringEndsInsideAQuotedString
[m[m07.11.2021 - 16:17:04.948 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:04.949 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#anIOExceptionThrownifStringEndsInsideAQuotedString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#anIOExceptionThrownifStringEndsInsideAQuotedString/report.xml
[m[m07.11.2021 - 16:17:05.185 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#anIOExceptionThrownifStringEndsInsideAQuotedString was generated successfully
[m[m07.11.2021 - 16:17:05.185 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 33/281
[m[m07.11.2021 - 16:17:05.185 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#parseLineMultiAllowsQuotesAcrossMultipleLines
[m[32m07.11.2021 - 16:17:05.185 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parseLineMultiAllowsQuotesAcrossMultipleLines.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#parseLineMultiAllowsQuotesAcrossMultipleLines
[m[m07.11.2021 - 16:17:05.401 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:05.402 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parseLineMultiAllowsQuotesAcrossMultipleLines.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parseLineMultiAllowsQuotesAcrossMultipleLines/report.xml
[m[m07.11.2021 - 16:17:05.647 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#parseLineMultiAllowsQuotesAcrossMultipleLines was generated successfully
[m[m07.11.2021 - 16:17:05.648 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 34/281
[m[m07.11.2021 - 16:17:05.648 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#pendingIsClearedAfterCallToParseLine
[m[32m07.11.2021 - 16:17:05.648 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#pendingIsClearedAfterCallToParseLine.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#pendingIsClearedAfterCallToParseLine
[m[m07.11.2021 - 16:17:05.870 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:05.870 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#pendingIsClearedAfterCallToParseLine.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#pendingIsClearedAfterCallToParseLine/report.xml
[m[m07.11.2021 - 16:17:06.170 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#pendingIsClearedAfterCallToParseLine was generated successfully
[m[m07.11.2021 - 16:17:06.171 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 35/281
[m[m07.11.2021 - 16:17:06.171 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#returnPendingIfNullIsPassedIntoParseLineMulti
[m[32m07.11.2021 - 16:17:06.171 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#returnPendingIfNullIsPassedIntoParseLineMulti.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#returnPendingIfNullIsPassedIntoParseLineMulti
[m[m07.11.2021 - 16:17:06.382 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:06.383 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#returnPendingIfNullIsPassedIntoParseLineMulti.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#returnPendingIfNullIsPassedIntoParseLineMulti/report.xml
[m[m07.11.2021 - 16:17:06.662 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#returnPendingIfNullIsPassedIntoParseLineMulti was generated successfully
[m[m07.11.2021 - 16:17:06.662 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 36/281
[m[m07.11.2021 - 16:17:06.662 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#spacesAtEndOfQuotedStringDoNotCountIfStrictQuotesIsTrue
[m[32m07.11.2021 - 16:17:06.662 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#spacesAtEndOfQuotedStringDoNotCountIfStrictQuotesIsTrue.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#spacesAtEndOfQuotedStringDoNotCountIfStrictQuotesIsTrue
[m[m07.11.2021 - 16:17:06.848 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:06.848 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#spacesAtEndOfQuotedStringDoNotCountIfStrictQuotesIsTrue.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#spacesAtEndOfQuotedStringDoNotCountIfStrictQuotesIsTrue/report.xml
[m[m07.11.2021 - 16:17:07.106 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#spacesAtEndOfQuotedStringDoNotCountIfStrictQuotesIsTrue was generated successfully
[m[m07.11.2021 - 16:17:07.107 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 37/281
[m[m07.11.2021 - 16:17:07.107 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#returnNullWhenNullPassedIn
[m[32m07.11.2021 - 16:17:07.107 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#returnNullWhenNullPassedIn.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#returnNullWhenNullPassedIn
[m[m07.11.2021 - 16:17:07.325 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:07.326 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#returnNullWhenNullPassedIn.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#returnNullWhenNullPassedIn/report.xml
[m[m07.11.2021 - 16:17:07.597 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#returnNullWhenNullPassedIn was generated successfully
[m[m07.11.2021 - 16:17:07.597 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 38/281
[m[m07.11.2021 - 16:17:07.597 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#validateEscapeStringBeforeRealTest
[m[32m07.11.2021 - 16:17:07.598 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#validateEscapeStringBeforeRealTest.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#validateEscapeStringBeforeRealTest
[m[m07.11.2021 - 16:17:07.823 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:07.823 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#validateEscapeStringBeforeRealTest.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#validateEscapeStringBeforeRealTest/report.xml
[m[m07.11.2021 - 16:17:08.081 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#validateEscapeStringBeforeRealTest was generated successfully
[m[m07.11.2021 - 16:17:08.082 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 39/281
[m[m07.11.2021 - 16:17:08.082 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#whichCharactersAreEscapable
[m[32m07.11.2021 - 16:17:08.082 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#whichCharactersAreEscapable.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#whichCharactersAreEscapable
[m[m07.11.2021 - 16:17:08.289 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:08.289 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#whichCharactersAreEscapable.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#whichCharactersAreEscapable/report.xml
[m[m07.11.2021 - 16:17:08.555 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#whichCharactersAreEscapable was generated successfully
[m[m07.11.2021 - 16:17:08.555 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 40/281
[m[m07.11.2021 - 16:17:08.555 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#whitespaceBeforeEscape
[m[32m07.11.2021 - 16:17:08.555 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#whitespaceBeforeEscape.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#whitespaceBeforeEscape
[m[m07.11.2021 - 16:17:08.771 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:08.772 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#whitespaceBeforeEscape.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#whitespaceBeforeEscape/report.xml
[m[m07.11.2021 - 16:17:09.015 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#whitespaceBeforeEscape was generated successfully
[m[m07.11.2021 - 16:17:09.015 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 41/281
[m[m07.11.2021 - 16:17:09.015 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testIssue2958242WithoutQuotes
[m[32m07.11.2021 - 16:17:09.015 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testIssue2958242WithoutQuotes.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testIssue2958242WithoutQuotes
[m[m07.11.2021 - 16:17:09.230 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:09.231 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testIssue2958242WithoutQuotes.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testIssue2958242WithoutQuotes/report.xml
[m[m07.11.2021 - 16:17:09.494 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testIssue2958242WithoutQuotes was generated successfully
[m[m07.11.2021 - 16:17:09.494 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 42/281
[m[m07.11.2021 - 16:17:09.494 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#quoteAndEscapeCannotBeTheSame
[m[32m07.11.2021 - 16:17:09.494 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#quoteAndEscapeCannotBeTheSame.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#quoteAndEscapeCannotBeTheSame
[m[m07.11.2021 - 16:17:09.696 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:09.696 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#quoteAndEscapeCannotBeTheSame.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#quoteAndEscapeCannotBeTheSame/report.xml
[m[m07.11.2021 - 16:17:09.972 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#quoteAndEscapeCannotBeTheSame was generated successfully
[m[m07.11.2021 - 16:17:09.972 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 43/281
[m[m07.11.2021 - 16:17:09.972 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#quoteAndEscapeCanBeTheSameIfNull
[m[32m07.11.2021 - 16:17:09.972 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#quoteAndEscapeCanBeTheSameIfNull.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#quoteAndEscapeCanBeTheSameIfNull
[m[m07.11.2021 - 16:17:10.180 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:10.180 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#quoteAndEscapeCanBeTheSameIfNull.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#quoteAndEscapeCanBeTheSameIfNull/report.xml
[m[m07.11.2021 - 16:17:10.419 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#quoteAndEscapeCanBeTheSameIfNull was generated successfully
[m[m07.11.2021 - 16:17:10.419 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 44/281
[m[m07.11.2021 - 16:17:10.419 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#separatorCharacterCannotBeNull
[m[32m07.11.2021 - 16:17:10.419 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#separatorCharacterCannotBeNull.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#separatorCharacterCannotBeNull
[m[m07.11.2021 - 16:17:10.626 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:10.626 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#separatorCharacterCannotBeNull.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#separatorCharacterCannotBeNull/report.xml
[m[m07.11.2021 - 16:17:10.863 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#separatorCharacterCannotBeNull was generated successfully
[m[m07.11.2021 - 16:17:10.864 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 45/281
[m[m07.11.2021 - 16:17:10.864 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#separatorAndEscapeCannotBeTheSame
[m[32m07.11.2021 - 16:17:10.864 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#separatorAndEscapeCannotBeTheSame.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#separatorAndEscapeCannotBeTheSame
[m[m07.11.2021 - 16:17:11.071 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:11.072 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#separatorAndEscapeCannotBeTheSame.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#separatorAndEscapeCannotBeTheSame/report.xml
[m[m07.11.2021 - 16:17:11.330 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#separatorAndEscapeCannotBeTheSame was generated successfully
[m[m07.11.2021 - 16:17:11.330 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 46/281
[m[m07.11.2021 - 16:17:11.330 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#separatorAndQuoteCannotBeTheSame
[m[32m07.11.2021 - 16:17:11.330 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#separatorAndQuoteCannotBeTheSame.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#separatorAndQuoteCannotBeTheSame
[m[m07.11.2021 - 16:17:11.542 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:11.605 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#separatorAndQuoteCannotBeTheSame.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#separatorAndQuoteCannotBeTheSame/report.xml
[m[m07.11.2021 - 16:17:11.913 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#separatorAndQuoteCannotBeTheSame was generated successfully
[m[m07.11.2021 - 16:17:11.919 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 47/281
[m[m07.11.2021 - 16:17:11.919 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#parserHandlesNullInString
[m[32m07.11.2021 - 16:17:11.919 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parserHandlesNullInString.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#parserHandlesNullInString
[m[m07.11.2021 - 16:17:12.137 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:12.137 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parserHandlesNullInString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#parserHandlesNullInString/report.xml
[m[m07.11.2021 - 16:17:12.390 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#parserHandlesNullInString was generated successfully
[m[m07.11.2021 - 16:17:12.390 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 48/281
[m[m07.11.2021 - 16:17:12.390 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#featureRequest60ByDefaultEmptyFieldsAreBlank
[m[32m07.11.2021 - 16:17:12.390 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#featureRequest60ByDefaultEmptyFieldsAreBlank.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#featureRequest60ByDefaultEmptyFieldsAreBlank
[m[m07.11.2021 - 16:17:12.603 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:12.604 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#featureRequest60ByDefaultEmptyFieldsAreBlank.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#featureRequest60ByDefaultEmptyFieldsAreBlank/report.xml
[m[m07.11.2021 - 16:17:12.855 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#featureRequest60ByDefaultEmptyFieldsAreBlank was generated successfully
[m[m07.11.2021 - 16:17:12.855 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 49/281
[m[m07.11.2021 - 16:17:12.855 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#featureRequest60TreatEmptyFieldsAsNull
[m[32m07.11.2021 - 16:17:12.855 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#featureRequest60TreatEmptyFieldsAsNull.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#featureRequest60TreatEmptyFieldsAsNull
[m[m07.11.2021 - 16:17:13.060 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:13.060 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#featureRequest60TreatEmptyFieldsAsNull.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#featureRequest60TreatEmptyFieldsAsNull/report.xml
[m[m07.11.2021 - 16:17:13.313 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#featureRequest60TreatEmptyFieldsAsNull was generated successfully
[m[m07.11.2021 - 16:17:13.313 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 50/281
[m[m07.11.2021 - 16:17:13.314 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#featureRequest60TreatEmptyDelimitedFieldsAsNull
[m[32m07.11.2021 - 16:17:13.314 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#featureRequest60TreatEmptyDelimitedFieldsAsNull.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#featureRequest60TreatEmptyDelimitedFieldsAsNull
[m[m07.11.2021 - 16:17:13.545 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:13.545 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#featureRequest60TreatEmptyDelimitedFieldsAsNull.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#featureRequest60TreatEmptyDelimitedFieldsAsNull/report.xml
[m[m07.11.2021 - 16:17:13.802 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#featureRequest60TreatEmptyDelimitedFieldsAsNull was generated successfully
[m[m07.11.2021 - 16:17:13.803 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 51/281
[m[m07.11.2021 - 16:17:13.803 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#featureRequest60TreatEmptyFieldsDelimitedOrNotAsNull
[m[32m07.11.2021 - 16:17:13.803 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#featureRequest60TreatEmptyFieldsDelimitedOrNotAsNull.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#featureRequest60TreatEmptyFieldsDelimitedOrNotAsNull
[m[m07.11.2021 - 16:17:14.018 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:14.018 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#featureRequest60TreatEmptyFieldsDelimitedOrNotAsNull.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#featureRequest60TreatEmptyFieldsDelimitedOrNotAsNull/report.xml
[m[m07.11.2021 - 16:17:14.281 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#featureRequest60TreatEmptyFieldsDelimitedOrNotAsNull was generated successfully
[m[m07.11.2021 - 16:17:14.281 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 52/281
[m[m07.11.2021 - 16:17:14.281 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testStrictQuotesEndsFieldAtQuote
[m[32m07.11.2021 - 16:17:14.282 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testStrictQuotesEndsFieldAtQuote.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testStrictQuotesEndsFieldAtQuote
[m[m07.11.2021 - 16:17:14.486 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:14.487 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testStrictQuotesEndsFieldAtQuote.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testStrictQuotesEndsFieldAtQuote/report.xml
[m[m07.11.2021 - 16:17:14.739 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testStrictQuotesEndsFieldAtQuote was generated successfully
[m[m07.11.2021 - 16:17:14.739 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 53/281
[m[m07.11.2021 - 16:17:14.739 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testStrictQuotesEndsFieldAtQuoteWithEscapedQuoteInMiddle
[m[32m07.11.2021 - 16:17:14.740 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testStrictQuotesEndsFieldAtQuoteWithEscapedQuoteInMiddle.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testStrictQuotesEndsFieldAtQuoteWithEscapedQuoteInMiddle
[m[m07.11.2021 - 16:17:14.945 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:14.946 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testStrictQuotesEndsFieldAtQuoteWithEscapedQuoteInMiddle.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testStrictQuotesEndsFieldAtQuoteWithEscapedQuoteInMiddle/report.xml
[m[m07.11.2021 - 16:17:15.205 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testStrictQuotesEndsFieldAtQuoteWithEscapedQuoteInMiddle was generated successfully
[m[m07.11.2021 - 16:17:15.205 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 54/281
[m[m07.11.2021 - 16:17:15.205 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testNotStrictQuotesAllowsEmbeddedEscapedQuote
[m[32m07.11.2021 - 16:17:15.206 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testNotStrictQuotesAllowsEmbeddedEscapedQuote.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testNotStrictQuotesAllowsEmbeddedEscapedQuote
[m[m07.11.2021 - 16:17:15.433 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:15.433 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testNotStrictQuotesAllowsEmbeddedEscapedQuote.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testNotStrictQuotesAllowsEmbeddedEscapedQuote/report.xml
[m[m07.11.2021 - 16:17:15.687 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testNotStrictQuotesAllowsEmbeddedEscapedQuote was generated successfully
[m[m07.11.2021 - 16:17:15.687 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 55/281
[m[m07.11.2021 - 16:17:15.687 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#testNotStrictQuotesAllowsEmbeddedQuote
[m[32m07.11.2021 - 16:17:15.687 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testNotStrictQuotesAllowsEmbeddedQuote.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#testNotStrictQuotesAllowsEmbeddedQuote
[m[m07.11.2021 - 16:17:15.876 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:15.876 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testNotStrictQuotesAllowsEmbeddedQuote.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#testNotStrictQuotesAllowsEmbeddedQuote/report.xml
[m[m07.11.2021 - 16:17:16.122 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#testNotStrictQuotesAllowsEmbeddedQuote was generated successfully
[m[m07.11.2021 - 16:17:16.122 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 56/281
[m[m07.11.2021 - 16:17:16.122 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserTest#issue93ParsingEmptyDoubleQuoteField
[m[32m07.11.2021 - 16:17:16.123 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#issue93ParsingEmptyDoubleQuoteField.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserTest#issue93ParsingEmptyDoubleQuoteField
[m[m07.11.2021 - 16:17:16.321 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:16.321 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#issue93ParsingEmptyDoubleQuoteField.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserTest#issue93ParsingEmptyDoubleQuoteField/report.xml
[m[m07.11.2021 - 16:17:16.658 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserTest#issue93ParsingEmptyDoubleQuoteField was generated successfully
[m[m07.11.2021 - 16:17:16.658 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 57/281
[m[m07.11.2021 - 16:17:16.658 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.BeanToCsvTest#throwRuntimeExceptionWhenExceptionIsThrown
[m[32m07.11.2021 - 16:17:16.658 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.BeanToCsvTest#throwRuntimeExceptionWhenExceptionIsThrown.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.BeanToCsvTest#throwRuntimeExceptionWhenExceptionIsThrown
[m[m07.11.2021 - 16:17:16.882 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:16.882 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.BeanToCsvTest#throwRuntimeExceptionWhenExceptionIsThrown.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.BeanToCsvTest#throwRuntimeExceptionWhenExceptionIsThrown/report.xml
[m[m07.11.2021 - 16:17:17.140 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.BeanToCsvTest#throwRuntimeExceptionWhenExceptionIsThrown was generated successfully
[m[m07.11.2021 - 16:17:17.141 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 58/281
[m[m07.11.2021 - 16:17:17.141 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.BeanToCsvTest#beanReturnsFalseOnEmptyList
[m[32m07.11.2021 - 16:17:17.141 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.BeanToCsvTest#beanReturnsFalseOnEmptyList.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.BeanToCsvTest#beanReturnsFalseOnEmptyList
[m[m07.11.2021 - 16:17:17.349 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:17.349 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.BeanToCsvTest#beanReturnsFalseOnEmptyList.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.BeanToCsvTest#beanReturnsFalseOnEmptyList/report.xml
[m[m07.11.2021 - 16:17:17.592 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.BeanToCsvTest#beanReturnsFalseOnEmptyList was generated successfully
[m[m07.11.2021 - 16:17:17.592 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 59/281
[m[m07.11.2021 - 16:17:17.592 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.BeanToCsvTest#beanReturnsFalseOnNull
[m[32m07.11.2021 - 16:17:17.592 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.BeanToCsvTest#beanReturnsFalseOnNull.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.BeanToCsvTest#beanReturnsFalseOnNull
[m[m07.11.2021 - 16:17:17.804 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:17.804 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.BeanToCsvTest#beanReturnsFalseOnNull.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.BeanToCsvTest#beanReturnsFalseOnNull/report.xml
[m[m07.11.2021 - 16:17:18.083 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.BeanToCsvTest#beanReturnsFalseOnNull was generated successfully
[m[m07.11.2021 - 16:17:18.083 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 60/281
[m[m07.11.2021 - 16:17:18.083 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.BeanToCsvTest#testWriteQuotes
[m[32m07.11.2021 - 16:17:18.083 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.BeanToCsvTest#testWriteQuotes.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.BeanToCsvTest#testWriteQuotes
[m[m07.11.2021 - 16:17:18.330 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:18.330 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.BeanToCsvTest#testWriteQuotes.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.BeanToCsvTest#testWriteQuotes/report.xml
[m[m07.11.2021 - 16:17:18.580 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.BeanToCsvTest#testWriteQuotes was generated successfully
[m[m07.11.2021 - 16:17:18.580 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 61/281
[m[m07.11.2021 - 16:17:18.580 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.BeanToCsvTest#writeBeansOneAtATime
[m[32m07.11.2021 - 16:17:18.581 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.BeanToCsvTest#writeBeansOneAtATime.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.BeanToCsvTest#writeBeansOneAtATime
[m[m07.11.2021 - 16:17:18.843 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:18.843 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.BeanToCsvTest#writeBeansOneAtATime.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.BeanToCsvTest#writeBeansOneAtATime/report.xml
[m[m07.11.2021 - 16:17:19.084 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.BeanToCsvTest#writeBeansOneAtATime was generated successfully
[m[m07.11.2021 - 16:17:19.084 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 62/281
[m[m07.11.2021 - 16:17:19.085 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.BeanToCsvTest#writeSingleBeanMethodReturnsFalseIfNullPassedIn
[m[32m07.11.2021 - 16:17:19.085 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.BeanToCsvTest#writeSingleBeanMethodReturnsFalseIfNullPassedIn.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.BeanToCsvTest#writeSingleBeanMethodReturnsFalseIfNullPassedIn
[m[m07.11.2021 - 16:17:19.324 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:19.324 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.BeanToCsvTest#writeSingleBeanMethodReturnsFalseIfNullPassedIn.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.BeanToCsvTest#writeSingleBeanMethodReturnsFalseIfNullPassedIn/report.xml
[m[m07.11.2021 - 16:17:19.583 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.BeanToCsvTest#writeSingleBeanMethodReturnsFalseIfNullPassedIn was generated successfully
[m[m07.11.2021 - 16:17:19.583 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 63/281
[m[m07.11.2021 - 16:17:19.583 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.BeanToCsvTest#handleException
[m[32m07.11.2021 - 16:17:19.583 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.BeanToCsvTest#handleException.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.BeanToCsvTest#handleException
[m[m07.11.2021 - 16:17:19.792 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:19.793 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.BeanToCsvTest#handleException.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.BeanToCsvTest#handleException/report.xml
[m[m07.11.2021 - 16:17:20.062 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.BeanToCsvTest#handleException was generated successfully
[m[m07.11.2021 - 16:17:20.063 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 64/281
[m[m07.11.2021 - 16:17:20.063 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.BeanToCsvTest#testWriteQuotesWithAnnotatedBean
[m[32m07.11.2021 - 16:17:20.063 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.BeanToCsvTest#testWriteQuotesWithAnnotatedBean.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.BeanToCsvTest#testWriteQuotesWithAnnotatedBean
[m[m07.11.2021 - 16:17:20.325 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:20.326 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.BeanToCsvTest#testWriteQuotesWithAnnotatedBean.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.BeanToCsvTest#testWriteQuotesWithAnnotatedBean/report.xml
[m[m07.11.2021 - 16:17:20.586 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.BeanToCsvTest#testWriteQuotesWithAnnotatedBean was generated successfully
[m[m07.11.2021 - 16:17:20.586 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 65/281
[m[m07.11.2021 - 16:17:20.586 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.BeanToCsvTest#testWriteNulls
[m[32m07.11.2021 - 16:17:20.587 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.BeanToCsvTest#testWriteNulls.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.BeanToCsvTest#testWriteNulls
[m[m07.11.2021 - 16:17:20.838 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:20.838 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.BeanToCsvTest#testWriteNulls.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.BeanToCsvTest#testWriteNulls/report.xml
[m[m07.11.2021 - 16:17:21.125 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.BeanToCsvTest#testWriteNulls was generated successfully
[m[m07.11.2021 - 16:17:21.125 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 66/281
[m[m07.11.2021 - 16:17:21.125 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.BeanToCsvTest#testWriteNullsWithAnnotatedBean
[m[32m07.11.2021 - 16:17:21.125 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.BeanToCsvTest#testWriteNullsWithAnnotatedBean.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.BeanToCsvTest#testWriteNullsWithAnnotatedBean
[m[m07.11.2021 - 16:17:21.393 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:21.394 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.BeanToCsvTest#testWriteNullsWithAnnotatedBean.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.BeanToCsvTest#testWriteNullsWithAnnotatedBean/report.xml
[m[m07.11.2021 - 16:17:21.692 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.BeanToCsvTest#testWriteNullsWithAnnotatedBean was generated successfully
[m[m07.11.2021 - 16:17:21.692 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 67/281
[m[m07.11.2021 - 16:17:21.692 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.HeaderColumnNameMappingStrategyTest#getColumnIndexWithoutHeaderThrowsException
[m[32m07.11.2021 - 16:17:21.693 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#getColumnIndexWithoutHeaderThrowsException.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.HeaderColumnNameMappingStrategyTest#getColumnIndexWithoutHeaderThrowsException
[m[m07.11.2021 - 16:17:21.895 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:21.896 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#getColumnIndexWithoutHeaderThrowsException.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#getColumnIndexWithoutHeaderThrowsException/report.xml
[m[m07.11.2021 - 16:17:22.182 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.HeaderColumnNameMappingStrategyTest#getColumnIndexWithoutHeaderThrowsException was generated successfully
[m[m07.11.2021 - 16:17:22.182 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 68/281
[m[m07.11.2021 - 16:17:22.183 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.HeaderColumnNameMappingStrategyTest#getColumnIndexAfterParse
[m[32m07.11.2021 - 16:17:22.183 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#getColumnIndexAfterParse.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.HeaderColumnNameMappingStrategyTest#getColumnIndexAfterParse
[m[m07.11.2021 - 16:17:22.433 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:22.433 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#getColumnIndexAfterParse.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#getColumnIndexAfterParse/report.xml
[m[m07.11.2021 - 16:17:22.693 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.HeaderColumnNameMappingStrategyTest#getColumnIndexAfterParse was generated successfully
[m[m07.11.2021 - 16:17:22.693 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 69/281
[m[m07.11.2021 - 16:17:22.693 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testParse
[m[32m07.11.2021 - 16:17:22.693 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testParse.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testParse
[m[m07.11.2021 - 16:17:22.953 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:22.953 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testParse.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testParse/report.xml
[m[m07.11.2021 - 16:17:23.209 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testParse was generated successfully
[m[m07.11.2021 - 16:17:23.209 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 70/281
[m[m07.11.2021 - 16:17:23.209 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testQuotedString
[m[32m07.11.2021 - 16:17:23.209 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testQuotedString.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testQuotedString
[m[m07.11.2021 - 16:17:23.473 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:23.473 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testQuotedString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testQuotedString/report.xml
[m[m07.11.2021 - 16:17:23.724 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testQuotedString was generated successfully
[m[m07.11.2021 - 16:17:23.724 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 71/281
[m[m07.11.2021 - 16:17:23.724 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testParseWithSpacesInHeader
[m[32m07.11.2021 - 16:17:23.724 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testParseWithSpacesInHeader.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testParseWithSpacesInHeader
[m[m07.11.2021 - 16:17:23.984 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:23.985 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testParseWithSpacesInHeader.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testParseWithSpacesInHeader/report.xml
[m[m07.11.2021 - 16:17:24.263 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testParseWithSpacesInHeader was generated successfully
[m[m07.11.2021 - 16:17:24.263 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 72/281
[m[m07.11.2021 - 16:17:24.263 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.HeaderColumnNameMappingStrategyTest#verifyColumnNames
[m[32m07.11.2021 - 16:17:24.263 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#verifyColumnNames.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.HeaderColumnNameMappingStrategyTest#verifyColumnNames
[m[m07.11.2021 - 16:17:24.526 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:24.527 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#verifyColumnNames.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#verifyColumnNames/report.xml
[m[m07.11.2021 - 16:17:24.798 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.HeaderColumnNameMappingStrategyTest#verifyColumnNames was generated successfully
[m[m07.11.2021 - 16:17:24.798 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 73/281
[m[m07.11.2021 - 16:17:24.798 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.HeaderColumnNameMappingStrategyTest#throwsIllegalStateExceptionIfTypeNotSet
[m[32m07.11.2021 - 16:17:24.798 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#throwsIllegalStateExceptionIfTypeNotSet.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.HeaderColumnNameMappingStrategyTest#throwsIllegalStateExceptionIfTypeNotSet
[m[m07.11.2021 - 16:17:25.014 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:25.014 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#throwsIllegalStateExceptionIfTypeNotSet.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.HeaderColumnNameMappingStrategyTest#throwsIllegalStateExceptionIfTypeNotSet/report.xml
[m[m07.11.2021 - 16:17:25.273 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.HeaderColumnNameMappingStrategyTest#throwsIllegalStateExceptionIfTypeNotSet was generated successfully
[m[m07.11.2021 - 16:17:25.273 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 74/281
[m[m07.11.2021 - 16:17:25.273 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.TestUtilitiesTest#displayStringArray
[m[32m07.11.2021 - 16:17:25.274 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.TestUtilitiesTest#displayStringArray.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.TestUtilitiesTest#displayStringArray
[m[m07.11.2021 - 16:17:25.534 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:25.534 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.TestUtilitiesTest#displayStringArray.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.TestUtilitiesTest#displayStringArray/report.xml
[m[m07.11.2021 - 16:17:25.859 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.TestUtilitiesTest#displayStringArray was generated successfully
[m[m07.11.2021 - 16:17:25.859 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 75/281
[m[m07.11.2021 - 16:17:25.859 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.StatefulBeanToCsvTest#writeBadData
[m[32m07.11.2021 - 16:17:25.859 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.StatefulBeanToCsvTest#writeBadData.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.StatefulBeanToCsvTest#writeBadData
[m[m07.11.2021 - 16:17:26.665 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:26.666 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.StatefulBeanToCsvTest#writeBadData.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.StatefulBeanToCsvTest#writeBadData/report.xml
[m[m07.11.2021 - 16:17:26.966 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.StatefulBeanToCsvTest#writeBadData was generated successfully
[m[m07.11.2021 - 16:17:26.967 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 76/281
[m[m07.11.2021 - 16:17:26.967 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.StatefulBeanToCsvTest#writeGoodDataCustom
[m[32m07.11.2021 - 16:17:26.967 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.StatefulBeanToCsvTest#writeGoodDataCustom.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.StatefulBeanToCsvTest#writeGoodDataCustom
[m[m07.11.2021 - 16:17:27.339 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:27.339 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.StatefulBeanToCsvTest#writeGoodDataCustom.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.StatefulBeanToCsvTest#writeGoodDataCustom/report.xml
[m[m07.11.2021 - 16:17:27.600 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.StatefulBeanToCsvTest#writeGoodDataCustom was generated successfully
[m[m07.11.2021 - 16:17:27.600 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 77/281
[m[m07.11.2021 - 16:17:27.600 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.StatefulBeanToCsvTest#writeBadDataCustom
[m[32m07.11.2021 - 16:17:27.600 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.StatefulBeanToCsvTest#writeBadDataCustom.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.StatefulBeanToCsvTest#writeBadDataCustom
[m[m07.11.2021 - 16:17:27.907 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:27.908 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.StatefulBeanToCsvTest#writeBadDataCustom.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.StatefulBeanToCsvTest#writeBadDataCustom/report.xml
[m[m07.11.2021 - 16:17:28.163 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.StatefulBeanToCsvTest#writeBadDataCustom was generated successfully
[m[m07.11.2021 - 16:17:28.164 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 78/281
[m[m07.11.2021 - 16:17:28.164 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVIteratorTest#readerExceptionCausesRunTimeException
[m[32m07.11.2021 - 16:17:28.164 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVIteratorTest#readerExceptionCausesRunTimeException.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVIteratorTest#readerExceptionCausesRunTimeException
[m[m07.11.2021 - 16:17:28.444 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:28.444 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVIteratorTest#readerExceptionCausesRunTimeException.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVIteratorTest#readerExceptionCausesRunTimeException/report.xml
[m[m07.11.2021 - 16:17:28.748 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVIteratorTest#readerExceptionCausesRunTimeException was generated successfully
[m[m07.11.2021 - 16:17:28.748 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 79/281
[m[m07.11.2021 - 16:17:28.748 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVIteratorTest#removethrowsUnsupportedOperationException
[m[32m07.11.2021 - 16:17:28.748 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVIteratorTest#removethrowsUnsupportedOperationException.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVIteratorTest#removethrowsUnsupportedOperationException
[m[m07.11.2021 - 16:17:29.047 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:29.048 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVIteratorTest#removethrowsUnsupportedOperationException.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVIteratorTest#removethrowsUnsupportedOperationException/report.xml
[m[m07.11.2021 - 16:17:29.322 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVIteratorTest#removethrowsUnsupportedOperationException was generated successfully
[m[m07.11.2021 - 16:17:29.322 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 80/281
[m[m07.11.2021 - 16:17:29.323 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVIteratorTest#initialReadReturnsStrings
[m[32m07.11.2021 - 16:17:29.323 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVIteratorTest#initialReadReturnsStrings.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVIteratorTest#initialReadReturnsStrings
[m[m07.11.2021 - 16:17:29.661 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:29.661 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVIteratorTest#initialReadReturnsStrings.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVIteratorTest#initialReadReturnsStrings/report.xml
[m[m07.11.2021 - 16:17:29.954 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVIteratorTest#initialReadReturnsStrings was generated successfully
[m[m07.11.2021 - 16:17:29.954 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 81/281
[m[m07.11.2021 - 16:17:29.954 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVIteratorTest#hasNextWorks
[m[32m07.11.2021 - 16:17:29.954 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVIteratorTest#hasNextWorks.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVIteratorTest#hasNextWorks
[m[m07.11.2021 - 16:17:30.231 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:30.231 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVIteratorTest#hasNextWorks.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVIteratorTest#hasNextWorks/report.xml
[m[m07.11.2021 - 16:17:30.558 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVIteratorTest#hasNextWorks was generated successfully
[m[m07.11.2021 - 16:17:30.558 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 82/281
[m[m07.11.2021 - 16:17:30.558 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderBuilderTest#testDefaultBuilder
[m[32m07.11.2021 - 16:17:30.559 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderBuilderTest#testDefaultBuilder.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderBuilderTest#testDefaultBuilder
[m[m07.11.2021 - 16:17:30.883 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:30.884 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderBuilderTest#testDefaultBuilder.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderBuilderTest#testDefaultBuilder/report.xml
[m[m07.11.2021 - 16:17:31.260 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderBuilderTest#testDefaultBuilder was generated successfully
[m[m07.11.2021 - 16:17:31.260 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 83/281
[m[m07.11.2021 - 16:17:31.260 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderBuilderTest#testNullReader
[m[32m07.11.2021 - 16:17:31.261 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderBuilderTest#testNullReader.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderBuilderTest#testNullReader
[m[m07.11.2021 - 16:17:31.535 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:31.536 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderBuilderTest#testNullReader.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderBuilderTest#testNullReader/report.xml
[m[m07.11.2021 - 16:17:31.808 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderBuilderTest#testNullReader was generated successfully
[m[m07.11.2021 - 16:17:31.808 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 84/281
[m[m07.11.2021 - 16:17:31.808 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderBuilderTest#testWithCSVParserNull
[m[32m07.11.2021 - 16:17:31.808 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderBuilderTest#testWithCSVParserNull.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderBuilderTest#testWithCSVParserNull
[m[m07.11.2021 - 16:17:32.112 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:32.113 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderBuilderTest#testWithCSVParserNull.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderBuilderTest#testWithCSVParserNull/report.xml
[m[m07.11.2021 - 16:17:32.379 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderBuilderTest#testWithCSVParserNull was generated successfully
[m[m07.11.2021 - 16:17:32.379 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 85/281
[m[m07.11.2021 - 16:17:32.379 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderBuilderTest#testWithCSVParser
[m[32m07.11.2021 - 16:17:32.380 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderBuilderTest#testWithCSVParser.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderBuilderTest#testWithCSVParser
[m[m07.11.2021 - 16:17:32.668 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:32.668 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderBuilderTest#testWithCSVParser.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderBuilderTest#testWithCSVParser/report.xml
[m[m07.11.2021 - 16:17:32.938 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderBuilderTest#testWithCSVParser was generated successfully
[m[m07.11.2021 - 16:17:32.939 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 86/281
[m[m07.11.2021 - 16:17:32.939 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderBuilderTest#testWithSkipLines
[m[32m07.11.2021 - 16:17:32.939 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderBuilderTest#testWithSkipLines.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderBuilderTest#testWithSkipLines
[m[m07.11.2021 - 16:17:33.317 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:33.317 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderBuilderTest#testWithSkipLines.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderBuilderTest#testWithSkipLines/report.xml
[m[m07.11.2021 - 16:17:33.589 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderBuilderTest#testWithSkipLines was generated successfully
[m[m07.11.2021 - 16:17:33.589 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 87/281
[m[m07.11.2021 - 16:17:33.589 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderBuilderTest#testWithKeepCR
[m[32m07.11.2021 - 16:17:33.590 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderBuilderTest#testWithKeepCR.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderBuilderTest#testWithKeepCR
[m[m07.11.2021 - 16:17:33.890 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:33.890 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderBuilderTest#testWithKeepCR.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderBuilderTest#testWithKeepCR/report.xml
[m[m07.11.2021 - 16:17:34.149 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderBuilderTest#testWithKeepCR was generated successfully
[m[m07.11.2021 - 16:17:34.150 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 88/281
[m[m07.11.2021 - 16:17:34.150 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderBuilderTest#testWithSkipLinesZero
[m[32m07.11.2021 - 16:17:34.150 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderBuilderTest#testWithSkipLinesZero.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderBuilderTest#testWithSkipLinesZero
[m[m07.11.2021 - 16:17:34.422 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:34.423 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderBuilderTest#testWithSkipLinesZero.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderBuilderTest#testWithSkipLinesZero/report.xml
[m[m07.11.2021 - 16:17:34.667 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderBuilderTest#testWithSkipLinesZero was generated successfully
[m[m07.11.2021 - 16:17:34.668 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 89/281
[m[m07.11.2021 - 16:17:34.668 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderBuilderTest#testWithSkipLinesNegative
[m[32m07.11.2021 - 16:17:34.668 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderBuilderTest#testWithSkipLinesNegative.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderBuilderTest#testWithSkipLinesNegative
[m[m07.11.2021 - 16:17:34.926 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:34.926 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderBuilderTest#testWithSkipLinesNegative.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderBuilderTest#testWithSkipLinesNegative/report.xml
[m[m07.11.2021 - 16:17:35.231 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderBuilderTest#testWithSkipLinesNegative was generated successfully
[m[m07.11.2021 - 16:17:35.232 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 90/281
[m[m07.11.2021 - 16:17:35.232 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderBuilderTest#testWithVerifyReader
[m[32m07.11.2021 - 16:17:35.232 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderBuilderTest#testWithVerifyReader.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderBuilderTest#testWithVerifyReader
[m[m07.11.2021 - 16:17:35.514 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:35.515 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderBuilderTest#testWithVerifyReader.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderBuilderTest#testWithVerifyReader/report.xml
[m[m07.11.2021 - 16:17:35.865 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderBuilderTest#testWithVerifyReader was generated successfully
[m[m07.11.2021 - 16:17:35.865 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 91/281
[m[m07.11.2021 - 16:17:35.865 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderBuilderTest#builderWithNullFieldIndicator
[m[32m07.11.2021 - 16:17:35.865 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderBuilderTest#builderWithNullFieldIndicator.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderBuilderTest#builderWithNullFieldIndicator
[m[m07.11.2021 - 16:17:36.169 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:36.169 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderBuilderTest#builderWithNullFieldIndicator.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderBuilderTest#builderWithNullFieldIndicator/report.xml
[m[m07.11.2021 - 16:17:36.445 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderBuilderTest#builderWithNullFieldIndicator was generated successfully
[m[m07.11.2021 - 16:17:36.445 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 92/281
[m[m07.11.2021 - 16:17:36.446 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#testParseLine
[m[32m07.11.2021 - 16:17:36.446 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testParseLine.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#testParseLine
[m[m07.11.2021 - 16:17:36.663 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:36.663 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testParseLine.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testParseLine/report.xml
[m[m07.11.2021 - 16:17:36.949 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#testParseLine was generated successfully
[m[m07.11.2021 - 16:17:36.950 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 93/281
[m[m07.11.2021 - 16:17:36.950 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#readerCanHandleNullInString
[m[32m07.11.2021 - 16:17:36.950 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#readerCanHandleNullInString.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#readerCanHandleNullInString
[m[m07.11.2021 - 16:17:37.221 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:37.221 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#readerCanHandleNullInString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#readerCanHandleNullInString/report.xml
[m[m07.11.2021 - 16:17:37.492 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#readerCanHandleNullInString was generated successfully
[m[m07.11.2021 - 16:17:37.492 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 94/281
[m[m07.11.2021 - 16:17:37.492 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#testParseLineStrictQuote
[m[32m07.11.2021 - 16:17:37.492 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testParseLineStrictQuote.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#testParseLineStrictQuote
[m[m07.11.2021 - 16:17:37.717 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:37.717 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testParseLineStrictQuote.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testParseLineStrictQuote/report.xml
[m[m07.11.2021 - 16:17:37.963 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#testParseLineStrictQuote was generated successfully
[m[m07.11.2021 - 16:17:37.963 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 95/281
[m[m07.11.2021 - 16:17:37.963 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#testParseAll
[m[32m07.11.2021 - 16:17:37.963 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testParseAll.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#testParseAll
[m[m07.11.2021 - 16:17:38.175 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:38.175 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testParseAll.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testParseAll/report.xml
[m[m07.11.2021 - 16:17:38.439 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#testParseAll was generated successfully
[m[m07.11.2021 - 16:17:38.439 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 96/281
[m[m07.11.2021 - 16:17:38.440 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#testOptionalConstructors
[m[32m07.11.2021 - 16:17:38.440 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testOptionalConstructors.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#testOptionalConstructors
[m[m07.11.2021 - 16:17:38.676 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:38.676 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testOptionalConstructors.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testOptionalConstructors/report.xml
[m[m07.11.2021 - 16:17:38.931 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#testOptionalConstructors was generated successfully
[m[m07.11.2021 - 16:17:38.931 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 97/281
[m[m07.11.2021 - 16:17:38.932 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#parseQuotedStringWithDefinedSeperator
[m[32m07.11.2021 - 16:17:38.932 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#parseQuotedStringWithDefinedSeperator.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#parseQuotedStringWithDefinedSeperator
[m[m07.11.2021 - 16:17:39.154 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:39.155 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#parseQuotedStringWithDefinedSeperator.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#parseQuotedStringWithDefinedSeperator/report.xml
[m[m07.11.2021 - 16:17:39.421 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#parseQuotedStringWithDefinedSeperator was generated successfully
[m[m07.11.2021 - 16:17:39.421 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 98/281
[m[m07.11.2021 - 16:17:39.421 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#testSkippingLines
[m[32m07.11.2021 - 16:17:39.421 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testSkippingLines.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#testSkippingLines
[m[m07.11.2021 - 16:17:39.616 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:39.616 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testSkippingLines.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testSkippingLines/report.xml
[m[m07.11.2021 - 16:17:39.864 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#testSkippingLines was generated successfully
[m[m07.11.2021 - 16:17:39.864 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 99/281
[m[m07.11.2021 - 16:17:39.864 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#linesAndRecordsRead
[m[32m07.11.2021 - 16:17:39.864 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#linesAndRecordsRead.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#linesAndRecordsRead
[m[m07.11.2021 - 16:17:40.112 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:40.112 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#linesAndRecordsRead.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#linesAndRecordsRead/report.xml
[m[m07.11.2021 - 16:17:40.407 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#linesAndRecordsRead was generated successfully
[m[m07.11.2021 - 16:17:40.407 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 100/281
[m[m07.11.2021 - 16:17:40.407 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#testSkippingLinesWithDifferentEscape
[m[32m07.11.2021 - 16:17:40.407 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testSkippingLinesWithDifferentEscape.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#testSkippingLinesWithDifferentEscape
[m[m07.11.2021 - 16:17:40.616 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:40.616 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testSkippingLinesWithDifferentEscape.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testSkippingLinesWithDifferentEscape/report.xml
[m[m07.11.2021 - 16:17:40.858 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#testSkippingLinesWithDifferentEscape was generated successfully
[m[m07.11.2021 - 16:17:40.858 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 101/281
[m[m07.11.2021 - 16:17:40.858 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#testNormalParsedLine
[m[32m07.11.2021 - 16:17:40.858 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testNormalParsedLine.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#testNormalParsedLine
[m[m07.11.2021 - 16:17:41.065 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:41.065 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testNormalParsedLine.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testNormalParsedLine/report.xml
[m[m07.11.2021 - 16:17:41.305 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#testNormalParsedLine was generated successfully
[m[m07.11.2021 - 16:17:41.305 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 102/281
[m[m07.11.2021 - 16:17:41.305 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#testASingleQuoteAsDataElement
[m[32m07.11.2021 - 16:17:41.305 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testASingleQuoteAsDataElement.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#testASingleQuoteAsDataElement
[m[m07.11.2021 - 16:17:41.527 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:41.527 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testASingleQuoteAsDataElement.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testASingleQuoteAsDataElement/report.xml
[m[m07.11.2021 - 16:17:41.796 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#testASingleQuoteAsDataElement was generated successfully
[m[m07.11.2021 - 16:17:41.796 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 103/281
[m[m07.11.2021 - 16:17:41.796 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#testASingleQuoteAsDataElementWithEmptyField
[m[32m07.11.2021 - 16:17:41.796 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testASingleQuoteAsDataElementWithEmptyField.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#testASingleQuoteAsDataElementWithEmptyField
[m[m07.11.2021 - 16:17:41.996 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:41.997 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testASingleQuoteAsDataElementWithEmptyField.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testASingleQuoteAsDataElementWithEmptyField/report.xml
[m[m07.11.2021 - 16:17:42.288 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#testASingleQuoteAsDataElementWithEmptyField was generated successfully
[m[m07.11.2021 - 16:17:42.288 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 104/281
[m[m07.11.2021 - 16:17:42.288 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#testSpacesAtEndOfString
[m[32m07.11.2021 - 16:17:42.288 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testSpacesAtEndOfString.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#testSpacesAtEndOfString
[m[m07.11.2021 - 16:17:42.503 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:42.503 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testSpacesAtEndOfString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testSpacesAtEndOfString/report.xml
[m[m07.11.2021 - 16:17:42.758 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#testSpacesAtEndOfString was generated successfully
[m[m07.11.2021 - 16:17:42.758 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 105/281
[m[m07.11.2021 - 16:17:42.758 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#testEscapedQuote
[m[32m07.11.2021 - 16:17:42.758 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testEscapedQuote.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#testEscapedQuote
[m[m07.11.2021 - 16:17:42.994 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:42.995 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testEscapedQuote.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testEscapedQuote/report.xml
[m[m07.11.2021 - 16:17:43.284 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#testEscapedQuote was generated successfully
[m[m07.11.2021 - 16:17:43.284 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 106/281
[m[m07.11.2021 - 16:17:43.284 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#testEscapedEscape
[m[32m07.11.2021 - 16:17:43.284 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testEscapedEscape.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#testEscapedEscape
[m[m07.11.2021 - 16:17:43.496 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:43.497 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testEscapedEscape.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testEscapedEscape/report.xml
[m[m07.11.2021 - 16:17:43.751 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#testEscapedEscape was generated successfully
[m[m07.11.2021 - 16:17:43.751 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 107/281
[m[m07.11.2021 - 16:17:43.752 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#testSingleQuoteWhenDoubleQuoteIsQuoteChar
[m[32m07.11.2021 - 16:17:43.752 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testSingleQuoteWhenDoubleQuoteIsQuoteChar.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#testSingleQuoteWhenDoubleQuoteIsQuoteChar
[m[m07.11.2021 - 16:17:43.959 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:43.960 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testSingleQuoteWhenDoubleQuoteIsQuoteChar.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testSingleQuoteWhenDoubleQuoteIsQuoteChar/report.xml
[m[m07.11.2021 - 16:17:44.279 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#testSingleQuoteWhenDoubleQuoteIsQuoteChar was generated successfully
[m[m07.11.2021 - 16:17:44.279 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 108/281
[m[m07.11.2021 - 16:17:44.279 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#testQuotedParsedLine
[m[32m07.11.2021 - 16:17:44.280 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testQuotedParsedLine.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#testQuotedParsedLine
[m[m07.11.2021 - 16:17:44.490 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:44.491 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testQuotedParsedLine.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testQuotedParsedLine/report.xml
[m[m07.11.2021 - 16:17:44.748 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#testQuotedParsedLine was generated successfully
[m[m07.11.2021 - 16:17:44.748 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 109/281
[m[m07.11.2021 - 16:17:44.748 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#bug106ParseLineWithCarriageReturnNewLineStrictQuotes
[m[32m07.11.2021 - 16:17:44.748 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#bug106ParseLineWithCarriageReturnNewLineStrictQuotes.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#bug106ParseLineWithCarriageReturnNewLineStrictQuotes
[m[m07.11.2021 - 16:17:44.964 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:44.964 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#bug106ParseLineWithCarriageReturnNewLineStrictQuotes.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#bug106ParseLineWithCarriageReturnNewLineStrictQuotes/report.xml
[m[m07.11.2021 - 16:17:45.228 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#bug106ParseLineWithCarriageReturnNewLineStrictQuotes was generated successfully
[m[m07.11.2021 - 16:17:45.228 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 110/281
[m[m07.11.2021 - 16:17:45.228 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#testIssue2992134OutOfPlaceQuotes
[m[32m07.11.2021 - 16:17:45.228 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testIssue2992134OutOfPlaceQuotes.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#testIssue2992134OutOfPlaceQuotes
[m[m07.11.2021 - 16:17:45.418 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:45.418 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testIssue2992134OutOfPlaceQuotes.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testIssue2992134OutOfPlaceQuotes/report.xml
[m[m07.11.2021 - 16:17:45.684 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#testIssue2992134OutOfPlaceQuotes was generated successfully
[m[m07.11.2021 - 16:17:45.684 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 111/281
[m[m07.11.2021 - 16:17:45.684 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#quoteAndEscapeMustBeDifferent
[m[32m07.11.2021 - 16:17:45.684 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#quoteAndEscapeMustBeDifferent.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#quoteAndEscapeMustBeDifferent
[m[m07.11.2021 - 16:17:45.931 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:45.931 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#quoteAndEscapeMustBeDifferent.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#quoteAndEscapeMustBeDifferent/report.xml
[m[m07.11.2021 - 16:17:46.186 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#quoteAndEscapeMustBeDifferent was generated successfully
[m[m07.11.2021 - 16:17:46.186 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 112/281
[m[m07.11.2021 - 16:17:46.186 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#separatorAndEscapeMustBeDifferent
[m[32m07.11.2021 - 16:17:46.186 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#separatorAndEscapeMustBeDifferent.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#separatorAndEscapeMustBeDifferent
[m[m07.11.2021 - 16:17:46.373 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:46.373 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#separatorAndEscapeMustBeDifferent.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#separatorAndEscapeMustBeDifferent/report.xml
[m[m07.11.2021 - 16:17:46.677 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#separatorAndEscapeMustBeDifferent was generated successfully
[m[m07.11.2021 - 16:17:46.677 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 113/281
[m[m07.11.2021 - 16:17:46.677 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#separatorAndQuoteMustBeDifferent
[m[32m07.11.2021 - 16:17:46.677 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#separatorAndQuoteMustBeDifferent.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#separatorAndQuoteMustBeDifferent
[m[m07.11.2021 - 16:17:46.881 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:46.882 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#separatorAndQuoteMustBeDifferent.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#separatorAndQuoteMustBeDifferent/report.xml
[m[m07.11.2021 - 16:17:47.141 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#separatorAndQuoteMustBeDifferent was generated successfully
[m[m07.11.2021 - 16:17:47.141 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 114/281
[m[m07.11.2021 - 16:17:47.141 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#testIteratorFunctionality
[m[32m07.11.2021 - 16:17:47.141 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testIteratorFunctionality.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#testIteratorFunctionality
[m[m07.11.2021 - 16:17:47.405 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:47.406 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testIteratorFunctionality.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testIteratorFunctionality/report.xml
[m[m07.11.2021 - 16:17:47.665 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#testIteratorFunctionality was generated successfully
[m[m07.11.2021 - 16:17:47.665 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 115/281
[m[m07.11.2021 - 16:17:47.665 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#canCloseReader
[m[32m07.11.2021 - 16:17:47.665 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#canCloseReader.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#canCloseReader
[m[m07.11.2021 - 16:17:47.888 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:47.888 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#canCloseReader.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#canCloseReader/report.xml
[m[m07.11.2021 - 16:17:48.157 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#canCloseReader was generated successfully
[m[m07.11.2021 - 16:17:48.157 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 116/281
[m[m07.11.2021 - 16:17:48.157 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#canCreateIteratorFromReader
[m[32m07.11.2021 - 16:17:48.157 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#canCreateIteratorFromReader.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#canCreateIteratorFromReader
[m[m07.11.2021 - 16:17:48.381 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:48.381 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#canCreateIteratorFromReader.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#canCreateIteratorFromReader/report.xml
[m[m07.11.2021 - 16:17:48.635 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#canCreateIteratorFromReader was generated successfully
[m[m07.11.2021 - 16:17:48.635 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 117/281
[m[m07.11.2021 - 16:17:48.635 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#attemptToReadCloseStreamReturnsNull
[m[32m07.11.2021 - 16:17:48.635 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#attemptToReadCloseStreamReturnsNull.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#attemptToReadCloseStreamReturnsNull
[m[m07.11.2021 - 16:17:48.853 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:48.853 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#attemptToReadCloseStreamReturnsNull.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#attemptToReadCloseStreamReturnsNull/report.xml
[m[m07.11.2021 - 16:17:49.124 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#attemptToReadCloseStreamReturnsNull was generated successfully
[m[m07.11.2021 - 16:17:49.124 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 118/281
[m[m07.11.2021 - 16:17:49.124 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#testIssue102
[m[32m07.11.2021 - 16:17:49.125 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testIssue102.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#testIssue102
[m[m07.11.2021 - 16:17:49.331 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:49.331 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testIssue102.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#testIssue102/report.xml
[m[m07.11.2021 - 16:17:49.601 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#testIssue102 was generated successfully
[m[m07.11.2021 - 16:17:49.601 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 119/281
[m[m07.11.2021 - 16:17:49.601 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#issue108ReaderPlaysWellWithChannels
[m[32m07.11.2021 - 16:17:49.602 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#issue108ReaderPlaysWellWithChannels.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#issue108ReaderPlaysWellWithChannels
[m[m07.11.2021 - 16:17:49.817 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:49.818 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#issue108ReaderPlaysWellWithChannels.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#issue108ReaderPlaysWellWithChannels/report.xml
[m[m07.11.2021 - 16:17:50.048 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#issue108ReaderPlaysWellWithChannels was generated successfully
[m[m07.11.2021 - 16:17:50.049 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 120/281
[m[m07.11.2021 - 16:17:50.049 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#featureRequest60ByDefaultEmptyFieldsAreBlank
[m[32m07.11.2021 - 16:17:50.049 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#featureRequest60ByDefaultEmptyFieldsAreBlank.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#featureRequest60ByDefaultEmptyFieldsAreBlank
[m[m07.11.2021 - 16:17:50.281 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:50.282 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#featureRequest60ByDefaultEmptyFieldsAreBlank.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#featureRequest60ByDefaultEmptyFieldsAreBlank/report.xml
[m[m07.11.2021 - 16:17:50.521 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#featureRequest60ByDefaultEmptyFieldsAreBlank was generated successfully
[m[m07.11.2021 - 16:17:50.521 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 121/281
[m[m07.11.2021 - 16:17:50.521 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#featureRequest60TreatEmptyFieldsAsNull
[m[32m07.11.2021 - 16:17:50.521 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#featureRequest60TreatEmptyFieldsAsNull.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#featureRequest60TreatEmptyFieldsAsNull
[m[m07.11.2021 - 16:17:50.726 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:50.726 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#featureRequest60TreatEmptyFieldsAsNull.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#featureRequest60TreatEmptyFieldsAsNull/report.xml
[m[m07.11.2021 - 16:17:50.980 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#featureRequest60TreatEmptyFieldsAsNull was generated successfully
[m[m07.11.2021 - 16:17:50.980 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 122/281
[m[m07.11.2021 - 16:17:50.981 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#featureRequest60TreatEmptyDelimitedFieldsAsNull
[m[32m07.11.2021 - 16:17:50.981 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#featureRequest60TreatEmptyDelimitedFieldsAsNull.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#featureRequest60TreatEmptyDelimitedFieldsAsNull
[m[m07.11.2021 - 16:17:51.243 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:51.244 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#featureRequest60TreatEmptyDelimitedFieldsAsNull.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#featureRequest60TreatEmptyDelimitedFieldsAsNull/report.xml
[m[m07.11.2021 - 16:17:51.529 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#featureRequest60TreatEmptyDelimitedFieldsAsNull was generated successfully
[m[m07.11.2021 - 16:17:51.529 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 123/281
[m[m07.11.2021 - 16:17:51.529 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVReaderTest#featureRequest60TreatEmptyFieldsDelimitedOrNotAsNull
[m[32m07.11.2021 - 16:17:51.529 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#featureRequest60TreatEmptyFieldsDelimitedOrNotAsNull.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVReaderTest#featureRequest60TreatEmptyFieldsDelimitedOrNotAsNull
[m[m07.11.2021 - 16:17:51.749 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:51.750 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#featureRequest60TreatEmptyFieldsDelimitedOrNotAsNull.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVReaderTest#featureRequest60TreatEmptyFieldsDelimitedOrNotAsNull/report.xml
[m[m07.11.2021 - 16:17:51.998 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVReaderTest#featureRequest60TreatEmptyFieldsDelimitedOrNotAsNull was generated successfully
[m[m07.11.2021 - 16:17:51.998 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 124/281
[m[m07.11.2021 - 16:17:51.998 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.stream.reader.LineReaderTest#lineReaderWillKeepCR
[m[32m07.11.2021 - 16:17:51.998 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.stream.reader.LineReaderTest#lineReaderWillKeepCR.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.stream.reader.LineReaderTest#lineReaderWillKeepCR
[m[m07.11.2021 - 16:17:52.189 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:52.189 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.stream.reader.LineReaderTest#lineReaderWillKeepCR.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.stream.reader.LineReaderTest#lineReaderWillKeepCR/report.xml
[m[m07.11.2021 - 16:17:52.446 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.stream.reader.LineReaderTest#lineReaderWillKeepCR was generated successfully
[m[m07.11.2021 - 16:17:52.447 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 125/281
[m[m07.11.2021 - 16:17:52.447 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.stream.reader.LineReaderTest#lineReaderWillRemoveCR
[m[32m07.11.2021 - 16:17:52.447 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.stream.reader.LineReaderTest#lineReaderWillRemoveCR.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.stream.reader.LineReaderTest#lineReaderWillRemoveCR
[m[m07.11.2021 - 16:17:52.627 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:52.627 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.stream.reader.LineReaderTest#lineReaderWillRemoveCR.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.stream.reader.LineReaderTest#lineReaderWillRemoveCR/report.xml
[m[m07.11.2021 - 16:17:52.886 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.stream.reader.LineReaderTest#lineReaderWillRemoveCR was generated successfully
[m[m07.11.2021 - 16:17:52.886 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 126/281
[m[m07.11.2021 - 16:17:52.886 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.stream.reader.LineReaderTest#lineReaderKeepingCRWillHandleStringWithNoLinefeed
[m[32m07.11.2021 - 16:17:52.886 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.stream.reader.LineReaderTest#lineReaderKeepingCRWillHandleStringWithNoLinefeed.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.stream.reader.LineReaderTest#lineReaderKeepingCRWillHandleStringWithNoLinefeed
[m[m07.11.2021 - 16:17:53.064 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:53.064 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.stream.reader.LineReaderTest#lineReaderKeepingCRWillHandleStringWithNoLinefeed.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.stream.reader.LineReaderTest#lineReaderKeepingCRWillHandleStringWithNoLinefeed/report.xml
[m[m07.11.2021 - 16:17:53.316 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.stream.reader.LineReaderTest#lineReaderKeepingCRWillHandleStringWithNoLinefeed was generated successfully
[m[m07.11.2021 - 16:17:53.317 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 127/281
[m[m07.11.2021 - 16:17:53.317 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.stream.reader.LineReaderTest#lineReaderNoCRWillHandleStringWithNoLinefeed
[m[32m07.11.2021 - 16:17:53.317 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.stream.reader.LineReaderTest#lineReaderNoCRWillHandleStringWithNoLinefeed.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.stream.reader.LineReaderTest#lineReaderNoCRWillHandleStringWithNoLinefeed
[m[m07.11.2021 - 16:17:53.492 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:53.492 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.stream.reader.LineReaderTest#lineReaderNoCRWillHandleStringWithNoLinefeed.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.stream.reader.LineReaderTest#lineReaderNoCRWillHandleStringWithNoLinefeed/report.xml
[m[m07.11.2021 - 16:17:53.788 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.stream.reader.LineReaderTest#lineReaderNoCRWillHandleStringWithNoLinefeed was generated successfully
[m[m07.11.2021 - 16:17:53.788 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 128/281
[m[m07.11.2021 - 16:17:53.788 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.stream.reader.LineReaderTest#lineReaderKeepingCRWillHandleEmptyString
[m[32m07.11.2021 - 16:17:53.789 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.stream.reader.LineReaderTest#lineReaderKeepingCRWillHandleEmptyString.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.stream.reader.LineReaderTest#lineReaderKeepingCRWillHandleEmptyString
[m[m07.11.2021 - 16:17:53.981 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:53.982 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.stream.reader.LineReaderTest#lineReaderKeepingCRWillHandleEmptyString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.stream.reader.LineReaderTest#lineReaderKeepingCRWillHandleEmptyString/report.xml
[m[m07.11.2021 - 16:17:54.298 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.stream.reader.LineReaderTest#lineReaderKeepingCRWillHandleEmptyString was generated successfully
[m[m07.11.2021 - 16:17:54.299 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 129/281
[m[m07.11.2021 - 16:17:54.299 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.stream.reader.LineReaderTest#lineReaderNoCRWillHandleEmptyString
[m[32m07.11.2021 - 16:17:54.299 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.stream.reader.LineReaderTest#lineReaderNoCRWillHandleEmptyString.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.stream.reader.LineReaderTest#lineReaderNoCRWillHandleEmptyString
[m[m07.11.2021 - 16:17:54.478 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:54.478 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.stream.reader.LineReaderTest#lineReaderNoCRWillHandleEmptyString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.stream.reader.LineReaderTest#lineReaderNoCRWillHandleEmptyString/report.xml
[m[m07.11.2021 - 16:17:54.756 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.stream.reader.LineReaderTest#lineReaderNoCRWillHandleEmptyString was generated successfully
[m[m07.11.2021 - 16:17:54.756 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 130/281
[m[m07.11.2021 - 16:17:54.756 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.AnnotationTest#testGoodDataByName
[m[32m07.11.2021 - 16:17:54.756 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testGoodDataByName.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.AnnotationTest#testGoodDataByName
[m[m07.11.2021 - 16:17:55.086 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:55.087 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testGoodDataByName.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testGoodDataByName/report.xml
[m[m07.11.2021 - 16:17:55.343 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.AnnotationTest#testGoodDataByName was generated successfully
[m[m07.11.2021 - 16:17:55.343 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 131/281
[m[m07.11.2021 - 16:17:55.343 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.AnnotationTest#testGoodDataByPosition
[m[32m07.11.2021 - 16:17:55.343 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testGoodDataByPosition.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.AnnotationTest#testGoodDataByPosition
[m[m07.11.2021 - 16:17:55.720 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:55.720 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testGoodDataByPosition.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testGoodDataByPosition/report.xml
[m[m07.11.2021 - 16:17:55.972 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.AnnotationTest#testGoodDataByPosition was generated successfully
[m[m07.11.2021 - 16:17:55.972 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 132/281
[m[m07.11.2021 - 16:17:55.972 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.AnnotationTest#testGoodDataCustomByName
[m[32m07.11.2021 - 16:17:55.972 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testGoodDataCustomByName.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.AnnotationTest#testGoodDataCustomByName
[m[m07.11.2021 - 16:17:56.245 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:56.245 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testGoodDataCustomByName.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testGoodDataCustomByName/report.xml
[m[m07.11.2021 - 16:17:56.483 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.AnnotationTest#testGoodDataCustomByName was generated successfully
[m[m07.11.2021 - 16:17:56.483 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 133/281
[m[m07.11.2021 - 16:17:56.483 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.AnnotationTest#testGoodDataCustomByPosition
[m[32m07.11.2021 - 16:17:56.483 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testGoodDataCustomByPosition.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.AnnotationTest#testGoodDataCustomByPosition
[m[m07.11.2021 - 16:17:56.780 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:56.781 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testGoodDataCustomByPosition.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testGoodDataCustomByPosition/report.xml
[m[m07.11.2021 - 16:17:57.073 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.AnnotationTest#testGoodDataCustomByPosition was generated successfully
[m[m07.11.2021 - 16:17:57.073 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 134/281
[m[m07.11.2021 - 16:17:57.073 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.AnnotationTest#testCase7
[m[32m07.11.2021 - 16:17:57.074 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testCase7.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.AnnotationTest#testCase7
[m[m07.11.2021 - 16:17:57.367 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:57.367 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testCase7.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testCase7/report.xml
[m[m07.11.2021 - 16:17:57.616 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.AnnotationTest#testCase7 was generated successfully
[m[m07.11.2021 - 16:17:57.616 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 135/281
[m[m07.11.2021 - 16:17:57.616 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.AnnotationTest#testCase51
[m[32m07.11.2021 - 16:17:57.617 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testCase51.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.AnnotationTest#testCase51
[m[m07.11.2021 - 16:17:57.929 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:57.930 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testCase51.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testCase51/report.xml
[m[m07.11.2021 - 16:17:58.213 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.AnnotationTest#testCase51 was generated successfully
[m[m07.11.2021 - 16:17:58.213 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 136/281
[m[m07.11.2021 - 16:17:58.213 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.AnnotationTest#testCase11
[m[32m07.11.2021 - 16:17:58.213 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testCase11.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.AnnotationTest#testCase11
[m[m07.11.2021 - 16:17:58.506 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:58.506 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testCase11.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testCase11/report.xml
[m[m07.11.2021 - 16:17:58.743 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.AnnotationTest#testCase11 was generated successfully
[m[m07.11.2021 - 16:17:58.744 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 137/281
[m[m07.11.2021 - 16:17:58.744 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.AnnotationTest#testCase55
[m[32m07.11.2021 - 16:17:58.744 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testCase55.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.AnnotationTest#testCase55
[m[m07.11.2021 - 16:17:59.029 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:59.029 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testCase55.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testCase55/report.xml
[m[m07.11.2021 - 16:17:59.359 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.AnnotationTest#testCase55 was generated successfully
[m[m07.11.2021 - 16:17:59.360 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 138/281
[m[m07.11.2021 - 16:17:59.360 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.AnnotationTest#testCase21
[m[32m07.11.2021 - 16:17:59.360 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testCase21.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.AnnotationTest#testCase21
[m[m07.11.2021 - 16:17:59.651 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:17:59.651 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testCase21.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testCase21/report.xml
[m[m07.11.2021 - 16:17:59.907 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.AnnotationTest#testCase21 was generated successfully
[m[m07.11.2021 - 16:17:59.907 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 139/281
[m[m07.11.2021 - 16:17:59.907 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.AnnotationTest#testCase63
[m[32m07.11.2021 - 16:17:59.907 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testCase63.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.AnnotationTest#testCase63
[m[m07.11.2021 - 16:18:00.204 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:00.205 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testCase63.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testCase63/report.xml
[m[m07.11.2021 - 16:18:00.450 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.AnnotationTest#testCase63 was generated successfully
[m[m07.11.2021 - 16:18:00.450 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 140/281
[m[m07.11.2021 - 16:18:00.450 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.AnnotationTest#testBadDataByName
[m[32m07.11.2021 - 16:18:00.450 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testBadDataByName.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.AnnotationTest#testBadDataByName
[m[m07.11.2021 - 16:18:00.867 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:00.867 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testBadDataByName.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testBadDataByName/report.xml
[m[m07.11.2021 - 16:18:01.119 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.AnnotationTest#testBadDataByName was generated successfully
[m[m07.11.2021 - 16:18:01.119 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 141/281
[m[m07.11.2021 - 16:18:01.119 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.AnnotationTest#testCase16
[m[32m07.11.2021 - 16:18:01.119 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testCase16.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.AnnotationTest#testCase16
[m[m07.11.2021 - 16:18:01.396 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:01.396 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testCase16.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testCase16/report.xml
[m[m07.11.2021 - 16:18:01.658 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.AnnotationTest#testCase16 was generated successfully
[m[m07.11.2021 - 16:18:01.658 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 142/281
[m[m07.11.2021 - 16:18:01.658 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.AnnotationTest#testCase60
[m[32m07.11.2021 - 16:18:01.658 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testCase60.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.AnnotationTest#testCase60
[m[m07.11.2021 - 16:18:01.961 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:01.961 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testCase60.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testCase60/report.xml
[m[m07.11.2021 - 16:18:02.212 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.AnnotationTest#testCase60 was generated successfully
[m[m07.11.2021 - 16:18:02.213 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 143/281
[m[m07.11.2021 - 16:18:02.213 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.AnnotationTest#testBadDataCustomByName
[m[32m07.11.2021 - 16:18:02.213 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testBadDataCustomByName.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.AnnotationTest#testBadDataCustomByName
[m[m07.11.2021 - 16:18:02.499 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:02.499 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testBadDataCustomByName.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testBadDataCustomByName/report.xml
[m[m07.11.2021 - 16:18:02.759 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.AnnotationTest#testBadDataCustomByName was generated successfully
[m[m07.11.2021 - 16:18:02.759 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 144/281
[m[m07.11.2021 - 16:18:02.759 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.AnnotationTest#testBadConverter
[m[32m07.11.2021 - 16:18:02.760 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testBadConverter.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.AnnotationTest#testBadConverter
[m[m07.11.2021 - 16:18:02.984 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:02.984 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testBadConverter.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#testBadConverter/report.xml
[m[m07.11.2021 - 16:18:03.231 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.AnnotationTest#testBadConverter was generated successfully
[m[m07.11.2021 - 16:18:03.231 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 145/281
[m[m07.11.2021 - 16:18:03.231 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.AnnotationTest#codeCoverageExceptions
[m[32m07.11.2021 - 16:18:03.231 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#codeCoverageExceptions.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.AnnotationTest#codeCoverageExceptions
[m[m07.11.2021 - 16:18:03.450 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:03.450 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#codeCoverageExceptions.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.AnnotationTest#codeCoverageExceptions/report.xml
[m[m07.11.2021 - 16:18:03.738 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.AnnotationTest#codeCoverageExceptions was generated successfully
[m[m07.11.2021 - 16:18:03.738 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 146/281
[m[m07.11.2021 - 16:18:03.739 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.IterableCSVToBeanTest#nextLine
[m[32m07.11.2021 - 16:18:03.739 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.IterableCSVToBeanTest#nextLine.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.IterableCSVToBeanTest#nextLine
[m[m07.11.2021 - 16:18:03.998 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:03.998 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.IterableCSVToBeanTest#nextLine.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.IterableCSVToBeanTest#nextLine/report.xml
[m[m07.11.2021 - 16:18:04.256 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.IterableCSVToBeanTest#nextLine was generated successfully
[m[m07.11.2021 - 16:18:04.256 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 147/281
[m[m07.11.2021 - 16:18:04.256 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.IterableCSVToBeanTest#nextLineWithFilter
[m[32m07.11.2021 - 16:18:04.256 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.IterableCSVToBeanTest#nextLineWithFilter.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.IterableCSVToBeanTest#nextLineWithFilter
[m[m07.11.2021 - 16:18:04.517 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:04.517 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.IterableCSVToBeanTest#nextLineWithFilter.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.IterableCSVToBeanTest#nextLineWithFilter/report.xml
[m[m07.11.2021 - 16:18:04.772 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.IterableCSVToBeanTest#nextLineWithFilter was generated successfully
[m[m07.11.2021 - 16:18:04.773 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 148/281
[m[m07.11.2021 - 16:18:04.773 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.IterableCSVToBeanTest#readWithIterator
[m[32m07.11.2021 - 16:18:04.773 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.IterableCSVToBeanTest#readWithIterator.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.IterableCSVToBeanTest#readWithIterator
[m[m07.11.2021 - 16:18:05.035 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:05.036 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.IterableCSVToBeanTest#readWithIterator.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.IterableCSVToBeanTest#readWithIterator/report.xml
[m[m07.11.2021 - 16:18:05.332 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.IterableCSVToBeanTest#readWithIterator was generated successfully
[m[m07.11.2021 - 16:18:05.332 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 149/281
[m[m07.11.2021 - 16:18:05.332 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.IterableCSVToBeanTest#readWithIteratorAndFilter
[m[32m07.11.2021 - 16:18:05.332 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.IterableCSVToBeanTest#readWithIteratorAndFilter.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.IterableCSVToBeanTest#readWithIteratorAndFilter
[m[m07.11.2021 - 16:18:05.597 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:05.597 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.IterableCSVToBeanTest#readWithIteratorAndFilter.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.IterableCSVToBeanTest#readWithIteratorAndFilter/report.xml
[m[m07.11.2021 - 16:18:05.856 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.IterableCSVToBeanTest#readWithIteratorAndFilter was generated successfully
[m[m07.11.2021 - 16:18:05.856 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 150/281
[m[m07.11.2021 - 16:18:05.857 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.OpencsvTest#testWriteRead
[m[32m07.11.2021 - 16:18:05.857 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.OpencsvTest#testWriteRead.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.OpencsvTest#testWriteRead
[m[m07.11.2021 - 16:18:06.058 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:06.058 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.OpencsvTest#testWriteRead.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.OpencsvTest#testWriteRead/report.xml
[m[m07.11.2021 - 16:18:06.306 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.OpencsvTest#testWriteRead was generated successfully
[m[m07.11.2021 - 16:18:06.306 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 151/281
[m[m07.11.2021 - 16:18:06.306 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#testParse
[m[32m07.11.2021 - 16:18:06.306 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#testParse.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#testParse
[m[m07.11.2021 - 16:18:06.546 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:06.547 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#testParse.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#testParse/report.xml
[m[m07.11.2021 - 16:18:06.782 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#testParse was generated successfully
[m[m07.11.2021 - 16:18:06.782 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 152/281
[m[m07.11.2021 - 16:18:06.782 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#getColumnNameReturnsNullIfColumnNumberIsTooLarge
[m[32m07.11.2021 - 16:18:06.782 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#getColumnNameReturnsNullIfColumnNumberIsTooLarge.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#getColumnNameReturnsNullIfColumnNumberIsTooLarge
[m[m07.11.2021 - 16:18:07.037 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:07.038 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#getColumnNameReturnsNullIfColumnNumberIsTooLarge.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#getColumnNameReturnsNullIfColumnNumberIsTooLarge/report.xml
[m[m07.11.2021 - 16:18:07.348 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#getColumnNameReturnsNullIfColumnNumberIsTooLarge was generated successfully
[m[m07.11.2021 - 16:18:07.348 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 153/281
[m[m07.11.2021 - 16:18:07.348 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#columnNameMappingShouldBeCaseInsensitive
[m[32m07.11.2021 - 16:18:07.348 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#columnNameMappingShouldBeCaseInsensitive.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#columnNameMappingShouldBeCaseInsensitive
[m[m07.11.2021 - 16:18:07.594 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:07.594 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#columnNameMappingShouldBeCaseInsensitive.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#columnNameMappingShouldBeCaseInsensitive/report.xml
[m[m07.11.2021 - 16:18:07.836 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#columnNameMappingShouldBeCaseInsensitive was generated successfully
[m[m07.11.2021 - 16:18:07.836 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 154/281
[m[m07.11.2021 - 16:18:07.837 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#correctlyParseNullString
[m[32m07.11.2021 - 16:18:07.837 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#correctlyParseNullString.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#correctlyParseNullString
[m[m07.11.2021 - 16:18:08.079 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:08.079 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#correctlyParseNullString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#correctlyParseNullString/report.xml
[m[m07.11.2021 - 16:18:08.319 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#correctlyParseNullString was generated successfully
[m[m07.11.2021 - 16:18:08.319 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 155/281
[m[m07.11.2021 - 16:18:08.319 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#correctlyParserNullObject
[m[32m07.11.2021 - 16:18:08.319 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#correctlyParserNullObject.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#correctlyParserNullObject
[m[m07.11.2021 - 16:18:08.543 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:08.543 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#correctlyParserNullObject.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#correctlyParserNullObject/report.xml
[m[m07.11.2021 - 16:18:08.779 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#correctlyParserNullObject was generated successfully
[m[m07.11.2021 - 16:18:08.779 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 156/281
[m[m07.11.2021 - 16:18:08.779 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testParseLine
[m[32m07.11.2021 - 16:18:08.779 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testParseLine.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testParseLine
[m[m07.11.2021 - 16:18:08.996 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:08.997 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testParseLine.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testParseLine/report.xml
[m[m07.11.2021 - 16:18:09.269 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testParseLine was generated successfully
[m[m07.11.2021 - 16:18:09.269 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 157/281
[m[m07.11.2021 - 16:18:09.269 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testSpecialCharacters
[m[32m07.11.2021 - 16:18:09.270 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testSpecialCharacters.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testSpecialCharacters
[m[m07.11.2021 - 16:18:09.487 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:09.487 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testSpecialCharacters.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testSpecialCharacters/report.xml
[m[m07.11.2021 - 16:18:09.725 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testSpecialCharacters was generated successfully
[m[m07.11.2021 - 16:18:09.725 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 158/281
[m[m07.11.2021 - 16:18:09.725 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#parseLineWithBothEscapeAndQuoteChar
[m[32m07.11.2021 - 16:18:09.725 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#parseLineWithBothEscapeAndQuoteChar.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#parseLineWithBothEscapeAndQuoteChar
[m[m07.11.2021 - 16:18:09.954 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:09.954 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#parseLineWithBothEscapeAndQuoteChar.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#parseLineWithBothEscapeAndQuoteChar/report.xml
[m[m07.11.2021 - 16:18:10.206 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#parseLineWithBothEscapeAndQuoteChar was generated successfully
[m[m07.11.2021 - 16:18:10.206 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 159/281
[m[m07.11.2021 - 16:18:10.206 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testParseLineWithNoEscapeChar
[m[32m07.11.2021 - 16:18:10.206 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testParseLineWithNoEscapeChar.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testParseLineWithNoEscapeChar
[m[m07.11.2021 - 16:18:10.409 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:10.410 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testParseLineWithNoEscapeChar.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testParseLineWithNoEscapeChar/report.xml
[m[m07.11.2021 - 16:18:10.664 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testParseLineWithNoEscapeChar was generated successfully
[m[m07.11.2021 - 16:18:10.664 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 160/281
[m[m07.11.2021 - 16:18:10.664 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#parseLineWithNoEscapeCharAndQuotes
[m[32m07.11.2021 - 16:18:10.664 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#parseLineWithNoEscapeCharAndQuotes.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#parseLineWithNoEscapeCharAndQuotes
[m[m07.11.2021 - 16:18:10.865 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:10.866 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#parseLineWithNoEscapeCharAndQuotes.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#parseLineWithNoEscapeCharAndQuotes/report.xml
[m[m07.11.2021 - 16:18:11.117 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#parseLineWithNoEscapeCharAndQuotes was generated successfully
[m[m07.11.2021 - 16:18:11.117 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 161/281
[m[m07.11.2021 - 16:18:11.117 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testWriteAllAsList
[m[32m07.11.2021 - 16:18:11.117 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testWriteAllAsList.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testWriteAllAsList
[m[m07.11.2021 - 16:18:11.332 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:11.332 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testWriteAllAsList.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testWriteAllAsList/report.xml
[m[m07.11.2021 - 16:18:11.605 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testWriteAllAsList was generated successfully
[m[m07.11.2021 - 16:18:11.605 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 162/281
[m[m07.11.2021 - 16:18:11.605 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testWriteAllAsIterable
[m[32m07.11.2021 - 16:18:11.605 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testWriteAllAsIterable.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testWriteAllAsIterable
[m[m07.11.2021 - 16:18:11.878 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:11.878 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testWriteAllAsIterable.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testWriteAllAsIterable/report.xml
[m[m07.11.2021 - 16:18:12.128 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testWriteAllAsIterable was generated successfully
[m[m07.11.2021 - 16:18:12.128 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 163/281
[m[m07.11.2021 - 16:18:12.128 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testWriteAllObjects
[m[32m07.11.2021 - 16:18:12.128 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testWriteAllObjects.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testWriteAllObjects
[m[m07.11.2021 - 16:18:12.340 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:12.341 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testWriteAllObjects.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testWriteAllObjects/report.xml
[m[m07.11.2021 - 16:18:12.691 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testWriteAllObjects was generated successfully
[m[m07.11.2021 - 16:18:12.691 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 164/281
[m[m07.11.2021 - 16:18:12.691 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testNoQuoteChars
[m[32m07.11.2021 - 16:18:12.691 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testNoQuoteChars.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testNoQuoteChars
[m[m07.11.2021 - 16:18:12.893 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:12.893 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testNoQuoteChars.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testNoQuoteChars/report.xml
[m[m07.11.2021 - 16:18:13.152 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testNoQuoteChars was generated successfully
[m[m07.11.2021 - 16:18:13.152 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 165/281
[m[m07.11.2021 - 16:18:13.153 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testNoQuoteCharsAndNoEscapeChars
[m[32m07.11.2021 - 16:18:13.153 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testNoQuoteCharsAndNoEscapeChars.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testNoQuoteCharsAndNoEscapeChars
[m[m07.11.2021 - 16:18:13.380 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:13.380 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testNoQuoteCharsAndNoEscapeChars.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testNoQuoteCharsAndNoEscapeChars/report.xml
[m[m07.11.2021 - 16:18:13.689 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testNoQuoteCharsAndNoEscapeChars was generated successfully
[m[m07.11.2021 - 16:18:13.690 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 166/281
[m[m07.11.2021 - 16:18:13.690 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testIntelligentQuotes
[m[32m07.11.2021 - 16:18:13.690 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testIntelligentQuotes.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testIntelligentQuotes
[m[m07.11.2021 - 16:18:13.887 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:13.888 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testIntelligentQuotes.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testIntelligentQuotes/report.xml
[m[m07.11.2021 - 16:18:14.151 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testIntelligentQuotes was generated successfully
[m[m07.11.2021 - 16:18:14.152 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 167/281
[m[m07.11.2021 - 16:18:14.152 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testNullValues
[m[32m07.11.2021 - 16:18:14.152 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testNullValues.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testNullValues
[m[m07.11.2021 - 16:18:14.359 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:14.359 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testNullValues.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testNullValues/report.xml
[m[m07.11.2021 - 16:18:14.607 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testNullValues was generated successfully
[m[m07.11.2021 - 16:18:14.607 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 168/281
[m[m07.11.2021 - 16:18:14.607 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testStreamFlushing
[m[32m07.11.2021 - 16:18:14.607 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testStreamFlushing.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testStreamFlushing
[m[m07.11.2021 - 16:18:14.818 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:14.819 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testStreamFlushing.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testStreamFlushing/report.xml
[m[m07.11.2021 - 16:18:15.092 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testStreamFlushing was generated successfully
[m[m07.11.2021 - 16:18:15.092 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 169/281
[m[m07.11.2021 - 16:18:15.092 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#flushWillThrowIOException
[m[32m07.11.2021 - 16:18:15.092 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#flushWillThrowIOException.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#flushWillThrowIOException
[m[m07.11.2021 - 16:18:15.309 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:15.310 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#flushWillThrowIOException.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#flushWillThrowIOException/report.xml
[m[m07.11.2021 - 16:18:15.605 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#flushWillThrowIOException was generated successfully
[m[m07.11.2021 - 16:18:15.605 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 170/281
[m[m07.11.2021 - 16:18:15.605 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#flushQuietlyWillNotThrowException
[m[32m07.11.2021 - 16:18:15.605 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#flushQuietlyWillNotThrowException.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#flushQuietlyWillNotThrowException
[m[m07.11.2021 - 16:18:15.807 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:15.807 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#flushQuietlyWillNotThrowException.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#flushQuietlyWillNotThrowException/report.xml
[m[m07.11.2021 - 16:18:16.107 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#flushQuietlyWillNotThrowException was generated successfully
[m[m07.11.2021 - 16:18:16.107 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 171/281
[m[m07.11.2021 - 16:18:16.107 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testAlternateEscapeChar
[m[32m07.11.2021 - 16:18:16.107 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testAlternateEscapeChar.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testAlternateEscapeChar
[m[m07.11.2021 - 16:18:16.313 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:16.313 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testAlternateEscapeChar.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testAlternateEscapeChar/report.xml
[m[m07.11.2021 - 16:18:16.590 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testAlternateEscapeChar was generated successfully
[m[m07.11.2021 - 16:18:16.590 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 172/281
[m[m07.11.2021 - 16:18:16.590 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#embeddedQuoteInString
[m[32m07.11.2021 - 16:18:16.590 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#embeddedQuoteInString.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#embeddedQuoteInString
[m[m07.11.2021 - 16:18:16.793 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:16.793 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#embeddedQuoteInString.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#embeddedQuoteInString/report.xml
[m[m07.11.2021 - 16:18:17.045 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#embeddedQuoteInString was generated successfully
[m[m07.11.2021 - 16:18:17.045 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 173/281
[m[m07.11.2021 - 16:18:17.045 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testNoQuotingNoEscaping
[m[32m07.11.2021 - 16:18:17.045 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testNoQuotingNoEscaping.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testNoQuotingNoEscaping
[m[m07.11.2021 - 16:18:17.266 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:17.267 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testNoQuotingNoEscaping.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testNoQuotingNoEscaping/report.xml
[m[m07.11.2021 - 16:18:17.504 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testNoQuotingNoEscaping was generated successfully
[m[m07.11.2021 - 16:18:17.504 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 174/281
[m[m07.11.2021 - 16:18:17.504 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testNestedQuotes
[m[32m07.11.2021 - 16:18:17.504 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testNestedQuotes.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testNestedQuotes
[m[m07.11.2021 - 16:18:17.718 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:17.718 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testNestedQuotes.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testNestedQuotes/report.xml
[m[m07.11.2021 - 16:18:17.965 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testNestedQuotes was generated successfully
[m[m07.11.2021 - 16:18:17.965 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 175/281
[m[m07.11.2021 - 16:18:17.965 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testAlternateLineFeeds
[m[32m07.11.2021 - 16:18:17.965 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testAlternateLineFeeds.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testAlternateLineFeeds
[m[m07.11.2021 - 16:18:18.190 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:18.190 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testAlternateLineFeeds.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testAlternateLineFeeds/report.xml
[m[m07.11.2021 - 16:18:18.489 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testAlternateLineFeeds was generated successfully
[m[m07.11.2021 - 16:18:18.489 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 176/281
[m[m07.11.2021 - 16:18:18.489 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testResultSetWithHeaders
[m[32m07.11.2021 - 16:18:18.489 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testResultSetWithHeaders.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testResultSetWithHeaders
[m[m07.11.2021 - 16:18:18.798 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:18.798 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testResultSetWithHeaders.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testResultSetWithHeaders/report.xml
[m[m07.11.2021 - 16:18:19.055 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testResultSetWithHeaders was generated successfully
[m[m07.11.2021 - 16:18:19.055 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 177/281
[m[m07.11.2021 - 16:18:19.055 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testMultiLineResultSetWithHeaders
[m[32m07.11.2021 - 16:18:19.055 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testMultiLineResultSetWithHeaders.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testMultiLineResultSetWithHeaders
[m[m07.11.2021 - 16:18:19.382 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:19.383 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testMultiLineResultSetWithHeaders.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testMultiLineResultSetWithHeaders/report.xml
[m[m07.11.2021 - 16:18:19.638 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testMultiLineResultSetWithHeaders was generated successfully
[m[m07.11.2021 - 16:18:19.638 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 178/281
[m[m07.11.2021 - 16:18:19.638 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testResultSetWithoutHeaders
[m[32m07.11.2021 - 16:18:19.638 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testResultSetWithoutHeaders.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testResultSetWithoutHeaders
[m[m07.11.2021 - 16:18:19.968 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:19.969 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testResultSetWithoutHeaders.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testResultSetWithoutHeaders/report.xml
[m[m07.11.2021 - 16:18:20.218 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testResultSetWithoutHeaders was generated successfully
[m[m07.11.2021 - 16:18:20.218 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 179/281
[m[m07.11.2021 - 16:18:20.218 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testMultiLineResultSetWithoutHeaders
[m[32m07.11.2021 - 16:18:20.219 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testMultiLineResultSetWithoutHeaders.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testMultiLineResultSetWithoutHeaders
[m[m07.11.2021 - 16:18:20.544 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:20.544 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testMultiLineResultSetWithoutHeaders.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testMultiLineResultSetWithoutHeaders/report.xml
[m[m07.11.2021 - 16:18:20.799 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testMultiLineResultSetWithoutHeaders was generated successfully
[m[m07.11.2021 - 16:18:20.799 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 180/281
[m[m07.11.2021 - 16:18:20.799 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testResultSetTrim
[m[32m07.11.2021 - 16:18:20.799 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testResultSetTrim.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testResultSetTrim
[m[m07.11.2021 - 16:18:21.135 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:21.135 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testResultSetTrim.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testResultSetTrim/report.xml
[m[m07.11.2021 - 16:18:21.374 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testResultSetTrim was generated successfully
[m[m07.11.2021 - 16:18:21.375 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 181/281
[m[m07.11.2021 - 16:18:21.375 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#needToSetBothQuoteAndEscapeCharIfYouWantThemToBeTheSame
[m[32m07.11.2021 - 16:18:21.375 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#needToSetBothQuoteAndEscapeCharIfYouWantThemToBeTheSame.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#needToSetBothQuoteAndEscapeCharIfYouWantThemToBeTheSame
[m[m07.11.2021 - 16:18:21.686 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:21.687 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#needToSetBothQuoteAndEscapeCharIfYouWantThemToBeTheSame.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#needToSetBothQuoteAndEscapeCharIfYouWantThemToBeTheSame/report.xml
[m[m07.11.2021 - 16:18:21.936 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#needToSetBothQuoteAndEscapeCharIfYouWantThemToBeTheSame was generated successfully
[m[m07.11.2021 - 16:18:21.936 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 182/281
[m[m07.11.2021 - 16:18:21.936 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#issue123SeparatorEscapedWhenQuoteIsNoQuoteChar
[m[32m07.11.2021 - 16:18:21.936 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#issue123SeparatorEscapedWhenQuoteIsNoQuoteChar.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#issue123SeparatorEscapedWhenQuoteIsNoQuoteChar
[m[m07.11.2021 - 16:18:22.149 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:22.149 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#issue123SeparatorEscapedWhenQuoteIsNoQuoteChar.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#issue123SeparatorEscapedWhenQuoteIsNoQuoteChar/report.xml
[m[m07.11.2021 - 16:18:22.415 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#issue123SeparatorEscapedWhenQuoteIsNoQuoteChar was generated successfully
[m[m07.11.2021 - 16:18:22.415 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 183/281
[m[m07.11.2021 - 16:18:22.415 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#issue123SeparatorEscapedWhenQuoteIsNoQuoteCharSpecifingNoneDefaultEscapeChar
[m[32m07.11.2021 - 16:18:22.415 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#issue123SeparatorEscapedWhenQuoteIsNoQuoteCharSpecifingNoneDefaultEscapeChar.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#issue123SeparatorEscapedWhenQuoteIsNoQuoteCharSpecifingNoneDefaultEscapeChar
[m[m07.11.2021 - 16:18:22.687 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:22.688 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#issue123SeparatorEscapedWhenQuoteIsNoQuoteCharSpecifingNoneDefaultEscapeChar.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#issue123SeparatorEscapedWhenQuoteIsNoQuoteCharSpecifingNoneDefaultEscapeChar/report.xml
[m[m07.11.2021 - 16:18:23.017 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#issue123SeparatorEscapedWhenQuoteIsNoQuoteCharSpecifingNoneDefaultEscapeChar was generated successfully
[m[m07.11.2021 - 16:18:23.017 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 184/281
[m[m07.11.2021 - 16:18:23.017 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#testIOException
[m[32m07.11.2021 - 16:18:23.018 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testIOException.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#testIOException
[m[m07.11.2021 - 16:18:23.288 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:23.288 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testIOException.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#testIOException/report.xml
[m[m07.11.2021 - 16:18:23.535 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#testIOException was generated successfully
[m[m07.11.2021 - 16:18:23.535 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 185/281
[m[m07.11.2021 - 16:18:23.535 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVWriterTest#checkErrorReturnsTrueWhenPassedInPrintWriter
[m[32m07.11.2021 - 16:18:23.536 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#checkErrorReturnsTrueWhenPassedInPrintWriter.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVWriterTest#checkErrorReturnsTrueWhenPassedInPrintWriter
[m[m07.11.2021 - 16:18:23.803 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:23.803 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#checkErrorReturnsTrueWhenPassedInPrintWriter.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVWriterTest#checkErrorReturnsTrueWhenPassedInPrintWriter/report.xml
[m[m07.11.2021 - 16:18:24.068 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVWriterTest#checkErrorReturnsTrueWhenPassedInPrintWriter was generated successfully
[m[m07.11.2021 - 16:18:24.069 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 186/281
[m[m07.11.2021 - 16:18:24.069 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenExceptionIsThrown
[m[32m07.11.2021 - 16:18:24.069 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenExceptionIsThrown.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenExceptionIsThrown
[m[m07.11.2021 - 16:18:24.302 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:24.302 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenExceptionIsThrown.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenExceptionIsThrown/report.xml
[m[m07.11.2021 - 16:18:24.561 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenExceptionIsThrown was generated successfully
[m[m07.11.2021 - 16:18:24.561 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 187/281
[m[m07.11.2021 - 16:18:24.561 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionLineWhenExceptionIsThrown
[m[32m07.11.2021 - 16:18:24.562 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionLineWhenExceptionIsThrown.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionLineWhenExceptionIsThrown
[m[m07.11.2021 - 16:18:24.816 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:24.817 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionLineWhenExceptionIsThrown.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionLineWhenExceptionIsThrown/report.xml
[m[m07.11.2021 - 16:18:25.076 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionLineWhenExceptionIsThrown was generated successfully
[m[m07.11.2021 - 16:18:25.076 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 188/281
[m[m07.11.2021 - 16:18:25.077 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanTest#parseBeanWithNoAnnotations
[m[32m07.11.2021 - 16:18:25.077 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#parseBeanWithNoAnnotations.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanTest#parseBeanWithNoAnnotations
[m[m07.11.2021 - 16:18:25.362 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:25.363 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#parseBeanWithNoAnnotations.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#parseBeanWithNoAnnotations/report.xml
[m[m07.11.2021 - 16:18:25.655 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanTest#parseBeanWithNoAnnotations was generated successfully
[m[m07.11.2021 - 16:18:25.655 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 189/281
[m[m07.11.2021 - 16:18:25.655 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanTest#parseBeanWithAnnotations
[m[32m07.11.2021 - 16:18:25.655 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#parseBeanWithAnnotations.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanTest#parseBeanWithAnnotations
[m[m07.11.2021 - 16:18:25.917 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:25.917 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#parseBeanWithAnnotations.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#parseBeanWithAnnotations/report.xml
[m[m07.11.2021 - 16:18:26.195 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanTest#parseBeanWithAnnotations was generated successfully
[m[m07.11.2021 - 16:18:26.195 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 190/281
[m[m07.11.2021 - 16:18:26.196 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanTest#parseBeanWithSomeAnnotations
[m[32m07.11.2021 - 16:18:26.196 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#parseBeanWithSomeAnnotations.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanTest#parseBeanWithSomeAnnotations
[m[m07.11.2021 - 16:18:26.490 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:26.490 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#parseBeanWithSomeAnnotations.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#parseBeanWithSomeAnnotations/report.xml
[m[m07.11.2021 - 16:18:26.745 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanTest#parseBeanWithSomeAnnotations was generated successfully
[m[m07.11.2021 - 16:18:26.745 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 191/281
[m[m07.11.2021 - 16:18:26.745 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithAllValidDataTypes
[m[32m07.11.2021 - 16:18:26.746 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithAllValidDataTypes.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithAllValidDataTypes
[m[m07.11.2021 - 16:18:27.047 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:27.048 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithAllValidDataTypes.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithAllValidDataTypes/report.xml
[m[m07.11.2021 - 16:18:27.348 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithAllValidDataTypes was generated successfully
[m[m07.11.2021 - 16:18:27.348 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 192/281
[m[m07.11.2021 - 16:18:27.348 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithPrivateField
[m[32m07.11.2021 - 16:18:27.348 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithPrivateField.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithPrivateField
[m[m07.11.2021 - 16:18:27.621 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:27.684 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithPrivateField.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithPrivateField/report.xml
[m[m07.11.2021 - 16:18:27.982 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithPrivateField was generated successfully
[m[m07.11.2021 - 16:18:27.982 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 193/281
[m[m07.11.2021 - 16:18:27.982 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithFieldsOfAllAccessModifierTypes
[m[32m07.11.2021 - 16:18:27.982 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithFieldsOfAllAccessModifierTypes.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithFieldsOfAllAccessModifierTypes
[m[m07.11.2021 - 16:18:28.280 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:28.280 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithFieldsOfAllAccessModifierTypes.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithFieldsOfAllAccessModifierTypes/report.xml
[m[m07.11.2021 - 16:18:28.520 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithFieldsOfAllAccessModifierTypes was generated successfully
[m[m07.11.2021 - 16:18:28.520 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 194/281
[m[m07.11.2021 - 16:18:28.520 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanTest#bug133ShouldNotThrowNullPointerExceptionWhenProcessingEmptyWithNoAnnotations
[m[32m07.11.2021 - 16:18:28.520 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#bug133ShouldNotThrowNullPointerExceptionWhenProcessingEmptyWithNoAnnotations.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanTest#bug133ShouldNotThrowNullPointerExceptionWhenProcessingEmptyWithNoAnnotations
[m[m07.11.2021 - 16:18:28.831 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:28.831 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#bug133ShouldNotThrowNullPointerExceptionWhenProcessingEmptyWithNoAnnotations.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#bug133ShouldNotThrowNullPointerExceptionWhenProcessingEmptyWithNoAnnotations/report.xml
[m[m07.11.2021 - 16:18:29.128 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanTest#bug133ShouldNotThrowNullPointerExceptionWhenProcessingEmptyWithNoAnnotations was generated successfully
[m[m07.11.2021 - 16:18:29.128 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 195/281
[m[m07.11.2021 - 16:18:29.128 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenUnsupportedDataTypeUsedInAnnotatedBean
[m[32m07.11.2021 - 16:18:29.128 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenUnsupportedDataTypeUsedInAnnotatedBean.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenUnsupportedDataTypeUsedInAnnotatedBean
[m[m07.11.2021 - 16:18:29.394 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:29.394 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenUnsupportedDataTypeUsedInAnnotatedBean.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenUnsupportedDataTypeUsedInAnnotatedBean/report.xml
[m[m07.11.2021 - 16:18:29.653 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenUnsupportedDataTypeUsedInAnnotatedBean was generated successfully
[m[m07.11.2021 - 16:18:29.653 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 196/281
[m[m07.11.2021 - 16:18:29.653 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenRequiredFieldNotProvidedInAnnotatedBean
[m[32m07.11.2021 - 16:18:29.653 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenRequiredFieldNotProvidedInAnnotatedBean.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenRequiredFieldNotProvidedInAnnotatedBean
[m[m07.11.2021 - 16:18:29.950 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:29.950 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenRequiredFieldNotProvidedInAnnotatedBean.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenRequiredFieldNotProvidedInAnnotatedBean/report.xml
[m[m07.11.2021 - 16:18:30.202 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenRequiredFieldNotProvidedInAnnotatedBean was generated successfully
[m[m07.11.2021 - 16:18:30.202 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 197/281
[m[m07.11.2021 - 16:18:30.202 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenParseWithoutArgumentsIsCalled
[m[32m07.11.2021 - 16:18:30.202 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenParseWithoutArgumentsIsCalled.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenParseWithoutArgumentsIsCalled
[m[m07.11.2021 - 16:18:30.399 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:30.399 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenParseWithoutArgumentsIsCalled.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenParseWithoutArgumentsIsCalled/report.xml
[m[m07.11.2021 - 16:18:30.666 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenParseWithoutArgumentsIsCalled was generated successfully
[m[m07.11.2021 - 16:18:30.666 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 198/281
[m[m07.11.2021 - 16:18:30.666 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenOnlyReaderIsSpecifiedToParseWithoutArguments
[m[32m07.11.2021 - 16:18:30.666 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenOnlyReaderIsSpecifiedToParseWithoutArguments.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenOnlyReaderIsSpecifiedToParseWithoutArguments
[m[m07.11.2021 - 16:18:30.880 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:30.880 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenOnlyReaderIsSpecifiedToParseWithoutArguments.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenOnlyReaderIsSpecifiedToParseWithoutArguments/report.xml
[m[m07.11.2021 - 16:18:31.169 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenOnlyReaderIsSpecifiedToParseWithoutArguments was generated successfully
[m[m07.11.2021 - 16:18:31.170 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 199/281
[m[m07.11.2021 - 16:18:31.170 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenOnlyMapperIsSpecifiedToParseWithoutArguments
[m[32m07.11.2021 - 16:18:31.170 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenOnlyMapperIsSpecifiedToParseWithoutArguments.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenOnlyMapperIsSpecifiedToParseWithoutArguments
[m[m07.11.2021 - 16:18:31.399 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:31.399 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenOnlyMapperIsSpecifiedToParseWithoutArguments.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenOnlyMapperIsSpecifiedToParseWithoutArguments/report.xml
[m[m07.11.2021 - 16:18:31.659 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenOnlyMapperIsSpecifiedToParseWithoutArguments was generated successfully
[m[m07.11.2021 - 16:18:31.660 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 200/281
[m[m07.11.2021 - 16:18:31.660 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenReaderNotProvidedInBuilder
[m[32m07.11.2021 - 16:18:31.660 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenReaderNotProvidedInBuilder.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenReaderNotProvidedInBuilder
[m[m07.11.2021 - 16:18:31.870 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:31.870 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenReaderNotProvidedInBuilder.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenReaderNotProvidedInBuilder/report.xml
[m[m07.11.2021 - 16:18:32.106 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenReaderNotProvidedInBuilder was generated successfully
[m[m07.11.2021 - 16:18:32.106 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 201/281
[m[m07.11.2021 - 16:18:32.106 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenTypeAndMapperNotProvidedInBuilder
[m[32m07.11.2021 - 16:18:32.106 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenTypeAndMapperNotProvidedInBuilder.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenTypeAndMapperNotProvidedInBuilder
[m[m07.11.2021 - 16:18:32.312 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:32.312 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenTypeAndMapperNotProvidedInBuilder.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenTypeAndMapperNotProvidedInBuilder/report.xml
[m[m07.11.2021 - 16:18:32.577 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenTypeAndMapperNotProvidedInBuilder was generated successfully
[m[m07.11.2021 - 16:18:32.577 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 202/281
[m[m07.11.2021 - 16:18:32.577 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanTest#testMinimumBuilder
[m[32m07.11.2021 - 16:18:32.577 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#testMinimumBuilder.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanTest#testMinimumBuilder
[m[m07.11.2021 - 16:18:32.843 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:32.843 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#testMinimumBuilder.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#testMinimumBuilder/report.xml
[m[m07.11.2021 - 16:18:33.093 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanTest#testMinimumBuilder was generated successfully
[m[m07.11.2021 - 16:18:33.093 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 203/281
[m[m07.11.2021 - 16:18:33.093 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanTest#testMaximumBuilder
[m[32m07.11.2021 - 16:18:33.093 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#testMaximumBuilder.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanTest#testMaximumBuilder
[m[m07.11.2021 - 16:18:33.457 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:33.457 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#testMaximumBuilder.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#testMaximumBuilder/report.xml
[m[m07.11.2021 - 16:18:33.716 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanTest#testMaximumBuilder was generated successfully
[m[m07.11.2021 - 16:18:33.716 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 204/281
[m[m07.11.2021 - 16:18:33.717 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanTest#testColumnMappingStrategyWithBuilder
[m[32m07.11.2021 - 16:18:33.717 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#testColumnMappingStrategyWithBuilder.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanTest#testColumnMappingStrategyWithBuilder
[m[m07.11.2021 - 16:18:34.098 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:34.099 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#testColumnMappingStrategyWithBuilder.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#testColumnMappingStrategyWithBuilder/report.xml
[m[m07.11.2021 - 16:18:34.357 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanTest#testColumnMappingStrategyWithBuilder was generated successfully
[m[m07.11.2021 - 16:18:34.357 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 205/281
[m[m07.11.2021 - 16:18:34.357 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.CsvToBeanTest#testMappingWithoutAnnotationsWithBuilder
[m[32m07.11.2021 - 16:18:34.357 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#testMappingWithoutAnnotationsWithBuilder.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.CsvToBeanTest#testMappingWithoutAnnotationsWithBuilder
[m[m07.11.2021 - 16:18:34.632 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:34.633 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#testMappingWithoutAnnotationsWithBuilder.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.CsvToBeanTest#testMappingWithoutAnnotationsWithBuilder/report.xml
[m[m07.11.2021 - 16:18:34.898 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.CsvToBeanTest#testMappingWithoutAnnotationsWithBuilder was generated successfully
[m[m07.11.2021 - 16:18:34.898 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 206/281
[m[m07.11.2021 - 16:18:34.898 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#canPrintColumnNames
[m[32m07.11.2021 - 16:18:34.898 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#canPrintColumnNames.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#canPrintColumnNames
[m[m07.11.2021 - 16:18:35.190 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:35.191 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#canPrintColumnNames.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#canPrintColumnNames/report.xml
[m[m07.11.2021 - 16:18:35.495 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#canPrintColumnNames was generated successfully
[m[m07.11.2021 - 16:18:35.495 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 207/281
[m[m07.11.2021 - 16:18:35.495 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#getObjectFromResultSet
[m[32m07.11.2021 - 16:18:35.495 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getObjectFromResultSet.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#getObjectFromResultSet
[m[m07.11.2021 - 16:18:35.804 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:35.804 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getObjectFromResultSet.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getObjectFromResultSet/report.xml
[m[m07.11.2021 - 16:18:36.063 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#getObjectFromResultSet was generated successfully
[m[m07.11.2021 - 16:18:36.063 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 208/281
[m[m07.11.2021 - 16:18:36.063 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#getBitFromResultSet
[m[32m07.11.2021 - 16:18:36.064 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getBitFromResultSet.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#getBitFromResultSet
[m[m07.11.2021 - 16:18:36.368 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:36.368 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getBitFromResultSet.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getBitFromResultSet/report.xml
[m[m07.11.2021 - 16:18:36.620 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#getBitFromResultSet was generated successfully
[m[m07.11.2021 - 16:18:36.620 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 209/281
[m[m07.11.2021 - 16:18:36.620 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#getBooleanFromResultSet
[m[32m07.11.2021 - 16:18:36.620 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getBooleanFromResultSet.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#getBooleanFromResultSet
[m[m07.11.2021 - 16:18:36.911 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:36.911 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getBooleanFromResultSet.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getBooleanFromResultSet/report.xml
[m[m07.11.2021 - 16:18:37.181 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#getBooleanFromResultSet was generated successfully
[m[m07.11.2021 - 16:18:37.181 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 210/281
[m[m07.11.2021 - 16:18:37.181 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#getBigIntFromResultSet
[m[32m07.11.2021 - 16:18:37.181 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getBigIntFromResultSet.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#getBigIntFromResultSet
[m[m07.11.2021 - 16:18:37.486 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:37.487 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getBigIntFromResultSet.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getBigIntFromResultSet/report.xml
[m[m07.11.2021 - 16:18:37.813 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#getBigIntFromResultSet was generated successfully
[m[m07.11.2021 - 16:18:37.813 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 211/281
[m[m07.11.2021 - 16:18:37.813 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#getBigDecimalFromResultSet
[m[32m07.11.2021 - 16:18:37.813 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getBigDecimalFromResultSet.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#getBigDecimalFromResultSet
[m[m07.11.2021 - 16:18:38.111 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:38.112 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getBigDecimalFromResultSet.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getBigDecimalFromResultSet/report.xml
[m[m07.11.2021 - 16:18:38.370 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#getBigDecimalFromResultSet was generated successfully
[m[m07.11.2021 - 16:18:38.370 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 212/281
[m[m07.11.2021 - 16:18:38.370 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#issue121ConvertingNaNForDoubleOrFloat
[m[32m07.11.2021 - 16:18:38.370 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#issue121ConvertingNaNForDoubleOrFloat.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#issue121ConvertingNaNForDoubleOrFloat
[m[m07.11.2021 - 16:18:38.703 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:38.703 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#issue121ConvertingNaNForDoubleOrFloat.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#issue121ConvertingNaNForDoubleOrFloat/report.xml
[m[m07.11.2021 - 16:18:39.001 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#issue121ConvertingNaNForDoubleOrFloat was generated successfully
[m[m07.11.2021 - 16:18:39.001 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 213/281
[m[m07.11.2021 - 16:18:39.001 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#issue121ConvertingPositiveInfinityForDoubleOrFloat
[m[32m07.11.2021 - 16:18:39.001 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#issue121ConvertingPositiveInfinityForDoubleOrFloat.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#issue121ConvertingPositiveInfinityForDoubleOrFloat
[m[m07.11.2021 - 16:18:39.295 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:39.295 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#issue121ConvertingPositiveInfinityForDoubleOrFloat.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#issue121ConvertingPositiveInfinityForDoubleOrFloat/report.xml
[m[m07.11.2021 - 16:18:39.582 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#issue121ConvertingPositiveInfinityForDoubleOrFloat was generated successfully
[m[m07.11.2021 - 16:18:39.583 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 214/281
[m[m07.11.2021 - 16:18:39.583 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#issue121ConvertingNegativeInfinityForDoubleOrFloat
[m[32m07.11.2021 - 16:18:39.583 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#issue121ConvertingNegativeInfinityForDoubleOrFloat.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#issue121ConvertingNegativeInfinityForDoubleOrFloat
[m[m07.11.2021 - 16:18:39.908 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:39.908 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#issue121ConvertingNegativeInfinityForDoubleOrFloat.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#issue121ConvertingNegativeInfinityForDoubleOrFloat/report.xml
[m[m07.11.2021 - 16:18:40.166 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#issue121ConvertingNegativeInfinityForDoubleOrFloat was generated successfully
[m[m07.11.2021 - 16:18:40.166 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 215/281
[m[m07.11.2021 - 16:18:40.166 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#getIntegerFromResultSet
[m[32m07.11.2021 - 16:18:40.166 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getIntegerFromResultSet.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#getIntegerFromResultSet
[m[m07.11.2021 - 16:18:40.508 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:40.508 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getIntegerFromResultSet.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getIntegerFromResultSet/report.xml
[m[m07.11.2021 - 16:18:40.775 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#getIntegerFromResultSet was generated successfully
[m[m07.11.2021 - 16:18:40.775 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 216/281
[m[m07.11.2021 - 16:18:40.775 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#getCharFromResultSet
[m[32m07.11.2021 - 16:18:40.775 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getCharFromResultSet.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#getCharFromResultSet
[m[m07.11.2021 - 16:18:41.088 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:41.088 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getCharFromResultSet.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getCharFromResultSet/report.xml
[m[m07.11.2021 - 16:18:41.343 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#getCharFromResultSet was generated successfully
[m[m07.11.2021 - 16:18:41.344 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 217/281
[m[m07.11.2021 - 16:18:41.344 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#getCharHandlesNulls
[m[32m07.11.2021 - 16:18:41.344 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getCharHandlesNulls.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#getCharHandlesNulls
[m[m07.11.2021 - 16:18:41.652 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:41.652 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getCharHandlesNulls.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getCharHandlesNulls/report.xml
[m[m07.11.2021 - 16:18:41.910 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#getCharHandlesNulls was generated successfully
[m[m07.11.2021 - 16:18:41.910 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 218/281
[m[m07.11.2021 - 16:18:41.910 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#getUnsupportedFromResultSet
[m[32m07.11.2021 - 16:18:41.910 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getUnsupportedFromResultSet.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#getUnsupportedFromResultSet
[m[m07.11.2021 - 16:18:42.227 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:42.228 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getUnsupportedFromResultSet.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getUnsupportedFromResultSet/report.xml
[m[m07.11.2021 - 16:18:42.485 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#getUnsupportedFromResultSet was generated successfully
[m[m07.11.2021 - 16:18:42.486 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 219/281
[m[m07.11.2021 - 16:18:42.486 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#getDateFromResultSet
[m[32m07.11.2021 - 16:18:42.486 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getDateFromResultSet.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#getDateFromResultSet
[m[m07.11.2021 - 16:18:42.901 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:42.901 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getDateFromResultSet.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getDateFromResultSet/report.xml
[m[m07.11.2021 - 16:18:43.140 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#getDateFromResultSet was generated successfully
[m[m07.11.2021 - 16:18:43.140 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 220/281
[m[m07.11.2021 - 16:18:43.140 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#getDateFromResultSetUsingCustomFormat
[m[32m07.11.2021 - 16:18:43.140 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getDateFromResultSetUsingCustomFormat.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#getDateFromResultSetUsingCustomFormat
[m[m07.11.2021 - 16:18:43.470 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:43.471 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getDateFromResultSetUsingCustomFormat.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getDateFromResultSetUsingCustomFormat/report.xml
[m[m07.11.2021 - 16:18:43.710 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#getDateFromResultSetUsingCustomFormat was generated successfully
[m[m07.11.2021 - 16:18:43.710 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 221/281
[m[m07.11.2021 - 16:18:43.710 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#setDateFormat
[m[32m07.11.2021 - 16:18:43.710 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#setDateFormat.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#setDateFormat
[m[m07.11.2021 - 16:18:44.032 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:44.032 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#setDateFormat.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#setDateFormat/report.xml
[m[m07.11.2021 - 16:18:44.313 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#setDateFormat was generated successfully
[m[m07.11.2021 - 16:18:44.314 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 222/281
[m[m07.11.2021 - 16:18:44.314 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#getTimeFromResultSet
[m[32m07.11.2021 - 16:18:44.314 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getTimeFromResultSet.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#getTimeFromResultSet
[m[m07.11.2021 - 16:18:44.649 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:44.649 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getTimeFromResultSet.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getTimeFromResultSet/report.xml
[m[m07.11.2021 - 16:18:44.899 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#getTimeFromResultSet was generated successfully
[m[m07.11.2021 - 16:18:44.900 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 223/281
[m[m07.11.2021 - 16:18:44.900 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#getTimestampFromResultSet
[m[32m07.11.2021 - 16:18:44.900 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getTimestampFromResultSet.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#getTimestampFromResultSet
[m[m07.11.2021 - 16:18:45.222 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:45.222 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getTimestampFromResultSet.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getTimestampFromResultSet/report.xml
[m[m07.11.2021 - 16:18:45.498 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#getTimestampFromResultSet was generated successfully
[m[m07.11.2021 - 16:18:45.498 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 224/281
[m[m07.11.2021 - 16:18:45.498 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#getTimestampFromResultSetWithCustomFormat
[m[32m07.11.2021 - 16:18:45.499 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getTimestampFromResultSetWithCustomFormat.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#getTimestampFromResultSetWithCustomFormat
[m[m07.11.2021 - 16:18:45.818 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:45.819 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getTimestampFromResultSetWithCustomFormat.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getTimestampFromResultSetWithCustomFormat/report.xml
[m[m07.11.2021 - 16:18:46.071 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#getTimestampFromResultSetWithCustomFormat was generated successfully
[m[m07.11.2021 - 16:18:46.072 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 225/281
[m[m07.11.2021 - 16:18:46.072 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#setDateTimeFormat
[m[32m07.11.2021 - 16:18:46.072 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#setDateTimeFormat.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#setDateTimeFormat
[m[m07.11.2021 - 16:18:46.412 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:46.412 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#setDateTimeFormat.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#setDateTimeFormat/report.xml
[m[m07.11.2021 - 16:18:46.654 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#setDateTimeFormat was generated successfully
[m[m07.11.2021 - 16:18:46.654 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 226/281
[m[m07.11.2021 - 16:18:46.654 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#getClobFromResultSet
[m[32m07.11.2021 - 16:18:46.654 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getClobFromResultSet.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#getClobFromResultSet
[m[m07.11.2021 - 16:18:46.991 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:46.992 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getClobFromResultSet.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getClobFromResultSet/report.xml
[m[m07.11.2021 - 16:18:47.249 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#getClobFromResultSet was generated successfully
[m[m07.11.2021 - 16:18:47.250 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 227/281
[m[m07.11.2021 - 16:18:47.250 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#getEmptyClobFromResultSet
[m[32m07.11.2021 - 16:18:47.250 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getEmptyClobFromResultSet.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#getEmptyClobFromResultSet
[m[m07.11.2021 - 16:18:47.573 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:47.573 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getEmptyClobFromResultSet.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getEmptyClobFromResultSet/report.xml
[m[m07.11.2021 - 16:18:47.815 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#getEmptyClobFromResultSet was generated successfully
[m[m07.11.2021 - 16:18:47.815 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 228/281
[m[m07.11.2021 - 16:18:47.815 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetHelperServiceTest#getLargeClobFromResultSet
[m[32m07.11.2021 - 16:18:47.815 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getLargeClobFromResultSet.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetHelperServiceTest#getLargeClobFromResultSet
[m[m07.11.2021 - 16:18:48.151 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:48.151 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getLargeClobFromResultSet.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetHelperServiceTest#getLargeClobFromResultSet/report.xml
[m[m07.11.2021 - 16:18:48.421 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.ResultSetHelperServiceTest#getLargeClobFromResultSet was generated successfully
[m[m07.11.2021 - 16:18:48.421 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 229/281
[m[m07.11.2021 - 16:18:48.421 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.UniCodeTest#canParseUnicode
[m[32m07.11.2021 - 16:18:48.421 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.UniCodeTest#canParseUnicode.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.UniCodeTest#canParseUnicode
[m[m07.11.2021 - 16:18:48.638 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:48.639 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.UniCodeTest#canParseUnicode.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.UniCodeTest#canParseUnicode/report.xml
[m[m07.11.2021 - 16:18:48.915 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.UniCodeTest#canParseUnicode was generated successfully
[m[m07.11.2021 - 16:18:48.916 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 230/281
[m[m07.11.2021 - 16:18:48.916 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.UniCodeTest#readerTest
[m[32m07.11.2021 - 16:18:48.916 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.UniCodeTest#readerTest.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.UniCodeTest#readerTest
[m[m07.11.2021 - 16:18:49.121 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:49.121 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.UniCodeTest#readerTest.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.UniCodeTest#readerTest/report.xml
[m[m07.11.2021 - 16:18:49.372 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.UniCodeTest#readerTest was generated successfully
[m[m07.11.2021 - 16:18:49.373 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 231/281
[m[m07.11.2021 - 16:18:49.373 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.UniCodeTest#writerTest
[m[32m07.11.2021 - 16:18:49.373 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.UniCodeTest#writerTest.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.UniCodeTest#writerTest
[m[m07.11.2021 - 16:18:49.569 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:49.569 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.UniCodeTest#writerTest.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.UniCodeTest#writerTest/report.xml
[m[m07.11.2021 - 16:18:49.823 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.UniCodeTest#writerTest was generated successfully
[m[m07.11.2021 - 16:18:49.823 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 232/281
[m[m07.11.2021 - 16:18:49.823 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.UniCodeTest#runUniCodeThroughCSVReader
[m[32m07.11.2021 - 16:18:49.823 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.UniCodeTest#runUniCodeThroughCSVReader.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.UniCodeTest#runUniCodeThroughCSVReader
[m[m07.11.2021 - 16:18:50.023 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:50.023 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.UniCodeTest#runUniCodeThroughCSVReader.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.UniCodeTest#runUniCodeThroughCSVReader/report.xml
[m[m07.11.2021 - 16:18:50.278 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.UniCodeTest#runUniCodeThroughCSVReader was generated successfully
[m[m07.11.2021 - 16:18:50.278 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 233/281
[m[m07.11.2021 - 16:18:50.278 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.UniCodeTest#runUniCodeThroughCSVWriter
[m[32m07.11.2021 - 16:18:50.278 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.UniCodeTest#runUniCodeThroughCSVWriter.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.UniCodeTest#runUniCodeThroughCSVWriter
[m[m07.11.2021 - 16:18:50.479 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:50.479 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.UniCodeTest#runUniCodeThroughCSVWriter.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.UniCodeTest#runUniCodeThroughCSVWriter/report.xml
[m[m07.11.2021 - 16:18:50.731 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.UniCodeTest#runUniCodeThroughCSVWriter was generated successfully
[m[m07.11.2021 - 16:18:50.731 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 234/281
[m[m07.11.2021 - 16:18:50.731 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.UniCodeTest#runASCIIThroughCSVWriter
[m[32m07.11.2021 - 16:18:50.731 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.UniCodeTest#runASCIIThroughCSVWriter.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.UniCodeTest#runASCIIThroughCSVWriter
[m[m07.11.2021 - 16:18:50.930 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:50.930 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.UniCodeTest#runASCIIThroughCSVWriter.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.UniCodeTest#runASCIIThroughCSVWriter/report.xml
[m[m07.11.2021 - 16:18:51.193 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.UniCodeTest#runASCIIThroughCSVWriter was generated successfully
[m[m07.11.2021 - 16:18:51.194 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 235/281
[m[m07.11.2021 - 16:18:51.194 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.UniCodeTest#writeThenReadAscii
[m[32m07.11.2021 - 16:18:51.194 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.UniCodeTest#writeThenReadAscii.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.UniCodeTest#writeThenReadAscii
[m[m07.11.2021 - 16:18:51.374 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:51.374 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.UniCodeTest#writeThenReadAscii.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.UniCodeTest#writeThenReadAscii/report.xml
[m[m07.11.2021 - 16:18:51.631 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.UniCodeTest#writeThenReadAscii was generated successfully
[m[m07.11.2021 - 16:18:51.631 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 236/281
[m[m07.11.2021 - 16:18:51.631 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.UniCodeTest#writeThenReadTwiceAscii
[m[32m07.11.2021 - 16:18:51.631 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.UniCodeTest#writeThenReadTwiceAscii.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.UniCodeTest#writeThenReadTwiceAscii
[m[m07.11.2021 - 16:18:51.848 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:51.848 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.UniCodeTest#writeThenReadTwiceAscii.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.UniCodeTest#writeThenReadTwiceAscii/report.xml
[m[m07.11.2021 - 16:18:52.097 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.UniCodeTest#writeThenReadTwiceAscii was generated successfully
[m[m07.11.2021 - 16:18:52.098 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 237/281
[m[m07.11.2021 - 16:18:52.098 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.UniCodeTest#writeThenReadTwiceUnicode
[m[32m07.11.2021 - 16:18:52.098 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.UniCodeTest#writeThenReadTwiceUnicode.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.UniCodeTest#writeThenReadTwiceUnicode
[m[m07.11.2021 - 16:18:52.306 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:52.306 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.UniCodeTest#writeThenReadTwiceUnicode.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.UniCodeTest#writeThenReadTwiceUnicode/report.xml
[m[m07.11.2021 - 16:18:52.544 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.UniCodeTest#writeThenReadTwiceUnicode was generated successfully
[m[m07.11.2021 - 16:18:52.544 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 238/281
[m[m07.11.2021 - 16:18:52.544 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.UniCodeTest#writeThenReadTwiceMixedUnicode
[m[32m07.11.2021 - 16:18:52.544 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.UniCodeTest#writeThenReadTwiceMixedUnicode.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.UniCodeTest#writeThenReadTwiceMixedUnicode
[m[m07.11.2021 - 16:18:52.755 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:52.756 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.UniCodeTest#writeThenReadTwiceMixedUnicode.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.UniCodeTest#writeThenReadTwiceMixedUnicode/report.xml
[m[m07.11.2021 - 16:18:53.076 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.UniCodeTest#writeThenReadTwiceMixedUnicode was generated successfully
[m[m07.11.2021 - 16:18:53.076 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 239/281
[m[m07.11.2021 - 16:18:53.076 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserBuilderTest#testDefaultBuilder
[m[32m07.11.2021 - 16:18:53.077 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserBuilderTest#testDefaultBuilder.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserBuilderTest#testDefaultBuilder
[m[m07.11.2021 - 16:18:53.300 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:53.301 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserBuilderTest#testDefaultBuilder.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserBuilderTest#testDefaultBuilder/report.xml
[m[m07.11.2021 - 16:18:53.553 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserBuilderTest#testDefaultBuilder was generated successfully
[m[m07.11.2021 - 16:18:53.553 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 240/281
[m[m07.11.2021 - 16:18:53.553 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserBuilderTest#testWithSeparator
[m[32m07.11.2021 - 16:18:53.553 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserBuilderTest#testWithSeparator.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserBuilderTest#testWithSeparator
[m[m07.11.2021 - 16:18:53.754 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:53.754 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserBuilderTest#testWithSeparator.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserBuilderTest#testWithSeparator/report.xml
[m[m07.11.2021 - 16:18:54.043 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserBuilderTest#testWithSeparator was generated successfully
[m[m07.11.2021 - 16:18:54.043 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 241/281
[m[m07.11.2021 - 16:18:54.043 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserBuilderTest#testWithQuoteChar
[m[32m07.11.2021 - 16:18:54.043 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserBuilderTest#testWithQuoteChar.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserBuilderTest#testWithQuoteChar
[m[m07.11.2021 - 16:18:54.254 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:54.254 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserBuilderTest#testWithQuoteChar.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserBuilderTest#testWithQuoteChar/report.xml
[m[m07.11.2021 - 16:18:54.524 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserBuilderTest#testWithQuoteChar was generated successfully
[m[m07.11.2021 - 16:18:54.524 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 242/281
[m[m07.11.2021 - 16:18:54.524 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserBuilderTest#testWithEscapeChar
[m[32m07.11.2021 - 16:18:54.524 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserBuilderTest#testWithEscapeChar.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserBuilderTest#testWithEscapeChar
[m[m07.11.2021 - 16:18:54.731 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:54.731 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserBuilderTest#testWithEscapeChar.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserBuilderTest#testWithEscapeChar/report.xml
[m[m07.11.2021 - 16:18:54.997 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserBuilderTest#testWithEscapeChar was generated successfully
[m[m07.11.2021 - 16:18:54.997 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 243/281
[m[m07.11.2021 - 16:18:54.997 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserBuilderTest#testWithStrictQuotes
[m[32m07.11.2021 - 16:18:54.997 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserBuilderTest#testWithStrictQuotes.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserBuilderTest#testWithStrictQuotes
[m[m07.11.2021 - 16:18:55.203 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:55.203 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserBuilderTest#testWithStrictQuotes.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserBuilderTest#testWithStrictQuotes/report.xml
[m[m07.11.2021 - 16:18:55.473 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserBuilderTest#testWithStrictQuotes was generated successfully
[m[m07.11.2021 - 16:18:55.474 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 244/281
[m[m07.11.2021 - 16:18:55.474 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserBuilderTest#testWithIgnoreLeadingWhiteSpace
[m[32m07.11.2021 - 16:18:55.474 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserBuilderTest#testWithIgnoreLeadingWhiteSpace.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserBuilderTest#testWithIgnoreLeadingWhiteSpace
[m[m07.11.2021 - 16:18:55.673 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:55.673 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserBuilderTest#testWithIgnoreLeadingWhiteSpace.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserBuilderTest#testWithIgnoreLeadingWhiteSpace/report.xml
[m[m07.11.2021 - 16:18:55.930 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserBuilderTest#testWithIgnoreLeadingWhiteSpace was generated successfully
[m[m07.11.2021 - 16:18:55.930 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 245/281
[m[m07.11.2021 - 16:18:55.930 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.CSVParserBuilderTest#testWithIgnoreQuotations
[m[32m07.11.2021 - 16:18:55.930 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserBuilderTest#testWithIgnoreQuotations.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.CSVParserBuilderTest#testWithIgnoreQuotations
[m[m07.11.2021 - 16:18:56.127 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:56.127 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserBuilderTest#testWithIgnoreQuotations.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.CSVParserBuilderTest#testWithIgnoreQuotations/report.xml
[m[m07.11.2021 - 16:18:56.362 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.CSVParserBuilderTest#testWithIgnoreQuotations was generated successfully
[m[m07.11.2021 - 16:18:56.362 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 246/281
[m[m07.11.2021 - 16:18:56.362 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndexBeforeMappingSetReturnsNull
[m[32m07.11.2021 - 16:18:56.362 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndexBeforeMappingSetReturnsNull.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndexBeforeMappingSetReturnsNull
[m[m07.11.2021 - 16:18:56.580 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:56.580 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndexBeforeMappingSetReturnsNull.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndexBeforeMappingSetReturnsNull/report.xml
[m[m07.11.2021 - 16:18:56.872 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndexBeforeMappingSetReturnsNull was generated successfully
[m[m07.11.2021 - 16:18:56.872 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 247/281
[m[m07.11.2021 - 16:18:56.872 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndexEmptyMappingReturnsNull
[m[32m07.11.2021 - 16:18:56.872 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndexEmptyMappingReturnsNull.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndexEmptyMappingReturnsNull
[m[m07.11.2021 - 16:18:57.077 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:57.077 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndexEmptyMappingReturnsNull.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndexEmptyMappingReturnsNull/report.xml
[m[m07.11.2021 - 16:18:57.323 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndexEmptyMappingReturnsNull was generated successfully
[m[m07.11.2021 - 16:18:57.323 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 248/281
[m[m07.11.2021 - 16:18:57.323 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndex
[m[32m07.11.2021 - 16:18:57.323 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndex.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndex
[m[m07.11.2021 - 16:18:57.517 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:57.517 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndex.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndex/report.xml
[m[m07.11.2021 - 16:18:57.788 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndex was generated successfully
[m[m07.11.2021 - 16:18:57.788 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 249/281
[m[m07.11.2021 - 16:18:57.789 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.ColumnPositionMappingStrategyTest#testParse
[m[32m07.11.2021 - 16:18:57.789 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#testParse.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.ColumnPositionMappingStrategyTest#testParse
[m[m07.11.2021 - 16:18:58.041 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:58.041 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#testParse.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#testParse/report.xml
[m[m07.11.2021 - 16:18:58.295 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.ColumnPositionMappingStrategyTest#testParse was generated successfully
[m[m07.11.2021 - 16:18:58.295 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 250/281
[m[m07.11.2021 - 16:18:58.295 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.ColumnPositionMappingStrategyTest#testParseWithTrailingSpaces
[m[32m07.11.2021 - 16:18:58.295 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#testParseWithTrailingSpaces.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.ColumnPositionMappingStrategyTest#testParseWithTrailingSpaces
[m[m07.11.2021 - 16:18:58.563 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:58.564 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#testParseWithTrailingSpaces.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#testParseWithTrailingSpaces/report.xml
[m[m07.11.2021 - 16:18:58.802 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.ColumnPositionMappingStrategyTest#testParseWithTrailingSpaces was generated successfully
[m[m07.11.2021 - 16:18:58.802 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 251/281
[m[m07.11.2021 - 16:18:58.802 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnMapping
[m[32m07.11.2021 - 16:18:58.802 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnMapping.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnMapping
[m[m07.11.2021 - 16:18:59.016 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:59.017 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnMapping.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnMapping/report.xml
[m[m07.11.2021 - 16:18:59.261 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnMapping was generated successfully
[m[m07.11.2021 - 16:18:59.261 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 252/281
[m[m07.11.2021 - 16:18:59.261 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnNames
[m[32m07.11.2021 - 16:18:59.261 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnNames.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnNames
[m[m07.11.2021 - 16:18:59.458 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:59.458 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnNames.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnNames/report.xml
[m[m07.11.2021 - 16:18:59.716 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnNames was generated successfully
[m[m07.11.2021 - 16:18:59.716 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 253/281
[m[m07.11.2021 - 16:18:59.716 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnNamesArray
[m[32m07.11.2021 - 16:18:59.716 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnNamesArray.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnNamesArray
[m[m07.11.2021 - 16:18:59.911 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:18:59.911 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnNamesArray.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnNamesArray/report.xml
[m[m07.11.2021 - 16:19:00.150 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnNamesArray was generated successfully
[m[m07.11.2021 - 16:19:00.150 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 254/281
[m[m07.11.2021 - 16:19:00.150 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenNullArray
[m[32m07.11.2021 - 16:19:00.150 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenNullArray.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenNullArray
[m[m07.11.2021 - 16:19:00.360 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:19:00.360 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenNullArray.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenNullArray/report.xml
[m[m07.11.2021 - 16:19:00.597 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenNullArray was generated successfully
[m[m07.11.2021 - 16:19:00.597 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 255/281
[m[m07.11.2021 - 16:19:00.597 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenNullColumnName
[m[32m07.11.2021 - 16:19:00.597 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenNullColumnName.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenNullColumnName
[m[m07.11.2021 - 16:19:00.790 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:19:00.791 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenNullColumnName.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenNullColumnName/report.xml
[m[m07.11.2021 - 16:19:01.041 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenNullColumnName was generated successfully
[m[m07.11.2021 - 16:19:01.041 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 256/281
[m[m07.11.2021 - 16:19:01.041 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenEmptyMapping
[m[32m07.11.2021 - 16:19:01.041 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenEmptyMapping.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenEmptyMapping
[m[m07.11.2021 - 16:19:01.253 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:19:01.254 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenEmptyMapping.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenEmptyMapping/report.xml
[m[m07.11.2021 - 16:19:01.523 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenEmptyMapping was generated successfully
[m[m07.11.2021 - 16:19:01.523 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 257/281
[m[m07.11.2021 - 16:19:01.523 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.bean.ColumnPositionMappingStrategyTest#throwsIllegalStateExceptionIfTypeNotSet
[m[32m07.11.2021 - 16:19:01.523 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#throwsIllegalStateExceptionIfTypeNotSet.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.bean.ColumnPositionMappingStrategyTest#throwsIllegalStateExceptionIfTypeNotSet
[m[m07.11.2021 - 16:19:01.735 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:19:01.735 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#throwsIllegalStateExceptionIfTypeNotSet.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.bean.ColumnPositionMappingStrategyTest#throwsIllegalStateExceptionIfTypeNotSet/report.xml
[m[m07.11.2021 - 16:19:01.982 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.bean.ColumnPositionMappingStrategyTest#throwsIllegalStateExceptionIfTypeNotSet was generated successfully
[m[m07.11.2021 - 16:19:01.982 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 258/281
[m[m07.11.2021 - 16:19:01.982 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetColumnNameHelperServiceTest#canPrintColumnNames
[m[32m07.11.2021 - 16:19:01.982 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#canPrintColumnNames.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetColumnNameHelperServiceTest#canPrintColumnNames
[m[m07.11.2021 - 16:19:02.269 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:19:02.270 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#canPrintColumnNames.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#canPrintColumnNames/report.xml
[m[m07.11.2021 - 16:19:02.534 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.ResultSetColumnNameHelperServiceTest#canPrintColumnNames was generated successfully
[m[m07.11.2021 - 16:19:02.534 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 259/281
[m[m07.11.2021 - 16:19:02.534 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetColumnNameHelperServiceTest#setColumnNames
[m[32m07.11.2021 - 16:19:02.534 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#setColumnNames.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetColumnNameHelperServiceTest#setColumnNames
[m[m07.11.2021 - 16:19:02.857 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:19:02.858 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#setColumnNames.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#setColumnNames/report.xml
[m[m07.11.2021 - 16:19:03.110 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.ResultSetColumnNameHelperServiceTest#setColumnNames was generated successfully
[m[m07.11.2021 - 16:19:03.110 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 260/281
[m[m07.11.2021 - 16:19:03.110 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetColumnNameHelperServiceTest#getColumnNamesWithSubsetOutOfOrder
[m[32m07.11.2021 - 16:19:03.111 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getColumnNamesWithSubsetOutOfOrder.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetColumnNameHelperServiceTest#getColumnNamesWithSubsetOutOfOrder
[m[m07.11.2021 - 16:19:03.423 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:19:03.423 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getColumnNamesWithSubsetOutOfOrder.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getColumnNamesWithSubsetOutOfOrder/report.xml
[m[m07.11.2021 - 16:19:03.679 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.ResultSetColumnNameHelperServiceTest#getColumnNamesWithSubsetOutOfOrder was generated successfully
[m[m07.11.2021 - 16:19:03.679 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 261/281
[m[m07.11.2021 - 16:19:03.679 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetColumnNameHelperServiceTest#numberOfColumnsNamesMustMatchNumberOfHeaders
[m[32m07.11.2021 - 16:19:03.679 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#numberOfColumnsNamesMustMatchNumberOfHeaders.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetColumnNameHelperServiceTest#numberOfColumnsNamesMustMatchNumberOfHeaders
[m[m07.11.2021 - 16:19:03.861 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:19:03.861 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#numberOfColumnsNamesMustMatchNumberOfHeaders.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#numberOfColumnsNamesMustMatchNumberOfHeaders/report.xml
[m[m07.11.2021 - 16:19:04.148 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.ResultSetColumnNameHelperServiceTest#numberOfColumnsNamesMustMatchNumberOfHeaders was generated successfully
[m[m07.11.2021 - 16:19:04.149 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 262/281
[m[m07.11.2021 - 16:19:04.149 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveNullColumnName
[m[32m07.11.2021 - 16:19:04.149 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveNullColumnName.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveNullColumnName
[m[m07.11.2021 - 16:19:04.358 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:19:04.359 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveNullColumnName.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveNullColumnName/report.xml
[m[m07.11.2021 - 16:19:04.649 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveNullColumnName was generated successfully
[m[m07.11.2021 - 16:19:04.649 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 263/281
[m[m07.11.2021 - 16:19:04.649 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveEmptyColumnName
[m[32m07.11.2021 - 16:19:04.649 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveEmptyColumnName.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveEmptyColumnName
[m[m07.11.2021 - 16:19:04.855 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:19:04.856 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveEmptyColumnName.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveEmptyColumnName/report.xml
[m[m07.11.2021 - 16:19:05.092 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveEmptyColumnName was generated successfully
[m[m07.11.2021 - 16:19:05.092 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 264/281
[m[m07.11.2021 - 16:19:05.092 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveSpaceColumnName
[m[32m07.11.2021 - 16:19:05.093 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveSpaceColumnName.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveSpaceColumnName
[m[m07.11.2021 - 16:19:05.296 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:19:05.296 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveSpaceColumnName.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveSpaceColumnName/report.xml
[m[m07.11.2021 - 16:19:05.553 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveSpaceColumnName was generated successfully
[m[m07.11.2021 - 16:19:05.553 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 265/281
[m[m07.11.2021 - 16:19:05.554 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveNullHeaderName
[m[32m07.11.2021 - 16:19:05.554 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveNullHeaderName.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveNullHeaderName
[m[m07.11.2021 - 16:19:05.768 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:19:05.768 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveNullHeaderName.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveNullHeaderName/report.xml
[m[m07.11.2021 - 16:19:06.023 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveNullHeaderName was generated successfully
[m[m07.11.2021 - 16:19:06.023 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 266/281
[m[m07.11.2021 - 16:19:06.023 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveEmptyHeaderName
[m[32m07.11.2021 - 16:19:06.023 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveEmptyHeaderName.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveEmptyHeaderName
[m[m07.11.2021 - 16:19:06.237 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:19:06.237 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveEmptyHeaderName.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveEmptyHeaderName/report.xml
[m[m07.11.2021 - 16:19:06.488 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveEmptyHeaderName was generated successfully
[m[m07.11.2021 - 16:19:06.488 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 267/281
[m[m07.11.2021 - 16:19:06.488 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveSpaceHeaderName
[m[32m07.11.2021 - 16:19:06.488 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveSpaceHeaderName.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveSpaceHeaderName
[m[m07.11.2021 - 16:19:06.676 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:19:06.676 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveSpaceHeaderName.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveSpaceHeaderName/report.xml
[m[m07.11.2021 - 16:19:06.928 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveSpaceHeaderName was generated successfully
[m[m07.11.2021 - 16:19:06.928 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 268/281
[m[m07.11.2021 - 16:19:06.928 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetColumnNameHelperServiceTest#getColumnNamesThrowsExceptionIfColumnDoesNotExist
[m[32m07.11.2021 - 16:19:06.928 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getColumnNamesThrowsExceptionIfColumnDoesNotExist.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetColumnNameHelperServiceTest#getColumnNamesThrowsExceptionIfColumnDoesNotExist
[m[m07.11.2021 - 16:19:07.236 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:19:07.237 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getColumnNamesThrowsExceptionIfColumnDoesNotExist.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getColumnNamesThrowsExceptionIfColumnDoesNotExist/report.xml
[m[m07.11.2021 - 16:19:07.496 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.ResultSetColumnNameHelperServiceTest#getColumnNamesThrowsExceptionIfColumnDoesNotExist was generated successfully
[m[m07.11.2021 - 16:19:07.496 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 269/281
[m[m07.11.2021 - 16:19:07.496 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetColumnNameHelperServiceTest#getBooleanFromResultSet
[m[32m07.11.2021 - 16:19:07.497 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getBooleanFromResultSet.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetColumnNameHelperServiceTest#getBooleanFromResultSet
[m[m07.11.2021 - 16:19:07.804 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:19:07.804 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getBooleanFromResultSet.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getBooleanFromResultSet/report.xml
[m[m07.11.2021 - 16:19:08.057 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.ResultSetColumnNameHelperServiceTest#getBooleanFromResultSet was generated successfully
[m[m07.11.2021 - 16:19:08.057 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 270/281
[m[m07.11.2021 - 16:19:08.058 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetColumnNameHelperServiceTest#getBooleanSubsetFromResultSet
[m[32m07.11.2021 - 16:19:08.058 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getBooleanSubsetFromResultSet.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetColumnNameHelperServiceTest#getBooleanSubsetFromResultSet
[m[m07.11.2021 - 16:19:08.384 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:19:08.384 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getBooleanSubsetFromResultSet.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getBooleanSubsetFromResultSet/report.xml
[m[m07.11.2021 - 16:19:08.653 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.ResultSetColumnNameHelperServiceTest#getBooleanSubsetFromResultSet was generated successfully
[m[m07.11.2021 - 16:19:08.654 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 271/281
[m[m07.11.2021 - 16:19:08.654 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetColumnNameHelperServiceTest#getSubsetWithTrim
[m[32m07.11.2021 - 16:19:08.654 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getSubsetWithTrim.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetColumnNameHelperServiceTest#getSubsetWithTrim
[m[m07.11.2021 - 16:19:08.986 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:19:08.986 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getSubsetWithTrim.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getSubsetWithTrim/report.xml
[m[m07.11.2021 - 16:19:09.236 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.ResultSetColumnNameHelperServiceTest#getSubsetWithTrim was generated successfully
[m[m07.11.2021 - 16:19:09.236 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 272/281
[m[m07.11.2021 - 16:19:09.236 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetColumnNameHelperServiceTest#getCharSetWithNullAndTrim
[m[32m07.11.2021 - 16:19:09.236 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getCharSetWithNullAndTrim.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetColumnNameHelperServiceTest#getCharSetWithNullAndTrim
[m[m07.11.2021 - 16:19:09.544 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:19:09.544 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getCharSetWithNullAndTrim.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getCharSetWithNullAndTrim/report.xml
[m[m07.11.2021 - 16:19:09.804 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.ResultSetColumnNameHelperServiceTest#getCharSetWithNullAndTrim was generated successfully
[m[m07.11.2021 - 16:19:09.804 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 273/281
[m[m07.11.2021 - 16:19:09.804 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetColumnNameHelperServiceTest#getTimestampFromResultSetWithCustomFormat
[m[32m07.11.2021 - 16:19:09.804 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getTimestampFromResultSetWithCustomFormat.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetColumnNameHelperServiceTest#getTimestampFromResultSetWithCustomFormat
[m[m07.11.2021 - 16:19:10.136 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:19:10.136 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getTimestampFromResultSetWithCustomFormat.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getTimestampFromResultSetWithCustomFormat/report.xml
[m[m07.11.2021 - 16:19:10.381 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.ResultSetColumnNameHelperServiceTest#getTimestampFromResultSetWithCustomFormat was generated successfully
[m[m07.11.2021 - 16:19:10.381 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 274/281
[m[m07.11.2021 - 16:19:10.381 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.ResultSetColumnNameHelperServiceTest#getSubsetFromResultSetWithCustomFormat
[m[32m07.11.2021 - 16:19:10.381 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getSubsetFromResultSetWithCustomFormat.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.ResultSetColumnNameHelperServiceTest#getSubsetFromResultSetWithCustomFormat
[m[m07.11.2021 - 16:19:10.736 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:19:10.737 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getSubsetFromResultSetWithCustomFormat.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.ResultSetColumnNameHelperServiceTest#getSubsetFromResultSetWithCustomFormat/report.xml
[m[m07.11.2021 - 16:19:10.993 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.ResultSetColumnNameHelperServiceTest#getSubsetFromResultSetWithCustomFormat was generated successfully
[m[m07.11.2021 - 16:19:10.994 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 275/281
[m[m07.11.2021 - 16:19:10.994 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase integrationTest.SR34.SR34Test#defaultReaderInterpetsNullCorrectly
[m[32m07.11.2021 - 16:19:10.994 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/integrationTest.SR34.SR34Test#defaultReaderInterpetsNullCorrectly.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner integrationTest.SR34.SR34Test#defaultReaderInterpetsNullCorrectly
[m[m07.11.2021 - 16:19:11.182 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:19:11.182 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/integrationTest.SR34.SR34Test#defaultReaderInterpetsNullCorrectly.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/integrationTest.SR34.SR34Test#defaultReaderInterpetsNullCorrectly/report.xml
[m[m07.11.2021 - 16:19:11.438 [INFO ] MethodCoverageStrategy.createReport() - Report for integrationTest.SR34.SR34Test#defaultReaderInterpetsNullCorrectly was generated successfully
[m[m07.11.2021 - 16:19:11.438 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 276/281
[m[m07.11.2021 - 16:19:11.438 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase integrationTest.SR34.SR34Test#doubleBufferedReaderInterpetsNullCorrectly
[m[32m07.11.2021 - 16:19:11.438 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/integrationTest.SR34.SR34Test#doubleBufferedReaderInterpetsNullCorrectly.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner integrationTest.SR34.SR34Test#doubleBufferedReaderInterpetsNullCorrectly
[m[m07.11.2021 - 16:19:11.638 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:19:11.639 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/integrationTest.SR34.SR34Test#doubleBufferedReaderInterpetsNullCorrectly.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/integrationTest.SR34.SR34Test#doubleBufferedReaderInterpetsNullCorrectly/report.xml
[m[m07.11.2021 - 16:19:11.920 [INFO ] MethodCoverageStrategy.createReport() - Report for integrationTest.SR34.SR34Test#doubleBufferedReaderInterpetsNullCorrectly was generated successfully
[m[m07.11.2021 - 16:19:11.920 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 277/281
[m[m07.11.2021 - 16:19:11.920 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase integrationTest.SR34.SR34Test#usingNullAsDelimeterWillFailBecauseYouAreEscapingTheQuote
[m[32m07.11.2021 - 16:19:11.920 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/integrationTest.SR34.SR34Test#usingNullAsDelimeterWillFailBecauseYouAreEscapingTheQuote.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner integrationTest.SR34.SR34Test#usingNullAsDelimeterWillFailBecauseYouAreEscapingTheQuote
[m[m07.11.2021 - 16:19:12.115 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:19:12.115 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/integrationTest.SR34.SR34Test#usingNullAsDelimeterWillFailBecauseYouAreEscapingTheQuote.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/integrationTest.SR34.SR34Test#usingNullAsDelimeterWillFailBecauseYouAreEscapingTheQuote/report.xml
[m[m07.11.2021 - 16:19:12.371 [INFO ] MethodCoverageStrategy.createReport() - Report for integrationTest.SR34.SR34Test#usingNullAsDelimeterWillFailBecauseYouAreEscapingTheQuote was generated successfully
[m[m07.11.2021 - 16:19:12.372 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 278/281
[m[m07.11.2021 - 16:19:12.372 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase integrationTest.SR34.SR34Test#youNeedToEscapeTheNullCharactersIfUsingNullAsEscape
[m[32m07.11.2021 - 16:19:12.372 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/integrationTest.SR34.SR34Test#youNeedToEscapeTheNullCharactersIfUsingNullAsEscape.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner integrationTest.SR34.SR34Test#youNeedToEscapeTheNullCharactersIfUsingNullAsEscape
[m[m07.11.2021 - 16:19:12.560 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:19:12.560 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/integrationTest.SR34.SR34Test#youNeedToEscapeTheNullCharactersIfUsingNullAsEscape.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/integrationTest.SR34.SR34Test#youNeedToEscapeTheNullCharactersIfUsingNullAsEscape/report.xml
[m[m07.11.2021 - 16:19:12.836 [INFO ] MethodCoverageStrategy.createReport() - Report for integrationTest.SR34.SR34Test#youNeedToEscapeTheNullCharactersIfUsingNullAsEscape was generated successfully
[m[m07.11.2021 - 16:19:12.836 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 279/281
[m[m07.11.2021 - 16:19:12.836 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.RFC4180ParserBuilderTest#testDefaultBuilder
[m[32m07.11.2021 - 16:19:12.836 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.RFC4180ParserBuilderTest#testDefaultBuilder.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.RFC4180ParserBuilderTest#testDefaultBuilder
[m[m07.11.2021 - 16:19:13.031 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:19:13.031 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.RFC4180ParserBuilderTest#testDefaultBuilder.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.RFC4180ParserBuilderTest#testDefaultBuilder/report.xml
[m[m07.11.2021 - 16:19:13.332 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.RFC4180ParserBuilderTest#testDefaultBuilder was generated successfully
[m[m07.11.2021 - 16:19:13.333 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 280/281
[m[m07.11.2021 - 16:19:13.333 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.RFC4180ParserBuilderTest#testWithSeparator
[m[32m07.11.2021 - 16:19:13.333 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.RFC4180ParserBuilderTest#testWithSeparator.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.RFC4180ParserBuilderTest#testWithSeparator
[m[m07.11.2021 - 16:19:13.532 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:19:13.532 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.RFC4180ParserBuilderTest#testWithSeparator.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.RFC4180ParserBuilderTest#testWithSeparator/report.xml
[m[m07.11.2021 - 16:19:13.781 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.RFC4180ParserBuilderTest#testWithSeparator was generated successfully
[m[m07.11.2021 - 16:19:13.781 [INFO ] MethodCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 281/281
[m[m07.11.2021 - 16:19:13.781 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase com.opencsv.RFC4180ParserBuilderTest#testWithQuoteChar
[m[32m07.11.2021 - 16:19:13.781 [DEBUG] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.RFC4180ParserBuilderTest#testWithQuoteChar.exec,includes=com.opencsv.* -cp /home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/lukas/workspace/master-jsr/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/lukas/workspace/master-benchmark/projects/opencsv/target/opencsv-3.9-cygri-fat-tests.jar SingleJUnitTestRunner com.opencsv.RFC4180ParserBuilderTest#testWithQuoteChar
[m[m07.11.2021 - 16:19:13.964 [INFO ] MethodCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m07.11.2021 - 16:19:13.964 [DEBUG] MethodCoverageStrategy.createReport() - Report generation command: java -jar /home/lukas/workspace/master-jsr/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.RFC4180ParserBuilderTest#testWithQuoteChar.exec --classfiles /home/lukas/workspace/master-benchmark/projects/opencsv/target/classes --sourcefiles /home/lukas/workspace/master-benchmark/projects/opencsv/src/main/java --xml /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/com.opencsv.RFC4180ParserBuilderTest#testWithQuoteChar/report.xml
[m[m07.11.2021 - 16:19:14.229 [INFO ] MethodCoverageStrategy.createReport() - Report for com.opencsv.RFC4180ParserBuilderTest#testWithQuoteChar was generated successfully
[m[m07.11.2021 - 16:19:14.230 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanFilterTest#testColumnNameTranslationWithLineFiltering
[m[m07.11.2021 - 16:19:14.281 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of integrationTest.isClosed.isClosedTest#issue115StandardReadFailsAfterALargeNumberOfReads
[m[m07.11.2021 - 16:19:14.300 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanDoubleTest#parseBeanWithNoAnnotations
[m[m07.11.2021 - 16:19:14.315 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testParseLine
[m[m07.11.2021 - 16:19:14.329 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#parseSimpleString
[m[m07.11.2021 - 16:19:14.343 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#parseSimpleQuotedString
[m[m07.11.2021 - 16:19:14.357 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#parseSimpleQuotedStringWithSpaces
[m[m07.11.2021 - 16:19:14.370 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testParsedLineWithInternalQuota
[m[m07.11.2021 - 16:19:14.383 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#parseQuotedStringWithCommas
[m[m07.11.2021 - 16:19:14.396 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#parseQuotedStringWithDefinedSeperator
[m[m07.11.2021 - 16:19:14.408 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#parseQuotedStringWithDefinedSeperatorAndQuote
[m[m07.11.2021 - 16:19:14.421 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#parseEmptyElements
[m[m07.11.2021 - 16:19:14.432 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#parseMultiLinedQuoted
[m[m07.11.2021 - 16:19:14.442 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#parseMultiLinedQuotedwithCarriageReturns
[m[m07.11.2021 - 16:19:14.453 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testADoubleQuoteAsDataElement
[m[m07.11.2021 - 16:19:14.462 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testEscapedDoubleQuoteAsDataElement
[m[m07.11.2021 - 16:19:14.470 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#parseQuotedQuoteCharacters
[m[m07.11.2021 - 16:19:14.479 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#parseMultipleQuotes
[m[m07.11.2021 - 16:19:14.487 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#parseTrickyString
[m[m07.11.2021 - 16:19:14.494 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testAMultiLineInsideQuotes
[m[m07.11.2021 - 16:19:14.501 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testStrictQuoteSimple
[m[m07.11.2021 - 16:19:14.509 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testNotStrictQuoteSimple
[m[m07.11.2021 - 16:19:14.516 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testStrictQuoteWithSpacesAndTabs
[m[m07.11.2021 - 16:19:14.523 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testNotStrictQuoteWithSpacesAndTabs
[m[m07.11.2021 - 16:19:14.530 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testStrictQuoteWithGarbage
[m[m07.11.2021 - 16:19:14.537 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testCanIgnoreQuotations
[m[m07.11.2021 - 16:19:14.548 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testFalseIgnoreQuotations
[m[m07.11.2021 - 16:19:14.555 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testIssue3314579
[m[m07.11.2021 - 16:19:14.562 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testIssue2263439
[m[m07.11.2021 - 16:19:14.569 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testIssue2859181
[m[m07.11.2021 - 16:19:14.576 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testIssue2726363
[m[m07.11.2021 - 16:19:14.583 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#anIOExceptionThrownifStringEndsInsideAQuotedString
[m[m07.11.2021 - 16:19:14.590 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#parseLineMultiAllowsQuotesAcrossMultipleLines
[m[m07.11.2021 - 16:19:14.597 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#pendingIsClearedAfterCallToParseLine
[m[m07.11.2021 - 16:19:14.603 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#returnPendingIfNullIsPassedIntoParseLineMulti
[m[m07.11.2021 - 16:19:14.610 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#spacesAtEndOfQuotedStringDoNotCountIfStrictQuotesIsTrue
[m[m07.11.2021 - 16:19:14.617 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#returnNullWhenNullPassedIn
[m[m07.11.2021 - 16:19:14.623 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#validateEscapeStringBeforeRealTest
[m[m07.11.2021 - 16:19:14.630 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#whichCharactersAreEscapable
[m[m07.11.2021 - 16:19:14.636 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#whitespaceBeforeEscape
[m[m07.11.2021 - 16:19:14.642 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testIssue2958242WithoutQuotes
[m[m07.11.2021 - 16:19:14.649 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#quoteAndEscapeCannotBeTheSame
[m[m07.11.2021 - 16:19:14.655 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#quoteAndEscapeCanBeTheSameIfNull
[m[m07.11.2021 - 16:19:14.662 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#separatorCharacterCannotBeNull
[m[m07.11.2021 - 16:19:14.668 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#separatorAndEscapeCannotBeTheSame
[m[m07.11.2021 - 16:19:14.674 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#separatorAndQuoteCannotBeTheSame
[m[m07.11.2021 - 16:19:14.681 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#parserHandlesNullInString
[m[m07.11.2021 - 16:19:14.687 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#featureRequest60ByDefaultEmptyFieldsAreBlank
[m[m07.11.2021 - 16:19:14.694 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#featureRequest60TreatEmptyFieldsAsNull
[m[m07.11.2021 - 16:19:14.700 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#featureRequest60TreatEmptyDelimitedFieldsAsNull
[m[m07.11.2021 - 16:19:14.706 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#featureRequest60TreatEmptyFieldsDelimitedOrNotAsNull
[m[m07.11.2021 - 16:19:14.713 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testStrictQuotesEndsFieldAtQuote
[m[m07.11.2021 - 16:19:14.719 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testStrictQuotesEndsFieldAtQuoteWithEscapedQuoteInMiddle
[m[m07.11.2021 - 16:19:14.725 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testNotStrictQuotesAllowsEmbeddedEscapedQuote
[m[m07.11.2021 - 16:19:14.732 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#testNotStrictQuotesAllowsEmbeddedQuote
[m[m07.11.2021 - 16:19:14.738 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserTest#issue93ParsingEmptyDoubleQuoteField
[m[m07.11.2021 - 16:19:14.744 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.BeanToCsvTest#throwRuntimeExceptionWhenExceptionIsThrown
[m[m07.11.2021 - 16:19:14.751 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.BeanToCsvTest#beanReturnsFalseOnEmptyList
[m[m07.11.2021 - 16:19:14.757 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.BeanToCsvTest#beanReturnsFalseOnNull
[m[m07.11.2021 - 16:19:14.763 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.BeanToCsvTest#testWriteQuotes
[m[m07.11.2021 - 16:19:14.770 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.BeanToCsvTest#writeBeansOneAtATime
[m[m07.11.2021 - 16:19:14.776 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.BeanToCsvTest#writeSingleBeanMethodReturnsFalseIfNullPassedIn
[m[m07.11.2021 - 16:19:14.782 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.BeanToCsvTest#handleException
[m[m07.11.2021 - 16:19:14.788 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.BeanToCsvTest#testWriteQuotesWithAnnotatedBean
[m[m07.11.2021 - 16:19:14.795 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.BeanToCsvTest#testWriteNulls
[m[m07.11.2021 - 16:19:14.801 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.BeanToCsvTest#testWriteNullsWithAnnotatedBean
[m[m07.11.2021 - 16:19:14.807 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.HeaderColumnNameMappingStrategyTest#getColumnIndexWithoutHeaderThrowsException
[m[m07.11.2021 - 16:19:14.813 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.HeaderColumnNameMappingStrategyTest#getColumnIndexAfterParse
[m[m07.11.2021 - 16:19:14.819 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testParse
[m[m07.11.2021 - 16:19:14.825 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testQuotedString
[m[m07.11.2021 - 16:19:14.831 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.HeaderColumnNameMappingStrategyTest#testParseWithSpacesInHeader
[m[m07.11.2021 - 16:19:14.837 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.HeaderColumnNameMappingStrategyTest#verifyColumnNames
[m[m07.11.2021 - 16:19:14.843 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.HeaderColumnNameMappingStrategyTest#throwsIllegalStateExceptionIfTypeNotSet
[m[m07.11.2021 - 16:19:14.850 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.TestUtilitiesTest#displayStringArray
[m[m07.11.2021 - 16:19:14.857 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.StatefulBeanToCsvTest#writeBadData
[m[m07.11.2021 - 16:19:14.864 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.StatefulBeanToCsvTest#writeGoodDataCustom
[m[m07.11.2021 - 16:19:14.871 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.StatefulBeanToCsvTest#writeBadDataCustom
[m[m07.11.2021 - 16:19:14.877 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVIteratorTest#readerExceptionCausesRunTimeException
[m[m07.11.2021 - 16:19:14.884 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVIteratorTest#removethrowsUnsupportedOperationException
[m[m07.11.2021 - 16:19:14.891 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVIteratorTest#initialReadReturnsStrings
[m[m07.11.2021 - 16:19:14.900 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVIteratorTest#hasNextWorks
[m[m07.11.2021 - 16:19:14.906 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderBuilderTest#testDefaultBuilder
[m[m07.11.2021 - 16:19:14.912 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderBuilderTest#testNullReader
[m[m07.11.2021 - 16:19:14.918 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderBuilderTest#testWithCSVParserNull
[m[m07.11.2021 - 16:19:14.924 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderBuilderTest#testWithCSVParser
[m[m07.11.2021 - 16:19:14.930 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderBuilderTest#testWithSkipLines
[m[m07.11.2021 - 16:19:14.935 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderBuilderTest#testWithKeepCR
[m[m07.11.2021 - 16:19:14.941 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderBuilderTest#testWithSkipLinesZero
[m[m07.11.2021 - 16:19:14.947 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderBuilderTest#testWithSkipLinesNegative
[m[m07.11.2021 - 16:19:14.953 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderBuilderTest#testWithVerifyReader
[m[m07.11.2021 - 16:19:14.959 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderBuilderTest#builderWithNullFieldIndicator
[m[m07.11.2021 - 16:19:14.965 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#testParseLine
[m[m07.11.2021 - 16:19:14.971 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#readerCanHandleNullInString
[m[m07.11.2021 - 16:19:14.977 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#testParseLineStrictQuote
[m[m07.11.2021 - 16:19:14.983 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#testParseAll
[m[m07.11.2021 - 16:19:14.988 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#testOptionalConstructors
[m[m07.11.2021 - 16:19:14.994 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#parseQuotedStringWithDefinedSeperator
[m[m07.11.2021 - 16:19:15.000 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#testSkippingLines
[m[m07.11.2021 - 16:19:15.006 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#linesAndRecordsRead
[m[m07.11.2021 - 16:19:15.011 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#testSkippingLinesWithDifferentEscape
[m[m07.11.2021 - 16:19:15.017 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#testNormalParsedLine
[m[m07.11.2021 - 16:19:15.023 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#testASingleQuoteAsDataElement
[m[m07.11.2021 - 16:19:15.028 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#testASingleQuoteAsDataElementWithEmptyField
[m[m07.11.2021 - 16:19:15.034 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#testSpacesAtEndOfString
[m[m07.11.2021 - 16:19:15.040 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#testEscapedQuote
[m[m07.11.2021 - 16:19:15.045 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#testEscapedEscape
[m[m07.11.2021 - 16:19:15.051 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#testSingleQuoteWhenDoubleQuoteIsQuoteChar
[m[m07.11.2021 - 16:19:15.057 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#testQuotedParsedLine
[m[m07.11.2021 - 16:19:15.062 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#bug106ParseLineWithCarriageReturnNewLineStrictQuotes
[m[m07.11.2021 - 16:19:15.068 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#testIssue2992134OutOfPlaceQuotes
[m[m07.11.2021 - 16:19:15.074 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#quoteAndEscapeMustBeDifferent
[m[m07.11.2021 - 16:19:15.079 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#separatorAndEscapeMustBeDifferent
[m[m07.11.2021 - 16:19:15.085 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#separatorAndQuoteMustBeDifferent
[m[m07.11.2021 - 16:19:15.091 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#testIteratorFunctionality
[m[m07.11.2021 - 16:19:15.096 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#canCloseReader
[m[m07.11.2021 - 16:19:15.102 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#canCreateIteratorFromReader
[m[m07.11.2021 - 16:19:15.108 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#attemptToReadCloseStreamReturnsNull
[m[m07.11.2021 - 16:19:15.113 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#testIssue102
[m[m07.11.2021 - 16:19:15.119 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#issue108ReaderPlaysWellWithChannels
[m[m07.11.2021 - 16:19:15.125 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#featureRequest60ByDefaultEmptyFieldsAreBlank
[m[m07.11.2021 - 16:19:15.130 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#featureRequest60TreatEmptyFieldsAsNull
[m[m07.11.2021 - 16:19:15.136 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#featureRequest60TreatEmptyDelimitedFieldsAsNull
[m[m07.11.2021 - 16:19:15.141 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVReaderTest#featureRequest60TreatEmptyFieldsDelimitedOrNotAsNull
[m[m07.11.2021 - 16:19:15.147 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.stream.reader.LineReaderTest#lineReaderWillKeepCR
[m[m07.11.2021 - 16:19:15.153 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.stream.reader.LineReaderTest#lineReaderWillRemoveCR
[m[m07.11.2021 - 16:19:15.158 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.stream.reader.LineReaderTest#lineReaderKeepingCRWillHandleStringWithNoLinefeed
[m[m07.11.2021 - 16:19:15.164 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.stream.reader.LineReaderTest#lineReaderNoCRWillHandleStringWithNoLinefeed
[m[m07.11.2021 - 16:19:15.170 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.stream.reader.LineReaderTest#lineReaderKeepingCRWillHandleEmptyString
[m[m07.11.2021 - 16:19:15.175 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.stream.reader.LineReaderTest#lineReaderNoCRWillHandleEmptyString
[m[m07.11.2021 - 16:19:15.181 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.AnnotationTest#testGoodDataByName
[m[m07.11.2021 - 16:19:15.187 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.AnnotationTest#testGoodDataByPosition
[m[m07.11.2021 - 16:19:15.192 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.AnnotationTest#testGoodDataCustomByName
[m[m07.11.2021 - 16:19:15.198 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.AnnotationTest#testGoodDataCustomByPosition
[m[m07.11.2021 - 16:19:15.203 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.AnnotationTest#testCase7
[m[m07.11.2021 - 16:19:15.209 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.AnnotationTest#testCase51
[m[m07.11.2021 - 16:19:15.217 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.AnnotationTest#testCase11
[m[m07.11.2021 - 16:19:15.222 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.AnnotationTest#testCase55
[m[m07.11.2021 - 16:19:15.228 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.AnnotationTest#testCase21
[m[m07.11.2021 - 16:19:15.233 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.AnnotationTest#testCase63
[m[m07.11.2021 - 16:19:15.239 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.AnnotationTest#testBadDataByName
[m[m07.11.2021 - 16:19:15.244 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.AnnotationTest#testCase16
[m[m07.11.2021 - 16:19:15.250 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.AnnotationTest#testCase60
[m[m07.11.2021 - 16:19:15.256 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.AnnotationTest#testBadDataCustomByName
[m[m07.11.2021 - 16:19:15.261 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.AnnotationTest#testBadConverter
[m[m07.11.2021 - 16:19:15.267 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.AnnotationTest#codeCoverageExceptions
[m[m07.11.2021 - 16:19:15.272 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.IterableCSVToBeanTest#nextLine
[m[m07.11.2021 - 16:19:15.278 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.IterableCSVToBeanTest#nextLineWithFilter
[m[m07.11.2021 - 16:19:15.283 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.IterableCSVToBeanTest#readWithIterator
[m[m07.11.2021 - 16:19:15.289 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.IterableCSVToBeanTest#readWithIteratorAndFilter
[m[m07.11.2021 - 16:19:15.294 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.OpencsvTest#testWriteRead
[m[m07.11.2021 - 16:19:15.300 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#testParse
[m[m07.11.2021 - 16:19:15.306 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#getColumnNameReturnsNullIfColumnNumberIsTooLarge
[m[m07.11.2021 - 16:19:15.311 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.HeaderColumnNameTranslateMappingStrategyTest#columnNameMappingShouldBeCaseInsensitive
[m[m07.11.2021 - 16:19:15.317 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#correctlyParseNullString
[m[m07.11.2021 - 16:19:15.322 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#correctlyParserNullObject
[m[m07.11.2021 - 16:19:15.328 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testParseLine
[m[m07.11.2021 - 16:19:15.333 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testSpecialCharacters
[m[m07.11.2021 - 16:19:15.339 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#parseLineWithBothEscapeAndQuoteChar
[m[m07.11.2021 - 16:19:15.344 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testParseLineWithNoEscapeChar
[m[m07.11.2021 - 16:19:15.350 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#parseLineWithNoEscapeCharAndQuotes
[m[m07.11.2021 - 16:19:15.356 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testWriteAllAsList
[m[m07.11.2021 - 16:19:15.361 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testWriteAllAsIterable
[m[m07.11.2021 - 16:19:15.367 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testWriteAllObjects
[m[m07.11.2021 - 16:19:15.372 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testNoQuoteChars
[m[m07.11.2021 - 16:19:15.378 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testNoQuoteCharsAndNoEscapeChars
[m[m07.11.2021 - 16:19:15.383 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testIntelligentQuotes
[m[m07.11.2021 - 16:19:15.389 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testNullValues
[m[m07.11.2021 - 16:19:15.395 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testStreamFlushing
[m[m07.11.2021 - 16:19:15.400 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#flushWillThrowIOException
[m[m07.11.2021 - 16:19:15.406 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#flushQuietlyWillNotThrowException
[m[m07.11.2021 - 16:19:15.411 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testAlternateEscapeChar
[m[m07.11.2021 - 16:19:15.417 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#embeddedQuoteInString
[m[m07.11.2021 - 16:19:15.422 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testNoQuotingNoEscaping
[m[m07.11.2021 - 16:19:15.428 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testNestedQuotes
[m[m07.11.2021 - 16:19:15.433 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testAlternateLineFeeds
[m[m07.11.2021 - 16:19:15.439 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testResultSetWithHeaders
[m[m07.11.2021 - 16:19:15.444 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testMultiLineResultSetWithHeaders
[m[m07.11.2021 - 16:19:15.450 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testResultSetWithoutHeaders
[m[m07.11.2021 - 16:19:15.455 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testMultiLineResultSetWithoutHeaders
[m[m07.11.2021 - 16:19:15.461 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testResultSetTrim
[m[m07.11.2021 - 16:19:15.466 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#needToSetBothQuoteAndEscapeCharIfYouWantThemToBeTheSame
[m[m07.11.2021 - 16:19:15.472 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#issue123SeparatorEscapedWhenQuoteIsNoQuoteChar
[m[m07.11.2021 - 16:19:15.478 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#issue123SeparatorEscapedWhenQuoteIsNoQuoteCharSpecifingNoneDefaultEscapeChar
[m[m07.11.2021 - 16:19:15.483 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#testIOException
[m[m07.11.2021 - 16:19:15.489 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVWriterTest#checkErrorReturnsTrueWhenPassedInPrintWriter
[m[m07.11.2021 - 16:19:15.494 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenExceptionIsThrown
[m[m07.11.2021 - 16:19:15.500 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionLineWhenExceptionIsThrown
[m[m07.11.2021 - 16:19:15.505 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanTest#parseBeanWithNoAnnotations
[m[m07.11.2021 - 16:19:15.511 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanTest#parseBeanWithAnnotations
[m[m07.11.2021 - 16:19:15.519 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanTest#parseBeanWithSomeAnnotations
[m[m07.11.2021 - 16:19:15.524 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithAllValidDataTypes
[m[m07.11.2021 - 16:19:15.530 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithPrivateField
[m[m07.11.2021 - 16:19:15.536 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanTest#parseAnnotatedBeanWithFieldsOfAllAccessModifierTypes
[m[m07.11.2021 - 16:19:15.542 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanTest#bug133ShouldNotThrowNullPointerExceptionWhenProcessingEmptyWithNoAnnotations
[m[m07.11.2021 - 16:19:15.547 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenUnsupportedDataTypeUsedInAnnotatedBean
[m[m07.11.2021 - 16:19:15.553 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanTest#throwRuntimeExceptionWhenRequiredFieldNotProvidedInAnnotatedBean
[m[m07.11.2021 - 16:19:15.558 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenParseWithoutArgumentsIsCalled
[m[m07.11.2021 - 16:19:15.564 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenOnlyReaderIsSpecifiedToParseWithoutArguments
[m[m07.11.2021 - 16:19:15.569 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenOnlyMapperIsSpecifiedToParseWithoutArguments
[m[m07.11.2021 - 16:19:15.575 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenReaderNotProvidedInBuilder
[m[m07.11.2021 - 16:19:15.581 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanTest#throwIllegalStateWhenTypeAndMapperNotProvidedInBuilder
[m[m07.11.2021 - 16:19:15.586 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanTest#testMinimumBuilder
[m[m07.11.2021 - 16:19:15.592 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanTest#testMaximumBuilder
[m[m07.11.2021 - 16:19:15.598 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanTest#testColumnMappingStrategyWithBuilder
[m[m07.11.2021 - 16:19:15.604 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.CsvToBeanTest#testMappingWithoutAnnotationsWithBuilder
[m[m07.11.2021 - 16:19:15.610 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#canPrintColumnNames
[m[m07.11.2021 - 16:19:15.616 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#getObjectFromResultSet
[m[m07.11.2021 - 16:19:15.622 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#getBitFromResultSet
[m[m07.11.2021 - 16:19:15.628 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#getBooleanFromResultSet
[m[m07.11.2021 - 16:19:15.634 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#getBigIntFromResultSet
[m[m07.11.2021 - 16:19:15.640 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#getBigDecimalFromResultSet
[m[m07.11.2021 - 16:19:15.646 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#issue121ConvertingNaNForDoubleOrFloat
[m[m07.11.2021 - 16:19:15.651 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#issue121ConvertingPositiveInfinityForDoubleOrFloat
[m[m07.11.2021 - 16:19:15.657 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#issue121ConvertingNegativeInfinityForDoubleOrFloat
[m[m07.11.2021 - 16:19:15.663 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#getIntegerFromResultSet
[m[m07.11.2021 - 16:19:15.669 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#getCharFromResultSet
[m[m07.11.2021 - 16:19:15.674 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#getCharHandlesNulls
[m[m07.11.2021 - 16:19:15.680 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#getUnsupportedFromResultSet
[m[m07.11.2021 - 16:19:15.686 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#getDateFromResultSet
[m[m07.11.2021 - 16:19:15.692 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#getDateFromResultSetUsingCustomFormat
[m[m07.11.2021 - 16:19:15.697 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#setDateFormat
[m[m07.11.2021 - 16:19:15.703 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#getTimeFromResultSet
[m[m07.11.2021 - 16:19:15.709 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#getTimestampFromResultSet
[m[m07.11.2021 - 16:19:15.715 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#getTimestampFromResultSetWithCustomFormat
[m[m07.11.2021 - 16:19:15.721 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#setDateTimeFormat
[m[m07.11.2021 - 16:19:15.727 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#getClobFromResultSet
[m[m07.11.2021 - 16:19:15.732 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#getEmptyClobFromResultSet
[m[m07.11.2021 - 16:19:15.738 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetHelperServiceTest#getLargeClobFromResultSet
[m[m07.11.2021 - 16:19:15.744 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.UniCodeTest#canParseUnicode
[m[m07.11.2021 - 16:19:15.750 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.UniCodeTest#readerTest
[m[m07.11.2021 - 16:19:15.755 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.UniCodeTest#writerTest
[m[m07.11.2021 - 16:19:15.761 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.UniCodeTest#runUniCodeThroughCSVReader
[m[m07.11.2021 - 16:19:15.767 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.UniCodeTest#runUniCodeThroughCSVWriter
[m[m07.11.2021 - 16:19:15.772 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.UniCodeTest#runASCIIThroughCSVWriter
[m[m07.11.2021 - 16:19:15.778 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.UniCodeTest#writeThenReadAscii
[m[m07.11.2021 - 16:19:15.783 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.UniCodeTest#writeThenReadTwiceAscii
[m[m07.11.2021 - 16:19:15.789 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.UniCodeTest#writeThenReadTwiceUnicode
[m[m07.11.2021 - 16:19:15.795 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.UniCodeTest#writeThenReadTwiceMixedUnicode
[m[m07.11.2021 - 16:19:15.800 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserBuilderTest#testDefaultBuilder
[m[m07.11.2021 - 16:19:15.806 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserBuilderTest#testWithSeparator
[m[m07.11.2021 - 16:19:15.811 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserBuilderTest#testWithQuoteChar
[m[m07.11.2021 - 16:19:15.817 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserBuilderTest#testWithEscapeChar
[m[m07.11.2021 - 16:19:15.823 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserBuilderTest#testWithStrictQuotes
[m[m07.11.2021 - 16:19:15.831 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserBuilderTest#testWithIgnoreLeadingWhiteSpace
[m[m07.11.2021 - 16:19:15.837 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.CSVParserBuilderTest#testWithIgnoreQuotations
[m[m07.11.2021 - 16:19:15.842 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndexBeforeMappingSetReturnsNull
[m[m07.11.2021 - 16:19:15.848 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndexEmptyMappingReturnsNull
[m[m07.11.2021 - 16:19:15.854 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnIndex
[m[m07.11.2021 - 16:19:15.859 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.ColumnPositionMappingStrategyTest#testParse
[m[m07.11.2021 - 16:19:15.865 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.ColumnPositionMappingStrategyTest#testParseWithTrailingSpaces
[m[m07.11.2021 - 16:19:15.871 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnMapping
[m[m07.11.2021 - 16:19:15.877 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnNames
[m[m07.11.2021 - 16:19:15.882 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.ColumnPositionMappingStrategyTest#testGetColumnNamesArray
[m[m07.11.2021 - 16:19:15.888 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenNullArray
[m[m07.11.2021 - 16:19:15.894 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenNullColumnName
[m[m07.11.2021 - 16:19:15.899 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.ColumnPositionMappingStrategyTest#getColumnNamesWhenEmptyMapping
[m[m07.11.2021 - 16:19:15.905 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.bean.ColumnPositionMappingStrategyTest#throwsIllegalStateExceptionIfTypeNotSet
[m[m07.11.2021 - 16:19:15.911 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetColumnNameHelperServiceTest#canPrintColumnNames
[m[m07.11.2021 - 16:19:15.916 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetColumnNameHelperServiceTest#setColumnNames
[m[m07.11.2021 - 16:19:15.922 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetColumnNameHelperServiceTest#getColumnNamesWithSubsetOutOfOrder
[m[m07.11.2021 - 16:19:15.928 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetColumnNameHelperServiceTest#numberOfColumnsNamesMustMatchNumberOfHeaders
[m[m07.11.2021 - 16:19:15.933 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveNullColumnName
[m[m07.11.2021 - 16:19:15.939 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveEmptyColumnName
[m[m07.11.2021 - 16:19:15.944 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveSpaceColumnName
[m[m07.11.2021 - 16:19:15.950 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveNullHeaderName
[m[m07.11.2021 - 16:19:15.956 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveEmptyHeaderName
[m[m07.11.2021 - 16:19:15.961 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetColumnNameHelperServiceTest#cannotHaveSpaceHeaderName
[m[m07.11.2021 - 16:19:15.967 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetColumnNameHelperServiceTest#getColumnNamesThrowsExceptionIfColumnDoesNotExist
[m[m07.11.2021 - 16:19:15.972 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetColumnNameHelperServiceTest#getBooleanFromResultSet
[m[m07.11.2021 - 16:19:15.978 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetColumnNameHelperServiceTest#getBooleanSubsetFromResultSet
[m[m07.11.2021 - 16:19:15.983 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetColumnNameHelperServiceTest#getSubsetWithTrim
[m[m07.11.2021 - 16:19:15.989 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetColumnNameHelperServiceTest#getCharSetWithNullAndTrim
[m[m07.11.2021 - 16:19:15.995 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetColumnNameHelperServiceTest#getTimestampFromResultSetWithCustomFormat
[m[m07.11.2021 - 16:19:16.000 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.ResultSetColumnNameHelperServiceTest#getSubsetFromResultSetWithCustomFormat
[m[m07.11.2021 - 16:19:16.006 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of integrationTest.SR34.SR34Test#defaultReaderInterpetsNullCorrectly
[m[m07.11.2021 - 16:19:16.011 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of integrationTest.SR34.SR34Test#doubleBufferedReaderInterpetsNullCorrectly
[m[m07.11.2021 - 16:19:16.017 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of integrationTest.SR34.SR34Test#usingNullAsDelimeterWillFailBecauseYouAreEscapingTheQuote
[m[m07.11.2021 - 16:19:16.022 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of integrationTest.SR34.SR34Test#youNeedToEscapeTheNullCharactersIfUsingNullAsEscape
[m[m07.11.2021 - 16:19:16.028 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.RFC4180ParserBuilderTest#testDefaultBuilder
[m[m07.11.2021 - 16:19:16.033 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.RFC4180ParserBuilderTest#testWithSeparator
[m[m07.11.2021 - 16:19:16.039 [INFO ] MethodCoverageStrategy.parseXmlReport() - Reading report of com.opencsv.RFC4180ParserBuilderTest#testWithQuoteChar
[m[m07.11.2021 - 16:19:16.046 [INFO ] MethodCoverageStrategy.assembleReport() - Successfully created coverage report: 317 of 345 methods covered. Coverage score: 0.9188405797101449
[m[32m07.11.2021 - 16:19:16.089 [DEBUG] MethodCoverageStrategy.cleanup() - Cleanup successful!
[m[m07.11.2021 - 16:19:16.180 [INFO ] CoverageReportExporter.exportToFile() - Wrote coverage report to file /home/lukas/workspace/master-benchmark/results/opencsv/mc/coverage/MethodCoverageReport.cvg
[m* Coverage Calculation took 146.873 seconds
